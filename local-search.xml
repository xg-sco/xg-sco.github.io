<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker</title>
    <link href="/Java/Docker/"/>
    <url>/Java/Docker/</url>
    
    <content type="html"><![CDATA[<h1 id="0-安装-Docker"><a href="#0-安装-Docker" class="headerlink" title="0.安装 Docker"></a>0.安装 Docker</h1><p>Docker 分为 CE 和 EE 两大版本。CE 即社区版（免费，支持周期 7 个月），EE 即企业版，强调安全，付费使用，支持周期 24 个月。</p><p>Docker CE 分为 <code>stable</code> <code>test</code> 和 <code>nightly</code> 三个更新频道。</p><p>官方网站上有各种环境下的 <a href="https://docs.docker.com/install/">安装指南</a>，这里主要介绍 Docker CE 在 CentOS 上的安装。</p><h1 id="1-CentOS-安装-Docker"><a href="#1-CentOS-安装-Docker" class="headerlink" title="1.CentOS 安装 Docker"></a>1.CentOS 安装 Docker</h1><p>Docker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10， CentOS 7 满足最低内核的要求，所以我们在 CentOS 7 安装 Docker。</p><h2 id="1-1-卸载（可选）"><a href="#1-1-卸载（可选）" class="headerlink" title="1.1.卸载（可选）"></a>1.1.卸载（可选）</h2><p>如果之前安装过旧版本的 Docker，可以使用下面命令卸载：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs livescript">yum remove docker <span class="hljs-string">\</span><br>                  docker-client <span class="hljs-string">\</span><br>                  docker-client-latest <span class="hljs-string">\</span><br>                  docker-common <span class="hljs-string">\</span><br>                  docker-latest <span class="hljs-string">\</span><br>                  docker-latest-logrotate <span class="hljs-string">\</span><br>                  docker-logrotate <span class="hljs-string">\</span><br>                  docker-selinux <span class="hljs-string">\</span><br>                  docker-engine-selinux <span class="hljs-string">\</span><br>                  docker-engine <span class="hljs-string">\</span><br>                  docker-ce<br></code></pre></td></tr></table></figure><h2 id="1-2-安装-docker"><a href="#1-2-安装-docker" class="headerlink" title="1.2.安装 docker"></a>1.2.安装 docker</h2><p>首先需要大家虚拟机联网，安装 yum 工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y yum-utils \<br>           device-mapper-persistent-data \<br>           lvm2 --skip-broken<br></code></pre></td></tr></table></figure><p>然后更新本地镜像源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">设置docker镜像源</span><br>yum-config-manager \<br>    --add-repo \<br>    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br><br>sed -i &#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27; /etc/yum.repos.d/docker-ce.repo<br><br>yum makecache fast<br></code></pre></td></tr></table></figure><p>然后输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y docker-ce<br></code></pre></td></tr></table></figure><p>docker-ce 为社区免费版本。稍等片刻，docker 即可安装成功。</p><h2 id="1-3-启动-docker"><a href="#1-3-启动-docker" class="headerlink" title="1.3.启动 docker"></a>1.3.启动 docker</h2><p>Docker 应用需要用到各种端口，逐一去修改防火墙设置。非常麻烦，因此建议大家直接关闭防火墙！</p><p>启动 docker 前，一定要关闭防火墙后！！</p><p>启动 docker 前，一定要关闭防火墙后！！</p><p>启动 docker 前，一定要关闭防火墙后！！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">关闭</span><br>systemctl stop firewalld<br><span class="hljs-meta prompt_"># </span><span class="language-bash">禁止开机启动防火墙</span><br>systemctl disable firewalld<br></code></pre></td></tr></table></figure><p>通过命令启动 docker：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start docker  # 启动docker服务<br><br>systemctl stop docker  # 停止docker服务<br><br>systemctl restart docker  # 重启docker服务<br></code></pre></td></tr></table></figure><p>然后输入命令，可以查看 docker 版本：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker -v</span><br></code></pre></td></tr></table></figure><p>如图：<br><img src="http://cdn.xiamu.icu//Fmx_08MNIIxqu37SAdf51aE9QRqO.png"></p><h2 id="1-4-配置镜像加速"><a href="#1-4-配置镜像加速" class="headerlink" title="1.4.配置镜像加速"></a>1.4.配置镜像加速</h2><p>docker 官方镜像仓库网速较差，我们需要设置国内镜像服务：</p><p>参考阿里云的镜像加速文档：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo mkdir -p <span class="hljs-regexp">/etc/</span>docker<br>sudo tee <span class="hljs-regexp">/etc/</span>docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://ylmjgfp5.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><h1 id="2-CentOS7-安装-DockerCompose"><a href="#2-CentOS7-安装-DockerCompose" class="headerlink" title="2.CentOS7 安装 DockerCompose"></a>2.CentOS7 安装 DockerCompose</h1><h2 id="2-1-下载"><a href="#2-1-下载" class="headerlink" title="2.1.下载"></a>2.1.下载</h2><p>Linux 下需要通过命令下载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装</span><br>curl -L https://github.com/docker/compose/releases/download/1.23.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>如果下载速度较慢，或者下载失败，可以使用课前资料提供的 docker-compose 文件：</p><p><img src="/assets/image-20210417133020614.png"></p><p>上传到<code>/usr/local/bin/</code>目录也可以。</p><h2 id="2-2-修改文件权限"><a href="#2-2-修改文件权限" class="headerlink" title="2.2.修改文件权限"></a>2.2.修改文件权限</h2><p>修改文件权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">修改权限</span><br>chmod +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><h2 id="2-3-Base-自动补全命令："><a href="#2-3-Base-自动补全命令：" class="headerlink" title="2.3.Base 自动补全命令："></a>2.3.Base 自动补全命令：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">补全命令</span><br>curl -L https://raw.githubusercontent.com/docker/compose/1.29.1/contrib/completion/bash/docker-compose &gt; /etc/bash_completion.d/docker-compose<br></code></pre></td></tr></table></figure><p>如果这里出现错误，需要修改自己的 hosts 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;199.232.68.133 raw.githubusercontent.com&quot; &gt;&gt; /etc/hosts<br></code></pre></td></tr></table></figure><h1 id="3-Docker-镜像仓库"><a href="#3-Docker-镜像仓库" class="headerlink" title="3.Docker 镜像仓库"></a>3.Docker 镜像仓库</h1><p>搭建镜像仓库可以基于 Docker 官方提供的 DockerRegistry 来实现。</p><p>官网地址：<a href="https://hub.docker.com/_/registry">https://hub.docker.com/_&#x2F;registry</a></p><h2 id="3-1-简化版镜像仓库"><a href="#3-1-简化版镜像仓库" class="headerlink" title="3.1.简化版镜像仓库"></a>3.1.简化版镜像仓库</h2><p>Docker 官方的 Docker Registry 是一个基础版本的 Docker 镜像仓库，具备仓库管理的完整功能，但是没有图形化界面。</p><p>搭建方式比较简单，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d \<br>    --restart=always \<br>    --name registry\<br>    -p 5000:5000 \<br>    -v registry-data:/var/lib/registry \<br>    registry<br></code></pre></td></tr></table></figure><p>命令中挂载了一个数据卷 registry-data 到容器内的&#x2F;var&#x2F;lib&#x2F;registry 目录，这是私有镜像库存放数据的目录。</p><p>访问 <a href="http://yourip:5000/v2//_catalog">http://YourIp:5000/v2/\_catalog</a> 可以查看当前私有镜像服务中包含的镜像</p><h2 id="3-2-带有图形化界面版本"><a href="#3-2-带有图形化界面版本" class="headerlink" title="3.2.带有图形化界面版本"></a>3.2.带有图形化界面版本</h2><p>使用 DockerCompose 部署带有图象界面的 DockerRegistry，命令如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&quot;3.0&quot;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">registry:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">registry</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./registry-data:/var/lib/registry</span><br>  <span class="hljs-attr">ui:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">joxit/docker-registry-ui:static</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:80</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">REGISTRY_TITLE=传智教育私有仓库</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">REGISTRY_URL=http://registry:5000</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">registry</span><br></code></pre></td></tr></table></figure><h2 id="3-3-配置-Docker-信任地址"><a href="#3-3-配置-Docker-信任地址" class="headerlink" title="3.3.配置 Docker 信任地址"></a>3.3.配置 Docker 信任地址</h2><p>我们的私服采用的是 http 协议，默认不被 Docker 信任，所以需要做一个配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">打开要修改的文件</span><br>vi /etc/docker/daemon.json<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加内容：</span><br>&quot;insecure-registries&quot;:[&quot;http://192.168.150.101:8080&quot;]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重加载</span><br>systemctl daemon-reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启docker</span><br>systemctl restart docker<br></code></pre></td></tr></table></figure><h1 id="4-Docker-基本操作"><a href="#4-Docker-基本操作" class="headerlink" title="4.Docker 基本操作"></a>4.Docker 基本操作</h1><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><h4 id="帮助文档"><a href="#帮助文档" class="headerlink" title="帮助文档"></a>帮助文档</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><br>docker --<span class="hljs-keyword">help</span><br>docker <span class="hljs-keyword">save</span> --<span class="hljs-keyword">help</span><br></code></pre></td></tr></table></figure><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><p>从 DockerHub 拉取一个 nginx 镜像并查看<br>从<a href="https://hub.docker.com/">Docker</a>搜索 nginx</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker pull nginx</span><br><br></code></pre></td></tr></table></figure><h4 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h4><p>查看拉取到的镜像</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker images</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FrYRKjCTiZJDOZ0ATUF2tfUD1iCI.png"></p><h4 id="打包镜像"><a href="#打包镜像" class="headerlink" title="打包镜像"></a>打包镜像</h4><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">docker <span class="hljs-keyword">save</span> -o nginx.tar nginx:latest<br></code></pre></td></tr></table></figure><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> images<br>docker rmi nginx:latest<br>docker images<br><br></code></pre></td></tr></table></figure><h4 id="加载镜像"><a href="#加载镜像" class="headerlink" title="加载镜像"></a>加载镜像</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker load -<span class="hljs-selector-tag">i</span> nginx<span class="hljs-selector-class">.tar</span><br>docker images<br><br></code></pre></td></tr></table></figure><h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><h4 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run --name mn -p <span class="hljs-number">80</span>:<span class="hljs-number">80</span> -d nginx<br></code></pre></td></tr></table></figure><p>容器运行完成之后会产生一个唯一的 id</p><h4 id="查看容器运行状态"><a href="#查看容器运行状态" class="headerlink" title="查看容器运行状态"></a>查看容器运行状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@xiamu ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID   IMAGE     COMMAND                   CREATED          STATUS          PORTS                               NAMES<br>1276f236aab4   nginx     <span class="hljs-string">&quot;/docker-entrypoint.…&quot;</span>   33 seconds ago   Up 32 seconds   0.0.0.0:80-&gt;80/tcp,&lt;/div&gt;80-&gt;80/tcp   mn<br><br></code></pre></td></tr></table></figure><h4 id="查看容器的日志"><a href="#查看容器的日志" class="headerlink" title="查看容器的日志"></a>查看容器的日志</h4><p>记得加上容器的名称 mn</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docker</span> logs mn<br><br>docker logs mn -f<br><span class="hljs-comment"># -f表示持续输出日志信息</span><br></code></pre></td></tr></table></figure><p>nginx 启动成功, 能够正常访问<br><img src="http://cdn.xiamu.icu//FqvMNK6SXwTcAj_IHKD5NPi4Xhbn.png"></p><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it mn bash<br><br><span class="hljs-comment"># 容器内存在linux常用的命令, 但是没有vi,</span><br><span class="hljs-comment"># 所以不能修改容器内部的文件, 并且我们也不建议去修改容器内的文件</span><br><span class="hljs-built_in">pwd</span><br><span class="hljs-built_in">ls</span><br><span class="hljs-built_in">cd</span><br></code></pre></td></tr></table></figure><h4 id="进入-nginx-目录"><a href="#进入-nginx-目录" class="headerlink" title="进入 nginx 目录"></a>进入 nginx 目录</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">find / -name nginx<br>cd <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html<br><br><span class="hljs-comment"># 我们可以使用sed来修改容器内的内容, 但是还是建议尽量不要修改容器内的东西</span><br>sed -i -e <span class="hljs-string">&#x27;s#Welcome to nginx#传智教育欢迎您#g&#x27;</span> -e <span class="hljs-string">&#x27;s#&lt;head&gt;#&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;#g&#x27;</span> index.html<br></code></pre></td></tr></table></figure><p>修改完成之后页面也发生了变化<br><img src="http://cdn.xiamu.icu//FlVzpGCbBO98f0aCqCjY1yD-mtzU.png"></p><h4 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h4 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">docker <span class="hljs-built_in">stop</span> mn<br><br><span class="hljs-comment"># 表示查看当前正在运行的容器</span><br>docker ps<br><br><span class="hljs-comment"># -a表示查看所有的容器</span><br>docker ps -<span class="hljs-keyword">a</span><br></code></pre></td></tr></table></figure><h4 id="开启容器"><a href="#开启容器" class="headerlink" title="开启容器"></a>开启容器</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker <span class="hljs-literal">start</span> mn<br></code></pre></td></tr></table></figure><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><p>注意我们无法删除一个正在运行的容器, 我们得先把容器停止了, 再删除, 或者使用-f 强制删除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">docker stop mn<br>docker <span class="hljs-built_in">rm</span> mn<br><br>docker <span class="hljs-built_in">rm</span> mn <span class="hljs-operator">-f</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python基本语法</title>
    <link href="/uncategorized/python%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <url>/uncategorized/python%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h2><h4 id="大小写-12-题"><a href="#大小写-12-题" class="headerlink" title="大小写 12 题"></a>大小写 12 题</h4><p>.lower() — 全部小写<br>.upper() — 全部大写<br>.title() — 各个字符的首字母大写<br>.capitalize() — 首字母大写</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">name = <span class="hljs-selector-tag">input</span>()<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(name.lower()</span></span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(name.upper()</span></span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(name.title()</span></span>)<br></code></pre></td></tr></table></figure><h4 id="去除空格"><a href="#去除空格" class="headerlink" title="去除空格"></a>去除空格</h4><p>.strip() — 删除两边空格<br>.lstrip() — 删除左边空格<br>.rstrip() — 删除右边空格<br>.replace(“ “,””) — 删除所有空格<br>.split() — 先切分，””.join() — 再拼接</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(input()</span></span><span class="hljs-selector-class">.strip</span>())<br></code></pre></td></tr></table></figure><h4 id="不用循环语句的重复输出"><a href="#不用循环语句的重复输出" class="headerlink" title="不用循环语句的重复输出"></a>不用循环语句的重复输出</h4><p>使用*可以重复输出这段字符串</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-title">input</span>() * <span class="hljs-number">100</span>)</span><br></code></pre></td></tr></table></figure><h4 id="截取字符串前-10-个字符"><a href="#截取字符串前-10-个字符" class="headerlink" title="截取字符串前 10 个字符"></a>截取字符串前 10 个字符</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(input()</span></span><span class="hljs-selector-attr">[0:10]</span>)<br></code></pre></td></tr></table></figure><h4 id="list-列表的添加和移除"><a href="#list-列表的添加和移除" class="headerlink" title="list 列表的添加和移除"></a>list 列表的添加和移除</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stylus">offer_list = <span class="hljs-selector-attr">[<span class="hljs-string">&#x27;Allen&#x27;</span>, <span class="hljs-string">&#x27;Tom&#x27;</span>]</span><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> offer_list:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125;, you have passed our interview and will soon become a member of our company.&#x27;</span><span class="hljs-selector-class">.format</span>(i))<br><br>offer_list<span class="hljs-selector-class">.remove</span>(<span class="hljs-string">&#x27;Tom&#x27;</span>)<br>offer_list<span class="hljs-selector-class">.append</span>(<span class="hljs-string">&#x27;Andy&#x27;</span>)<br><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> offer_list:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125;, welcome to join us!&#x27;</span><span class="hljs-selector-class">.format</span>(i))<br></code></pre></td></tr></table></figure><p><a href="https://www.zhihu.com/question/56927648">https://www.zhihu.com/question/56927648</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo url大小写bug</title>
    <link href="/hexo/hexo%20url%E5%A4%A7%E5%B0%8F%E5%86%99bug/"/>
    <url>/hexo/hexo%20url%E5%A4%A7%E5%B0%8F%E5%86%99bug/</url>
    
    <content type="html"><![CDATA[<p>非常蛋疼的 bug, 大写的时候代码会报错, 手动改成消息就能正常访问页面了<br><img src="http://cdn.xiamu.icu//FoVsWuiMYXKTGC3TghqnR_bJ4rWB.png"><br><img src="http://cdn.xiamu.icu//FpUKyeIqr_w_iOcpUWGEP7M-ZwVg.png"></p><p>参考<a href="https://trifond.github.io/2018/12/05/hexo-folder-ignore-case/">Hexo 部署到 Github 后文件夹名大小写引起的问题</a></p><p>因为 git 的命令忽略了文件名的大小写<br>进入 hexo 根目录, .deploy_git&#x2F;.git&#x2F;config<br>将 ignorecase 修改成 false</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[core]</span><br><span class="hljs-attr">symlinks</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">ignorecase</span> = <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>接着把.deploy_git 的其他目录删除干净, github 仓库也清理下</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nsis">git rm -rf *<br>git commit -m ‘clean <span class="hljs-literal">all</span> <span class="hljs-keyword">file</span>’<br>git <span class="hljs-keyword">push</span><br></code></pre></td></tr></table></figure><p>接着再重新部署到 github 就行了</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo绑定域名</title>
    <link href="/hexo/Hexo%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    <url>/hexo/Hexo%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h4 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h4><p>上<a href="https://wanwang.aliyun.com/domain/searchresult/">阿里云</a>购买一个域名</p><h4 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h4><p>购买之后去 <a href="https://dc.console.aliyun.com/">域名控制台</a>解析域名到我们的 roudoukou.github.io<br><img src="http://cdn.xiamu.icu//FtcsUrW8DYRG9YzWdmscKa1IHXdx.png"></p><p>通过 ping 获取 ip<br><img src="http://cdn.xiamu.icu//FrUhiSnPJNmFhJC7vzjuCnDHH4Es.png"><br>添加三个记录<br><img src="http://cdn.xiamu.icu//Fj4XCrvFLaUHAQdnh3Jt0TbxO43X.png"><br>CNAME 表示将域名指向另外一个域名<br>www 表示<a href="http://www.xiamu.icu就能访问/">www.xiamu.icu就能访问</a> *表示泛解析, 匹配所有其他的域名</p><p>接下来来到 roudoukou.github.io 仓库, 绑定域名<br><img src="http://cdn.xiamu.icu//FhwFuhfWDbzw4xKz_Z77YTEJi2aY.png"><br>记得在 hexo 根目录中 source 创建 CNAME 文件(无后缀), 里面写上域名, 不要有多余的符号<br><img src="http://cdn.xiamu.icu//FrJSlEjWYIGBzCd__I3AOe5bA4Ge.png"></p><p>参考链接: <a href="https://juejin.cn/post/6998140713334472740">【Hexo】域名绑定篇 - 掘金</a></p><h4 id="关于-SSL-证书的-bug"><a href="#关于-SSL-证书的-bug" class="headerlink" title="关于 SSL 证书的 bug"></a>关于 SSL 证书的 bug</h4><p>记得是昨天晚上才绑定完域名, 开开心心的就去睡觉了, 第二天早上一起床就发现有点不对劲<br><img src="http://cdn.xiamu.icu//FpXIu2IbcKUdbbWtuAGulgpIz6PH.png"><br>网站页面能正常显示出来, 但是图片却加载不出来了<br>大致看了看控制台的报错信息, 大概是请求的图片给加上了 https, 原先一直都是 http 去请求图片<br>这个还算好解决, 去 cdn 开启 https 就可以了(需要上传证书绑定 cdn)<br><img src="http://cdn.xiamu.icu//Fj0unYPLPGs5OZo3R2jdxC7hIrnd.png"></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>切换title和网站logo</title>
    <link href="/hexo/%E5%88%87%E6%8D%A2title%E5%92%8C%E7%BD%91%E7%AB%99logo/"/>
    <url>/hexo/%E5%88%87%E6%8D%A2title%E5%92%8C%E7%BD%91%E7%AB%99logo/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo添加音乐播放器</title>
    <link href="/hexo/hexo%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <url>/hexo/hexo%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>在网页中添加音乐播放器<br>参考网站:<br><a href="https://ftzzloo.com/hexo-add-aplayer-plugins/#Start">给 Hexo 添加音乐播放器插件</a><br><a href="https://easyhexo.com/3-Plugins-use-and-config/3-1-hexo-tag-aplayer/#%E4%BB%8B%E7%BB%8D">hexo-tag-aplayer | Easy Hexo 👨‍💻</a></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">PS E:<span class="hljs-string">\Code\Blog\hexo-blog&gt;</span> <span class="hljs-built_in">npm</span> install hexo-tag-aplayer -s<br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在_config.yml 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">aplayer:</span><br>  <span class="hljs-attr">meting:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># MetingJS 支持</span><br>  <span class="hljs-attr">asset_inject:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 自动插入Aplayer.js与Meting.js资源脚本（默认开启）</span><br></code></pre></td></tr></table></figure><h2 id="单曲实例"><a href="#单曲实例" class="headerlink" title="单曲实例"></a>单曲实例</h2><p>之后在页面中引入播放器</p><script>console.error("Error: [hexo-tag-aplayer] Specified asset file not found ([https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.jpg](https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.jpg"))");</script><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">&#123;<span class="hljs-comment">% aplayer</span><br><span class="hljs-string">&quot;光るなら&quot;</span><br><span class="hljs-string">&quot;Goose house&quot;</span><br><span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.mp3&quot;</span><br><span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.jpg&quot;</span><br><span class="hljs-string">&quot;lrc:https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.lrc&quot;</span><br><span class="hljs-string">&quot;width:100%&quot;</span><br><span class="hljs-comment">%&#125;</span><br></code></pre></td></tr></table></figure>歌单实例<script>console.error("SyntaxError: Unexpected token / in JSON at position 55");</script><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ruby">&#123;% aplayerlist %&#125;<br>&#123;<br>    <span class="hljs-string">&quot;narrow&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-string">&quot;autoplay&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-string">&quot;mode&quot;</span>: <span class="hljs-string">&quot;random&quot;</span>,<span class="hljs-regexp">//</span>（可选）<span class="hljs-string">&#x27;random&#x27;</span>, <span class="hljs-string">&#x27;single&#x27;</span> (单曲播放), <span class="hljs-string">&#x27;circulation&#x27;</span> (循环播放), <span class="hljs-string">&#x27;order&#x27;</span> (列表播放)， 默认：<span class="hljs-string">&#x27;circulation&#x27;</span><br>    <span class="hljs-string">&quot;showlrc&quot;</span>: <span class="hljs-number">3</span>,<br>    <span class="hljs-string">&quot;mutex&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;theme&quot;</span>: <span class="hljs-string">&quot;#e6d0b2&quot;</span>,<br>    <span class="hljs-string">&quot;preload&quot;</span>: <span class="hljs-string">&quot;metadata&quot;</span>,<br>    <span class="hljs-string">&quot;listmaxheight&quot;</span>: <span class="hljs-string">&quot;513px&quot;</span>,<br>    <span class="hljs-string">&quot;music&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;前前前世&quot;</span>,<br>            <span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;RADWIMPS&quot;</span>,<br>            <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.mp3&quot;</span>,<br>            <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;lrc&quot;</span>: <span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/yourname.lrc&quot;</span><br>        &#125;,<br>        &#123;<br>            <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;光るなら&quot;</span>,<br>            <span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;Goose house&quot;</span>,<br>            <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.mp3&quot;</span>,<br>            <span class="hljs-string">&quot;pic&quot;</span>: <span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.jpg&quot;</span>,<br>            <span class="hljs-string">&quot;lrc&quot;</span>: <span class="hljs-string">&quot;https://cn-south-17-aplayer-46154810.oss.dogecdn.com/hikarunara.lrc&quot;</span><br>        &#125;<br>    ]<br>&#125;<br>&#123;% endaplayerlist %&#125;<br></code></pre></td></tr></table></figure><table><thead><tr><th><strong>参数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>title</td><td>歌曲标题</td></tr><tr><td>author</td><td>歌曲作者</td></tr><tr><td>url</td><td>音乐文件 URL 地址</td></tr><tr><td>picture_url</td><td>（可选）封面图片地址</td></tr><tr><td>narrow</td><td>（可选）播放器袖珍风格</td></tr><tr><td>autoplay</td><td>（可选）自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>width</td><td>（可选）播放器宽度 (默认: 100%)</td></tr><tr><td>lrc</td><td>（可选）歌词文件 URL 地址</td></tr></tbody></table><h2 id="MetingJS-支持"><a href="#MetingJS-支持" class="headerlink" title="MetingJS 支持"></a>MetingJS 支持</h2><p>引入 MetingJS, 播放器支持 QQ 音乐, 网易云等</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">aplayer:</span><br>  <span class="hljs-attr">meting:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># MetingJS 支持</span><br>  <span class="hljs-attr">asset_inject:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 自动插入Aplayer.js与Meting.js资源脚本（默认开启）</span><br></code></pre></td></tr></table></figure><p>设置后页面在初始化播放器时会引入 1.2.0 版本的 Meting.min.js 文件<br>注意不是在主题配置文件_config.yml 设置，设置后要重启 hexo 服务才能生效</p><h2 id="Meting-JS-单曲"><a href="#Meting-JS-单曲" class="headerlink" title="Meting JS 单曲"></a>Meting JS 单曲</h2><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">&#123;% meting <span class="hljs-string">&quot;1330348068&quot;</span> <span class="hljs-string">&quot;netease&quot;</span> <span class="hljs-string">&quot;song&quot;</span>  <span class="hljs-string">&quot;theme: #1da496&quot;</span> %&#125;<br></code></pre></td></tr></table></figure>    <div id="aplayer-zupnnTFG" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1330348068" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #1da496"    ></div><h2 id="Meting-JS-歌单"><a href="#Meting-JS-歌单" class="headerlink" title="Meting JS 歌单"></a>Meting JS 歌单</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">&#123;% meting <span class="hljs-string">&quot;5237049130&quot;</span> <span class="hljs-string">&quot;netease&quot;</span> <span class="hljs-string">&quot;playlist&quot;</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;mutex: false&quot;</span> <span class="hljs-string">&quot;listmaxheight: 340px&quot;</span> <span class="hljs-string">&quot;preload: none&quot;</span> <span class="hljs-string">&quot;theme: <span class="hljs-subst">#ad7a86</span>&quot;</span> %&#125;<br></code></pre></td></tr></table></figure>    <div id="aplayer-pSEctioY" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5237049130" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight=" 340px" data-preload=" none" data-theme=" #ad7a86"    ></div><table><thead><tr><th><strong>选项</strong></th><th><strong>默认值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>id</td><td>必须值</td><td>歌曲 id &#x2F; 播放列表 id &#x2F; 相册 id &#x2F; 搜索关键字</td></tr><tr><td>server</td><td>必须值</td><td>音乐平台: netease, tencent, kugou, xiami, baidu</td></tr><tr><td>type</td><td>必须值</td><td>song, playlist, album, search, artist</td></tr><tr><td>fixed</td><td>false</td><td>开启固定模式</td></tr><tr><td>mini</td><td>false</td><td>开启迷你模式</td></tr><tr><td>loop</td><td>all</td><td>列表循环模式：all, one,none</td></tr><tr><td>order</td><td>list</td><td>列表播放模式： list, random</td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td>false</td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td>metingjs</td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td>true</td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td>true</td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td>340px</td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td>auto</td><td>音乐文件预载入模式，可选项： none, metadata, auto</td></tr><tr><td>theme</td><td>#ad7a86</td><td>播放器风格色彩设置</td></tr></tbody></table><h2 id="播放器设置吸底模式"><a href="#播放器设置吸底模式" class="headerlink" title="播放器设置吸底模式"></a>播放器设置吸底模式</h2><p>在 themes&#x2F;fluid&#x2F;layout&#x2F;layout.ejs 文件, <body>标签添加</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;div class<span class="hljs-operator">=</span><span class="hljs-string">&quot;aplayer&quot;</span><br>  data-id<span class="hljs-operator">=</span><span class="hljs-string">&quot;5237049130&quot;</span><br>  data-server<span class="hljs-operator">=</span><span class="hljs-string">&quot;netease&quot;</span><br>  data-type<span class="hljs-operator">=</span><span class="hljs-string">&quot;playlist&quot;</span><br>  data-fixed<span class="hljs-operator">=</span><span class="hljs-string">&quot;true&quot;</span><br>  data-autoplay<span class="hljs-operator">=</span><span class="hljs-string">&quot;false&quot;</span><br>  data-order<span class="hljs-operator">=</span><span class="hljs-string">&quot;list&quot;</span><br>  data-volume<span class="hljs-operator">=</span><span class="hljs-string">&quot;0.5&quot;</span><br>  data-theme<span class="hljs-operator">=</span><span class="hljs-string">&quot;#1da496&quot;</span><br>  data-preload<span class="hljs-operator">=</span><span class="hljs-string">&quot;auto&quot;</span><br>  &gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><header>或者<footer>加入<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure>因为在主题文件中手动加入了依赖文件，所以可以在hexo配置文件中关闭插件的自动脚本插入功能：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">aplayer:</span><br>  <span class="hljs-attr">meting:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># MetingJS 支持</span><br>  <span class="hljs-attr">asset_inject:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 关闭自动脚本插入</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>语雀导出到hexo</title>
    <link href="/hexo/%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BA%E5%88%B0hexo/"/>
    <url>/hexo/%E8%AF%AD%E9%9B%80%E5%AF%BC%E5%87%BA%E5%88%B0hexo/</url>
    
    <content type="html"><![CDATA[<p>因为语雀收费了, 编写的笔记在互联网中分享需要会员, 本人比较屌丝, 充不起会员<br><a href="https://github.com/x-cold/yuque-hexo">https://github.com/x-cold/yuque-hexo</a><br>使用 yuque-hexo 将语雀编写的文章</p><p>在 hexo 博客根目录中下载 yuque-hexo 插件</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">PS</span> <span class="hljs-selector-tag">E</span>:\<span class="hljs-selector-tag">Code</span>\<span class="hljs-selector-tag">Blog</span>\<span class="hljs-selector-tag">hexo-blog</span>&gt; <span class="hljs-selector-tag">npm</span> <span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">-g</span> <span class="hljs-selector-tag">yuque-hexo</span><br></code></pre></td></tr></table></figure><p>如果安装插件的时候发生了警告, 请先把 package-lock.json 删除掉重新生成<br><img src="http://cdn.xiamu.icu//FjrsDtZuyoEiT3I1qzBPDX5LSSZt.png"><br>然后打开 package.json<br>配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;yuqueConfig&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;postPath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;source/_posts&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;cachePath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yuque.json&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;mdNameFormat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;title&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;adapter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;concurrency&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;baseUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://www.yuque.com/api/v2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;login&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;roudoukou-umqjd&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;repo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xn56rg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;onlyPublished&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;onlyPublic&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;lastGeneratePath&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lastGeneratePath.log&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;imgCdn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;concurrency&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;imageBed&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;github&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cdn.jsdelivr.net&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;roudoukou.github.io&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;region&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;prefixKey&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;blog-img&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>postPath 表示文档下载的路径<br>login 表示是个人路径<br>repo 仓库路径<br>imgCdn 图床的配置<br>enable 开启图床<br>concurrency 并发量<br>host 是使用的图床的主机<br>bucket 图床 bucket 名称<br>region 图床的 region<br>prefixKey 文件名的前缀</p><p>同步文档到本地</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">PS</span> E:\<span class="hljs-meta">Code</span>\Blog\hexo-blog&gt; yuque-hexo sync<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FjDQ1y7ze0DScJlckXDKgJGp4ajk.png"><br>配置三个 token</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> <span class="hljs-attribute">YUQUE_TOKEN</span>=XXX<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">SECRET_ID</span>=XXX<br><span class="hljs-built_in">set</span> <span class="hljs-attribute">SECRET_KEY</span>=XXX<br></code></pre></td></tr></table></figure><p>可以把环境变量写在一个.env 文件中, 记得给.gitignore 中排除这个.env 文件, 以防上传到了 github, 因为 TOKEN 是敏感信息</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RabbitMQ</title>
    <link href="/Java/RabbitMQ/"/>
    <url>/Java/RabbitMQ/</url>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>记得在有管理员权限安装</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crystal">[root<span class="hljs-variable">@hadoop202</span> software]<span class="hljs-comment"># rpm -ivh erlang-21.3-1.el7.x86_64.rpm</span><br><br>[root<span class="hljs-variable">@hadoop202</span> software]<span class="hljs-comment"># yum install socat -y</span><br><br>[xiamu<span class="hljs-variable">@hadoop202</span> software]<span class="hljs-variable">$ </span>rpm -ivh rabbitmq-server-<span class="hljs-number">3.8</span>.<span class="hljs-number">8</span>-<span class="hljs-number">1</span>.el7.noarch.rpm<br></code></pre></td></tr></table></figure><h2 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hadoop202</span> software]<span class="hljs-meta"># systemctl start rabbitmq-server</span><br><br>[root<span class="hljs-symbol">@hadoop202</span> software]<span class="hljs-meta"># systemctl statua rabbitmq-server</span><br><br>[root<span class="hljs-symbol">@hadoop202</span> software]<span class="hljs-meta"># systemctl stop rabbitmq-server</span><br></code></pre></td></tr></table></figure><h2 id="安装-Web-界面插件"><a href="#安装-Web-界面插件" class="headerlink" title="安装 Web 界面插件"></a>安装 Web 界面插件</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hadoop202</span> software]<span class="hljs-meta"># systemctl stop rabbitmq-server</span><br><br>[root<span class="hljs-symbol">@hadoop202</span> software]<span class="hljs-meta"># rabbitmq-plugins enable rabbitmq_management</span><br><br>[root<span class="hljs-symbol">@hadoop202</span> software]<span class="hljs-meta"># systemctl start rabbitmq-server</span><br><br>[root<span class="hljs-symbol">@hadoop202</span> software]<span class="hljs-meta"># systemctl status rabbitmq-server</span><br><br></code></pre></td></tr></table></figure><p>安装 Web 界面完成之后, 访问如下地址<br><a href="http://hadoop202:15672/">http://hadoop202:15672/</a><br>注意记得关闭防火墙<br><img src="http://cdn.xiamu.icu//FpSfJOpdhWNjNnoxRy2FSrnAdB_R.png"><br>第一次登录不了, 需要添加账户才能登录<br>username: guest<br>password: guest</p><h2 id="添加账户-给予权限"><a href="#添加账户-给予权限" class="headerlink" title="添加账户 给予权限"></a>添加账户 给予权限</h2><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs prolog">创建账号<br>[root@hadoop202 software]# rabbitmqctl add_user admin <span class="hljs-number">123</span><br><span class="hljs-symbol">Adding</span> user <span class="hljs-string">&quot;admin&quot;</span> ...<br><br>设置用户角色<br>[root@hadoop202 software]# rabbitmqctl set_user_tags admin administrator<br><span class="hljs-symbol">Setting</span> tags for user <span class="hljs-string">&quot;admin&quot;</span> to [administrator] ...<br><br>设置用户权限<br>set_permissions [-p &lt;vhostpath&gt;] &lt;user&gt; &lt;conf&gt; &lt;write&gt; &lt;read&gt;<br>[root@hadoop202 software]# rabbitmqctl set_permissions -p <span class="hljs-string">&quot;/&quot;</span> admin <span class="hljs-string">&quot;.*&quot;</span> <span class="hljs-string">&quot;.*&quot;</span> <span class="hljs-string">&quot;.*&quot;</span><br><span class="hljs-symbol">Setting</span> permissions for user <span class="hljs-string">&quot;admin&quot;</span> in vhost <span class="hljs-string">&quot;/&quot;</span> ...<br>用户 user_admin 具有/vhost1 这个 virtual host 中所有资源的配置、写、读权限<br><br>当前用户和角色<br>[root@hadoop202 software]#    rabbitmqctl list_users<br><span class="hljs-symbol">Listing</span> users ...<br>usertags<br>admin[administrator]<br>guest[administrator]<br>[root@hadoop202 software]#<br><br></code></pre></td></tr></table></figure><p>再次登录<br>账号 admin<br>密码 123</p><h2 id="创建-JAVA-开发环境"><a href="#创建-JAVA-开发环境" class="headerlink" title="创建 JAVA 开发环境"></a>创建 JAVA 开发环境</h2><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--rabbitmq 依赖客户端--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.rabbitmq<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>amqp-client<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--操作文件流的一个依赖--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-io<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-io<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.6<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="创建生产者"><a href="#创建生产者" class="headerlink" title="创建生产者"></a>创建生产者</h2><p>com.atguigu.one<br>Producer 代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.one;<br><br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Connection;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.ConnectionFactory;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><span class="hljs-keyword">import</span> java.util.concurrent.TimeoutException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Producer</span> &#123;<br>    <span class="hljs-comment">// 队列名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">QUEUE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span>;<br><br>    <span class="hljs-comment">// 发消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException, TimeoutException &#123;<br>        <span class="hljs-type">ConnectionFactory</span> <span class="hljs-variable">connectionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConnectionFactory</span>();<br>        <span class="hljs-comment">// 工程IP 连接RabbitMQ的队列</span><br>        connectionFactory.setHost(<span class="hljs-string">&quot;hadoop202&quot;</span>);<br>        <span class="hljs-comment">// 用户名</span><br>        connectionFactory.setUsername(<span class="hljs-string">&quot;admin&quot;</span>);<br>        <span class="hljs-comment">// 密码</span><br>        connectionFactory.setPassword(<span class="hljs-string">&quot;123&quot;</span>);<br><br>        <span class="hljs-comment">// 创建连接</span><br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> connectionFactory.newConnection();<br><br>        <span class="hljs-comment">// 获取信道</span><br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> connection.createChannel();<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 生成一个队列</span><br><span class="hljs-comment">         * 1. 队列名称</span><br><span class="hljs-comment">         * 2. 队列里面的消息是否持久化(磁盘), 默认情况下消息存储在内存中</span><br><span class="hljs-comment">         * 3. 该队列是否只供一个消费者进行消费 是否进行消息共享, true可以多个消费者消费 false: 只能一个消费者消费</span><br><span class="hljs-comment">         * 4. 是否自动删除 最后一个消费者断开连接以后, 该队列是否自动删除 true自动删除 false 不自动删除</span><br><span class="hljs-comment">         * 5. 其他参数</span><br><span class="hljs-comment">          */</span><br>        channel.queueDeclare(QUEUE_NAME, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">null</span>);<br><br>        <span class="hljs-comment">// 发消息</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello world&quot;</span>; <span class="hljs-comment">// 初次使用</span><br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 发送一个消息</span><br><span class="hljs-comment">         * 1. 发送到哪个交换机</span><br><span class="hljs-comment">         * 2. 路由的Key是哪个 本次是队列名称</span><br><span class="hljs-comment">         * 3. 其他参数信息</span><br><span class="hljs-comment">         * 4. 发送的消息</span><br><span class="hljs-comment">         */</span><br>        channel.basicPublish(<span class="hljs-string">&quot;&quot;</span>, QUEUE_NAME, <span class="hljs-literal">null</span>, message.getBytes());<br>        System.out.println(<span class="hljs-string">&quot;消息发送完毕&quot;</span>);<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="创建消费者"><a href="#创建消费者" class="headerlink" title="创建消费者"></a>创建消费者</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.one;<br><br><span class="hljs-keyword">import</span> com.rabbitmq.client.*;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.concurrent.TimeoutException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Consumer</span> &#123;<br>    <span class="hljs-comment">// 队列的名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">QUEUE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span>;<br><br>    <span class="hljs-comment">//接收消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException, TimeoutException &#123;<br>        <span class="hljs-comment">// 创建连接工厂</span><br>        <span class="hljs-type">ConnectionFactory</span> <span class="hljs-variable">connectionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConnectionFactory</span>();<br>        connectionFactory.setHost(<span class="hljs-string">&quot;hadoop202&quot;</span>);<br>        connectionFactory.setUsername(<span class="hljs-string">&quot;admin&quot;</span>);<br>        connectionFactory.setPassword(<span class="hljs-string">&quot;123&quot;</span>);<br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> connectionFactory.newConnection();<br><br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> connection.createChannel();<br><br>        <span class="hljs-comment">// 声明 接收消息</span><br>        <span class="hljs-type">DeliverCallback</span> <span class="hljs-variable">deliverCallback</span> <span class="hljs-operator">=</span> (consumerTag,message) -&gt; &#123;<br>            System.out.println(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(message.getBody()));<br>        &#125;;<br><br>        <span class="hljs-comment">// 取消消息时的回调</span><br>        <span class="hljs-type">CancelCallback</span> <span class="hljs-variable">cancelCallback</span> <span class="hljs-operator">=</span> (consumerTag) -&gt; &#123;<br>            System.out.println(<span class="hljs-string">&quot;消息消费被中断&quot;</span>);<br>        &#125;;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 消费者消费消息</span><br><span class="hljs-comment">         * 1. 消息哪个队列</span><br><span class="hljs-comment">         * 2. 消费成功之后是否要自动应答 true 代表的自动应答</span><br><span class="hljs-comment">         * 3. 消费者未成功消费的回调</span><br><span class="hljs-comment">         * 4. 消费者取消消费的回调</span><br><span class="hljs-comment">         */</span><br>        channel.basicConsume(QUEUE_NAME, <span class="hljs-literal">true</span>, deliverCallback, cancelCallback);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="工作队列原理"><a href="#工作队列原理" class="headerlink" title="工作队列原理"></a>工作队列原理</h2><p>工作队列(又称任务队列)的主要思想是避免立即执行资源密集型任务，而不得不等待它完成。相反我们安排任务在之后执行。我们把任务封装为消息并将其发送到队列。在后台运行的工作进程将弹出任务并最终执行作业。当有多个工作线程时，这些工作线程将一起处理这些任务。<br><img src="http://cdn.xiamu.icu//FuuDCEPDkN-yXdB1Vbuj0V_ESN0B.png"></p><h2 id="抽取连接工厂工具类"><a href="#抽取连接工厂工具类" class="headerlink" title="抽取连接工厂工具类"></a>抽取连接工厂工具类</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">package</span> com.atguigu.utils;<br><br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Connection;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.ConnectionFactory;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 此类为连接工厂创建信道的工具类</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RabbitMqUtils</span> </span>&#123;<br>    <span class="hljs-comment">//得到一个连接的 channel</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Channel getChannel() throws Exception &#123;<br>        <span class="hljs-comment">//创建一个连接工厂</span><br>        ConnectionFactory factory = <span class="hljs-keyword">new</span> <span class="hljs-type">ConnectionFactory</span>();<br>        factory.setHost(<span class="hljs-string">&quot;hadoop202S&quot;</span>);<br>        factory.setUsername(<span class="hljs-string">&quot;admin&quot;</span>);<br>        factory.setPassword(<span class="hljs-string">&quot;123&quot;</span>);<br>        Connection connection = factory.<span class="hljs-keyword">new</span><span class="hljs-type">Connection</span>();<br>        Channel channel = connection.createChannel();<br>        <span class="hljs-keyword">return</span> channel;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="启动多个工作线程"><a href="#启动多个工作线程" class="headerlink" title="启动多个工作线程"></a>启动多个工作线程</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.two;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.CancelCallback;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.DeliverCallback;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 这是一个工作线程(相当于之前消费者)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Worker01</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">QUEUE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> RabbitMqUtils.getChannel();<br><br>        <span class="hljs-type">DeliverCallback</span> <span class="hljs-variable">deliverCallback</span> <span class="hljs-operator">=</span> (consumerTag, message) -&gt; &#123;<br>            System.out.println(<span class="hljs-string">&quot;接收到的消息: &quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(message.getBody()));<br>        &#125;;<br><br>        <span class="hljs-type">CancelCallback</span> <span class="hljs-variable">cancelCallback</span> <span class="hljs-operator">=</span> (consumerTag) -&gt; &#123;<br>            System.out.println(consumerTag + <span class="hljs-string">&quot;消费者取消消费接口回调逻辑&quot;</span>);<br>        &#125;;<br><br>        System.out.println(<span class="hljs-string">&quot;C3等待接收消息...&quot;</span>);<br><br>        <span class="hljs-comment">// 消息的接收</span><br>        channel.basicConsume(QUEUE_NAME, <span class="hljs-literal">true</span>, deliverCallback, cancelCallback);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fp6cJyCpPs3uFBXQrNlkw0hYwpvI.png"><br>然后运行三个工作线程(实例)<br><img src="http://cdn.xiamu.icu//Fky-vggOKJh3OlGex0ZYkQSKRq3k.png"></p><h2 id="工作队列-生产者代码"><a href="#工作队列-生产者代码" class="headerlink" title="工作队列 - 生产者代码"></a>工作队列 - 生产者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.two;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 生产者 发送大量消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Task01</span> &#123;<br>    <span class="hljs-comment">// 队列名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">QUEUE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span>;<br><br>    <span class="hljs-comment">// 发送大量消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> RabbitMqUtils.getChannel();<br><br>        <span class="hljs-comment">// 队列的声明</span><br>        channel.queueDeclare(QUEUE_NAME, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">null</span>);<br><br>        <span class="hljs-comment">// 从控制台当中接收消息</span><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">scanner</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span> (scanner.hasNext()) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> scanner.next();<br>            channel.basicPublish(<span class="hljs-string">&quot;&quot;</span>, QUEUE_NAME, <span class="hljs-literal">null</span>, message.getBytes());<br>            System.out.println(<span class="hljs-string">&quot;发送消息完成: &quot;</span> + message);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>测试结果:<br><img src="http://cdn.xiamu.icu//FgUF02rGLuH5sbnf-5cEslA_m2G-.png"><br><img src="http://cdn.xiamu.icu//FrSSWM7Y9pp5vfckw209ELBVgZnL.png"><br><img src="http://cdn.xiamu.icu//FoHSwFfB2eRZijKeLG4_2xrSX6YS.png"><br><img src="http://cdn.xiamu.icu//FlBU9xjcof8CQTyHEh0dJCSrLJ7p.png"></p><h2 id="消息应答生产者"><a href="#消息应答生产者" class="headerlink" title="消息应答生产者"></a>消息应答生产者</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.three;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><br><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 消息在手动应答时是不丢失, 放回队列中重新消费</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Task2</span> &#123;<br><br>    <span class="hljs-comment">// 队列名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">TASK_QUEUE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ack_queue&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> RabbitMqUtils.getChannel();<br><br>        <span class="hljs-comment">// 声明队列</span><br>        channel.queueDeclare(TASK_QUEUE_NAME, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">null</span>);<br><br>        <span class="hljs-comment">// 在控制台中输入信息</span><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">scanner</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span> (scanner.hasNext()) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> scanner.next();<br>            channel.basicPublish(<span class="hljs-string">&quot;&quot;</span>, TASK_QUEUE_NAME, <span class="hljs-literal">null</span>, message.getBytes(StandardCharsets.UTF_8));<br>            System.out.println(<span class="hljs-string">&quot;生产者发出消息: &quot;</span> + message);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="消息应答消费者"><a href="#消息应答消费者" class="headerlink" title="消息应答消费者"></a>消息应答消费者</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">package</span> com.atguigu.three;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.atguigu.utils.SleepUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.CancelCallback;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.DeliverCallback;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Delivery;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 消息在手动应答时是不丢失, 放回队列中重新消费</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> Work03 &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String TASK_QUEUE_NAME = <span class="hljs-string">&quot;ack_queue&quot;</span>;<br><br>    <span class="hljs-comment">// 接收消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) <span class="hljs-keyword">throws</span> Exception &#123;<br>        Channel channel = RabbitMqUtils.getChannel();<br>        System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;C1等待接收消息处理时间较短&quot;</span>);<br><br>        DeliverCallback deliverCallback = (consumerTag, message) -&gt; &#123;<br>            <span class="hljs-comment">// 沉睡1S</span><br>            SleepUtils.sleep(<span class="hljs-number">1</span>);<br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;接收到的消息&quot;</span> + <span class="hljs-keyword">new</span> String(message.getBody(), <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>            <span class="hljs-comment">// 手动应答</span><br>            <span class="hljs-comment">/**</span><br><span class="hljs-comment">             * 1. 消息的标记tag</span><br><span class="hljs-comment">             * 2. 是否批量应答 false 不批量应答新道中的消息 true 批量</span><br><span class="hljs-comment">             */</span><br>            channel.basicAck(message.getEnvelope().getDeliveryTag(), <span class="hljs-keyword">false</span>);<br><br>        &#125;;<br><br><br>        CancelCallback cancelCallback = consumerTag -&gt; &#123;<br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;消费者取消消费接口回调逻辑&quot;</span>);<br>        &#125;;<br><br>        <span class="hljs-comment">// 采用手动应答</span><br>        <span class="hljs-keyword">boolean</span> autoAsk = <span class="hljs-keyword">false</span>;<br>        channel.basicConsume(TASK_QUEUE_NAME, autoAsk, deliverCallback, cancelCallback);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">package</span> com.atguigu.three;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.atguigu.utils.SleepUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.CancelCallback;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.DeliverCallback;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 消息在手动应答时是不丢失, 放回队列中重新消费</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> Work04 &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String TASK_QUEUE_NAME = <span class="hljs-string">&quot;ack_queue&quot;</span>;<br><br>    <span class="hljs-comment">// 接收消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) <span class="hljs-keyword">throws</span> Exception &#123;<br>        Channel channel = RabbitMqUtils.getChannel();<br>        System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;C2等待接收消息处理时间较快&quot;</span>);<br><br>        DeliverCallback deliverCallback = (consumerTag, message) -&gt; &#123;<br>            <span class="hljs-comment">// 沉睡1S</span><br>            SleepUtils.sleep(<span class="hljs-number">30</span>);<br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;接收到的消息&quot;</span> + <span class="hljs-keyword">new</span> String(message.getBody(), <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>            <span class="hljs-comment">// 手动应答</span><br>            <span class="hljs-comment">/**</span><br><span class="hljs-comment">             * 1. 消息的标记tag</span><br><span class="hljs-comment">             * 2. 是否批量应答 false 不批量应答新道中的消息 true 批量</span><br><span class="hljs-comment">             */</span><br>            channel.basicAck(message.getEnvelope().getDeliveryTag(), <span class="hljs-keyword">false</span>);<br><br>        &#125;;<br><br><br>        CancelCallback cancelCallback = consumerTag -&gt; &#123;<br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;消费者取消消费接口回调逻辑&quot;</span>);<br>        &#125;;<br><br>        <span class="hljs-comment">// 采用手动应答</span><br>        <span class="hljs-keyword">boolean</span> autoAsk = <span class="hljs-keyword">false</span>;<br>        channel.basicConsume(TASK_QUEUE_NAME, autoAsk, deliverCallback, cancelCallback);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs processing"><span class="hljs-keyword">package</span> com.<span class="hljs-property">atguigu</span>.<span class="hljs-property">utils</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 睡眠工具类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SleepUtils</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-type">int</span> <span class="hljs-built_in">second</span>) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            Thread.<span class="hljs-property">sleep</span>(<span class="hljs-number">1000</span> * <span class="hljs-built_in">second</span>);<br>        &#125; <span class="hljs-title function_">catch</span> (InterruptedException e) &#123;<br>            e.<span class="hljs-property">printStackTrace</span>();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>测试结果:<br>work04 运行到一半时, 给挂掉, work03 成功处理 work04 未能处理的消息<br><img src="http://cdn.xiamu.icu//FqPD-c2YDaWHkPAbO-fF65BuZzXD.png"><br><img src="http://cdn.xiamu.icu//FiL6SdjaIPXZfYczZyyhyTX2o8rB.png"><br><img src="http://cdn.xiamu.icu//Fpg17VCaTNPn3Dg9yVP2hpUzWeeQ.png"></p><h2 id="队列持久化"><a href="#队列持久化" class="headerlink" title="队列持久化"></a>队列持久化</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">channel.queue<span class="hljs-constructor">Declare(TASK_QUEUE_NAME, <span class="hljs-params">null</span>, <span class="hljs-params">false</span>, <span class="hljs-params">false</span>, <span class="hljs-params">null</span>)</span>;<br><br><span class="hljs-comment">// 声明队列</span><br>boolean durable = <span class="hljs-literal">true</span>;<br>channel.queue<span class="hljs-constructor">Declare(TASK_QUEUE_NAME, <span class="hljs-params">durable</span>, <span class="hljs-params">false</span>, <span class="hljs-params">false</span>, <span class="hljs-params">null</span>)</span>;<br></code></pre></td></tr></table></figure><p>如果队列在未持久化运行过, 把 durable 修改成 true 变成持久化之后就会报如下错误</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">Caused <span class="hljs-keyword">by</span>: com.rabbitmq.client.ShutdownSignalException: channel error<span class="hljs-punctuation">;</span> protocol <span class="hljs-keyword">method</span>: #<span class="hljs-keyword">method</span>&lt;<span class="hljs-title function_">channel</span>.<span class="hljs-title function_">close</span>&gt;<span class="hljs-params">(reply-code=406, reply-text=PRECONDITION_FAILED - inequivalent arg <span class="hljs-string">&#x27;durable&#x27;</span> <span class="hljs-keyword">for</span> queue <span class="hljs-string">&#x27;ack_queue&#x27;</span> <span class="hljs-keyword">in</span> vhost <span class="hljs-string">&#x27;/&#x27;</span>: received <span class="hljs-string">&#x27;true&#x27;</span> but current <span class="hljs-keyword">is</span> <span class="hljs-string">&#x27;false&#x27;</span>, <span class="hljs-keyword">class</span>-id=50, <span class="hljs-keyword">method</span>-id=10)</span><br></code></pre></td></tr></table></figure><p>我们只需要删除这个队列 , 再次运行就可以了<br><img src="http://cdn.xiamu.icu//FooT7dOI3oW1XjFM52QrwYXckcQ_.png"></p><p>Features 显示 D 说明持久化成功<br><img src="http://cdn.xiamu.icu//Fju4ydXOl7EQ5dLv7Y2pfFlivtwN.png"></p><h2 id="消息持久化"><a href="#消息持久化" class="headerlink" title="消息持久化"></a>消息持久化</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">channel.basic<span class="hljs-constructor">Publish(<span class="hljs-string">&quot;&quot;</span>, TASK_QUEUE_NAME, <span class="hljs-params">null</span>, <span class="hljs-params">message</span>.<span class="hljs-params">getBytes</span>(StandardCharsets.UTF_8)</span>);<br>channel.basic<span class="hljs-constructor">Publish(<span class="hljs-string">&quot;&quot;</span>, TASK_QUEUE_NAME, MessageProperties.PERSISTENT_TEXT_PLAIN, <span class="hljs-params">message</span>.<span class="hljs-params">getBytes</span>(StandardCharsets.UTF_8)</span>);<br></code></pre></td></tr></table></figure><h2 id="不公平分发"><a href="#不公平分发" class="headerlink" title="不公平分发"></a>不公平分发</h2><p>所有的消费设置</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 设置不公平分发</span><br><span class="hljs-built_in">int</span> prefetchCount = <span class="hljs-number">1</span>;<br>channel.basic<span class="hljs-constructor">Qos(<span class="hljs-params">prefetchCount</span>)</span>;<br></code></pre></td></tr></table></figure><h2 id="预取值"><a href="#预取值" class="headerlink" title="预取值"></a>预取值</h2><p>消费者 1 设置</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 设置预取值</span><br><span class="hljs-built_in">int</span> prefetchCount = <span class="hljs-number">2</span>;<br>channel.basic<span class="hljs-constructor">Qos(<span class="hljs-params">prefetchCount</span>)</span>;<br></code></pre></td></tr></table></figure><p>消费者 2 设置</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 设置预取值</span><br><span class="hljs-built_in">int</span> prefetchCount = <span class="hljs-number">5</span>;<br>channel.basic<span class="hljs-constructor">Qos(<span class="hljs-params">prefetchCount</span>)</span>;<br></code></pre></td></tr></table></figure><h2 id="发布确认"><a href="#发布确认" class="headerlink" title="发布确认"></a>发布确认</h2><p>生产者设置信道</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> 开启发布确认的方法<br>channel.confirmSelect();<br></code></pre></td></tr></table></figure><p>发布确认分三种</p><ul><li>单个确认</li><li>批量确认</li><li>异步批量确认</li></ul><h3 id="单个确认"><a href="#单个确认" class="headerlink" title="单个确认"></a>单个确认</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> <span class="hljs-number">1</span>.单个确认<br><span class="hljs-regexp">//</span> publicMessageIndividually();  <span class="hljs-regexp">//</span> 发布<span class="hljs-number">1000</span>个单独确认消息, 耗时<span class="hljs-number">616</span>ms<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 1.单个确认</span><br>public static void public<span class="hljs-constructor">MessageIndividually()</span> throws Exception &#123;<br>    Channel channel = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">RabbitMqUtils</span>.</span></span>get<span class="hljs-constructor">Channel()</span>;<br>    <span class="hljs-comment">// 队列的声明</span><br>    String queueName = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UUID</span>.</span></span>random<span class="hljs-constructor">UUID()</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>;<br>    channel.queue<span class="hljs-constructor">Declare(<span class="hljs-params">queueName</span>, <span class="hljs-params">true</span>, <span class="hljs-params">false</span>, <span class="hljs-params">false</span>, <span class="hljs-params">null</span>)</span>;<br><br>    <span class="hljs-comment">// 开启发布确认</span><br>    channel.confirm<span class="hljs-constructor">Select()</span>;<br><br>    <span class="hljs-comment">// 开始时间</span><br>    long <span class="hljs-keyword">begin</span> = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>current<span class="hljs-constructor">TimeMillis()</span>;<br><br>    <span class="hljs-comment">// 批量发消息</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; MESSAGE_COUNT; i++) &#123;<br>        String message = i + <span class="hljs-string">&quot;&quot;</span>;<br>        channel.basic<span class="hljs-constructor">Publish(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-params">queueName</span>, <span class="hljs-params">null</span>, <span class="hljs-params">message</span>.<span class="hljs-params">getBytes</span>()</span>);<br><br>        <span class="hljs-comment">// 单个消息就马上进行发布确认</span><br>        boolean flag = channel.wait<span class="hljs-constructor">ForConfirms()</span>;<br>        <span class="hljs-keyword">if</span> (flag) &#123;<br>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;消息发送成功&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 结束时间</span><br>    long <span class="hljs-keyword">end</span> = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>current<span class="hljs-constructor">TimeMillis()</span>;<br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;发布&quot;</span> + MESSAGE_COUNT + <span class="hljs-string">&quot;个单独确认消息, 耗时&quot;</span> + (<span class="hljs-keyword">end</span> - <span class="hljs-keyword">begin</span>) + <span class="hljs-string">&quot;ms&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="批量确认"><a href="#批量确认" class="headerlink" title="批量确认"></a>批量确认</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> <span class="hljs-number">2</span>.批量确认<br><span class="hljs-regexp">//</span> publishMessageBatch() ;  <span class="hljs-regexp">//</span> 发布<span class="hljs-number">1000</span>个批量确认消息, 耗时<span class="hljs-number">93</span>ms<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 2.批量确认</span><br>public static void publish<span class="hljs-constructor">MessageBatch()</span> throws Exception &#123;<br>    Channel channel = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">RabbitMqUtils</span>.</span></span>get<span class="hljs-constructor">Channel()</span>;<br>    String queueName = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UUID</span>.</span></span>random<span class="hljs-constructor">UUID()</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>;<br>    channel.queue<span class="hljs-constructor">Declare(<span class="hljs-params">queueName</span>, <span class="hljs-params">true</span>, <span class="hljs-params">false</span>, <span class="hljs-params">false</span>, <span class="hljs-params">null</span>)</span>;<br><br>    <span class="hljs-comment">// 开启发布确认</span><br>    channel.confirm<span class="hljs-constructor">Select()</span>;<br><br>    long <span class="hljs-keyword">begin</span> = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>current<span class="hljs-constructor">TimeMillis()</span>;<br><br>    <span class="hljs-built_in">int</span> batchSize = <span class="hljs-number">100</span>;<br><br>    <span class="hljs-comment">// 批量发送消息 批量发布确认</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; MESSAGE_COUNT; i++) &#123;<br>        String message = i + <span class="hljs-string">&quot;&quot;</span>;<br>        channel.basic<span class="hljs-constructor">Publish(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-params">queueName</span>, <span class="hljs-params">null</span>, <span class="hljs-params">message</span>.<span class="hljs-params">getBytes</span>()</span>);<br>        <span class="hljs-comment">// 判断打到100条消息的时候 批量确认一次</span><br>        <span class="hljs-keyword">if</span> (i % batchSize<span class="hljs-operator"> == </span><span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-comment">// 发布确认</span><br>            channel.wait<span class="hljs-constructor">ForConfirms()</span>;<br>        &#125;<br>    &#125;<br><br>    long <span class="hljs-keyword">end</span> = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>current<span class="hljs-constructor">TimeMillis()</span>;<br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;发布&quot;</span> + MESSAGE_COUNT + <span class="hljs-string">&quot;个批量确认消息, 耗时&quot;</span> + (<span class="hljs-keyword">end</span> - <span class="hljs-keyword">begin</span>) + <span class="hljs-string">&quot;ms&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="异步批量确认"><a href="#异步批量确认" class="headerlink" title="异步批量确认"></a>异步批量确认</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> <span class="hljs-number">3</span>.异步批量确认<br>publishMessageAsync();  <span class="hljs-regexp">//</span> 发布<span class="hljs-number">1000</span>个异步批量确认消息, 耗时<span class="hljs-number">47</span>ms<br>                        <span class="hljs-regexp">//</span> 发布<span class="hljs-number">1000</span>个异步批量确认消息, 耗时<span class="hljs-number">62</span>ms<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 3.异步批量确认</span><br>public static void publish<span class="hljs-constructor">MessageAsync()</span> throws Exception &#123;<br>    Channel channel = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">RabbitMqUtils</span>.</span></span>get<span class="hljs-constructor">Channel()</span>;<br>    String queueName = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UUID</span>.</span></span>random<span class="hljs-constructor">UUID()</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>;<br>    channel.queue<span class="hljs-constructor">Declare(<span class="hljs-params">queueName</span>, <span class="hljs-params">true</span>, <span class="hljs-params">false</span>, <span class="hljs-params">false</span>, <span class="hljs-params">null</span>)</span>;<br><br>    channel.confirm<span class="hljs-constructor">Select()</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 线程安全有序的一个哈希表 适用于高并发的情况下</span><br><span class="hljs-comment">     *  1.轻松的将序号与消息进行关联</span><br><span class="hljs-comment">     *  2.轻松批量删除条目 只要给到序号</span><br><span class="hljs-comment">     *  3.支持高并发(多线程)</span><br><span class="hljs-comment">     */</span><br>    ConcurrentSkipListMap&lt;Long, String&gt; outstandingConfirms =<br>            <span class="hljs-keyword">new</span> ConcurrentSkipListMap&lt;&gt;<span class="hljs-literal">()</span>;<br><br>    <span class="hljs-comment">// 消息确认成功 回调函数</span><br>    ConfirmCallback ackCallback = (deliveryTag, multiple) -&gt; &#123;<br>        <span class="hljs-keyword">if</span> (multiple) &#123;<br>            <span class="hljs-comment">// 2.删除到已经确认的消息 剩下的就是未确认的消息</span><br>            ConcurrentNavigableMap&lt;Long, String&gt; confirmed =<br>                    outstandingConfirms.head<span class="hljs-constructor">Map(<span class="hljs-params">deliveryTag</span>)</span>;<br>            confirmed.clear<span class="hljs-literal">()</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            outstandingConfirms.remove(deliveryTag);<br>        &#125;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;确认的消息: &quot;</span> + deliveryTag);<br>    &#125;;<br>    <span class="hljs-comment">// 消息确认失败 回调函数</span><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 1.消息的标记</span><br><span class="hljs-comment">     * 2.是否为批量确认</span><br><span class="hljs-comment">     */</span><br>    ConfirmCallback nackCallback = (deliveryTag, multiple) -&gt; &#123;<br>        <span class="hljs-comment">// 3.打印一下未确认的消息有哪些</span><br>        String message = outstandingConfirms.get(deliveryTag);<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;未确认的消息是: &quot;</span> + message + <span class="hljs-string">&quot;, 未确认的消息tag: &quot;</span> + deliveryTag);<br>    &#125;;<br>    <span class="hljs-comment">// 准备消息的监听器 监听哪些消息成功了 哪些消息失败了</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 1.监听哪些消息成功了</span><br><span class="hljs-comment">     * 2.监听哪些消息失败了</span><br><span class="hljs-comment">     */</span><br><br>    channel.add<span class="hljs-constructor">ConfirmListener(<span class="hljs-params">ackCallback</span>, <span class="hljs-params">nackCallback</span>)</span>;  <span class="hljs-comment">// 异步通知</span><br><br>    long <span class="hljs-keyword">begin</span> = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>current<span class="hljs-constructor">TimeMillis()</span>;<br><br>    <span class="hljs-comment">// 批量发送消息</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; MESSAGE_COUNT; i++) &#123;<br>        String message = <span class="hljs-string">&quot;消息&quot;</span> + i;<br>        channel.basic<span class="hljs-constructor">Publish(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-params">queueName</span>, <span class="hljs-params">null</span>, <span class="hljs-params">message</span>.<span class="hljs-params">getBytes</span>()</span>);<br>        <span class="hljs-comment">// 1.此处记录下所有要发送的消息 消息的总和</span><br>        outstandingConfirms.put(channel.get<span class="hljs-constructor">NextPublishSeqNo()</span>, message);<br>    &#125;<br><br>    long <span class="hljs-keyword">end</span> = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>current<span class="hljs-constructor">TimeMillis()</span>;<br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;发布&quot;</span> + MESSAGE_COUNT + <span class="hljs-string">&quot;个异步批量确认消息, 耗时&quot;</span> + (<span class="hljs-keyword">end</span> - <span class="hljs-keyword">begin</span>) + <span class="hljs-string">&quot;ms&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>单独发布消息:<br>同步等待确认，简单，但吞吐量非常有限。<br>批量发布消息:<br>批量同步等待确认，简单，合理的吞吐量，一旦出现问题但很难推断出是那条消息出现了问题。<br>异步处理：<br>最佳性能和资源使用，在出现错误的情况下可以很好地控制，但是实现起来稍微难些</p><h2 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h2><p>简单模式 工作模式<br><img src="http://cdn.xiamu.icu//FluQzjWjV__U5Cz9QIYtbFlaFCHn.png"><br>发布, 订阅模式<br><img src="http://cdn.xiamu.icu//FnjnbubBN23HkZP1LvmKMjytNut_.png"></p><h2 id="绑定"><a href="#绑定" class="headerlink" title="绑定"></a>绑定</h2><p>创建一个队列<br><img src="http://cdn.xiamu.icu//FgXdI8GH--Z7T-SfZ0sy4n1BSZUD.png"><br>创建一个交换机<br><img src="http://cdn.xiamu.icu//FmaJDRsnh9nDGmajRq8BBV13ecLI.png"><br>让交换机和队列进行绑定<br><img src="http://cdn.xiamu.icu//FmaJDRsnh9nDGmajRq8BBV13ecLI.png"></p><h3 id="fanout-交换机"><a href="#fanout-交换机" class="headerlink" title="fanout 交换机"></a>fanout 交换机</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.five;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.CancelCallback;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.DeliverCallback;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Delivery;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 接收消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ReceiveLogs01</span> &#123;<br>    <span class="hljs-comment">// 交换机的名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">EXCHANGE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;logs&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> RabbitMqUtils.getChannel();<br>        <span class="hljs-comment">// 声明一个交换机</span><br>        channel.exchangeDeclare(EXCHANGE_NAME, <span class="hljs-string">&quot;fanout&quot;</span>);<br><br>        <span class="hljs-comment">// 声明一个队列 临时队列</span><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 生成一个临时队列 , 队列的名称是随机的</span><br><span class="hljs-comment">         * 当消费者断开与队列的连接的时候 队列就会自动删除</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">queueName</span> <span class="hljs-operator">=</span> channel.queueDeclare().getQueue();<br><br>        <span class="hljs-comment">// 绑定交换机与队列</span><br>        channel.queueBind(queueName, EXCHANGE_NAME, <span class="hljs-string">&quot;&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;等待接收消息, 把接收到消息打印到屏幕上...&quot;</span>);<br><br>        <span class="hljs-comment">// 接收消息 回调接口</span><br>        <span class="hljs-type">DeliverCallback</span> <span class="hljs-variable">deliverCallback</span> <span class="hljs-operator">=</span> (consumerTag, message) -&gt; &#123;<br>            System.out.println(<span class="hljs-string">&quot;ReceiveLogs01控制台打印接收到的消息: &quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(message.getBody(), <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>        &#125;;<br><br>        <span class="hljs-comment">// 消费者取消消息时回调接口</span><br>        <span class="hljs-type">CancelCallback</span> <span class="hljs-variable">cancelCallback</span> <span class="hljs-operator">=</span> (consumerTag) -&gt; &#123;<br><br>        &#125;;<br><br>        channel.basicConsume(queueName, <span class="hljs-literal">true</span>, deliverCallback, cancelCallback);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.five;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.CancelCallback;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.DeliverCallback;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 接收消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ReceiveLogs02</span> &#123;<br>    <span class="hljs-comment">// 交换机的名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">EXCHANGE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;logs&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> RabbitMqUtils.getChannel();<br>        <span class="hljs-comment">// 声明一个交换机</span><br>        channel.exchangeDeclare(EXCHANGE_NAME, <span class="hljs-string">&quot;fanout&quot;</span>);<br><br>        <span class="hljs-comment">// 声明一个队列 临时队列</span><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 生成一个临时队列 , 队列的名称是随机的</span><br><span class="hljs-comment">         * 当消费者断开与队列的连接的时候 队列就会自动删除</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">queueName</span> <span class="hljs-operator">=</span> channel.queueDeclare().getQueue();<br><br>        <span class="hljs-comment">// 绑定交换机与队列</span><br>        channel.queueBind(queueName, EXCHANGE_NAME, <span class="hljs-string">&quot;&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;等待接收消息, 把接收到消息打印到屏幕上...&quot;</span>);<br><br>        <span class="hljs-comment">// 接收消息 回调接口</span><br>        <span class="hljs-type">DeliverCallback</span> <span class="hljs-variable">deliverCallback</span> <span class="hljs-operator">=</span> (consumerTag, message) -&gt; &#123;<br>            System.out.println(<span class="hljs-string">&quot;ReceiveLogs02控制台打印接收到的消息: &quot;</span> + <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(message.getBody(), <span class="hljs-string">&quot;UTF-8&quot;</span>));<br>        &#125;;<br><br>        <span class="hljs-comment">// 消费者取消消息时回调接口</span><br>        <span class="hljs-type">CancelCallback</span> <span class="hljs-variable">cancelCallback</span> <span class="hljs-operator">=</span> (consumerTag) -&gt; &#123;<br><br>        &#125;;<br><br>        channel.basicConsume(queueName, <span class="hljs-literal">true</span>, deliverCallback, cancelCallback);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.five;<br><br><span class="hljs-keyword">import</span> com.atguigu.utils.RabbitMqUtils;<br><span class="hljs-keyword">import</span> com.rabbitmq.client.Channel;<br><br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 发消息 交换机</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EmitLog</span> &#123;<br>    <span class="hljs-comment">// 交换机的名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">EXCHANGE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;logs&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> RabbitMqUtils.getChannel();<br>        channel.exchangeDeclare(EXCHANGE_NAME, <span class="hljs-string">&quot;fanout&quot;</span>);<br><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">scanner</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span> (scanner.hasNext()) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> scanner.next();<br>            channel.basicPublish(EXCHANGE_NAME, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-literal">null</span>, message.getBytes(<span class="hljs-string">&quot;UTF-8&quot;</span>));<br>            System.out.println(<span class="hljs-string">&quot;生产者发出消息: &quot;</span> + message);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行效果如下 : 通过交换机实现每个队列都能接收到消息<br><img src="http://cdn.xiamu.icu//FsEbUMX9Ax1udAjtGKz6fXdH3vK9.png"></p><h2 id="direct-交换机"><a href="#direct-交换机" class="headerlink" title="direct 交换机"></a>direct 交换机</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DirectLogs</span> &#123;<br>    <span class="hljs-comment">// 交换机的名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">EXCHANGE_NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;direct_logs&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Channel</span> <span class="hljs-variable">channel</span> <span class="hljs-operator">=</span> RabbitMqUtils.getChannel();<br><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">scanner</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">while</span> (scanner.hasNext()) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> scanner.next();<br>            channel.basicPublish(EXCHANGE_NAME, <span class="hljs-string">&quot;warning&quot;</span>, <span class="hljs-literal">null</span>, message.getBytes(<span class="hljs-string">&quot;UTF-8&quot;</span>));<br>            System.out.println(<span class="hljs-string">&quot;生产者发出消息: &quot;</span> + message);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>交换机发送的 routerKey 是 warning, 那么只有对应的消费者是 warning 才会接收到发送来的消息</p><h2 id="Topics-交换机"><a href="#Topics-交换机" class="headerlink" title="Topics 交换机"></a>Topics 交换机</h2><p>发送 topic 交换机的消息的 routerKey 必须是以<strong>点号</strong>分隔开<br>_(星号)可以代替一个单词<br>#(井号)可以代替零个或多个单词<br><img src="http://cdn.xiamu.icu//FnFzUBXNjFZRSQjQvjaaqLeZrEHI.png"><br>C1 有一个 RouterKey, <em>.orange.</em><br>C2 有两个个 RouterKey, _.*rabbit lazy.#</p><p>quick.orange.rabbit 匹配 Q1 Q2<br>lazy.orange.elephant 匹配 Q1 Q2<br>quick.orange.fox 匹配 Q1<br>lazy.brown.fox 匹配 Q2<br>lazy.pink.rabbit 匹配 Q2<br>quick.brown.fox 匹配不到<br>quick.orange.male.rabbit 匹配不到<br>lazy.orange.male.rabbit 匹配 Q2</p><h2 id="死信队列"><a href="#死信队列" class="headerlink" title="死信队列"></a>死信队列</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 声明普通队列</span><br>        <span class="hljs-title class_">Map</span>&lt;<span class="hljs-title class_">String</span>, <span class="hljs-title class_">Object</span>&gt; <span class="hljs-variable language_">arguments</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        <span class="hljs-comment">// 过期时间 10s = 10000ms</span><br><span class="hljs-comment">//        arguments.put(&quot;x-message-ttl&quot;, 10000);</span><br>        <span class="hljs-comment">// 正常队列设置死信交换机</span><br>        <span class="hljs-variable language_">arguments</span>.<span class="hljs-title function_">put</span>(<span class="hljs-string">&quot;x-dead-letter-exchange&quot;</span>, <span class="hljs-variable constant_">DEAD_EXCHANGE</span>);<br>        <span class="hljs-comment">// 设置死信RoutingKey</span><br>        <span class="hljs-variable language_">arguments</span>.<span class="hljs-title function_">put</span>(<span class="hljs-string">&quot;x-dead-letter-routing-key&quot;</span>, <span class="hljs-string">&quot;lisi&quot;</span>);<br><br>        channel.<span class="hljs-title function_">queueDeclare</span>(<span class="hljs-variable constant_">NORMAL_QUEUE</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>, <span class="hljs-variable language_">arguments</span>);<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">    DeliverCallback deliverCallback = (consumerTag, message) -&gt; &#123;<br>        String msg = <span class="hljs-keyword">new</span> <span class="hljs-constructor">String(<span class="hljs-params">message</span>.<span class="hljs-params">getBody</span>()</span>, <span class="hljs-string">&quot;UTF-8&quot;</span>);<br>        <span class="hljs-keyword">if</span> (msg.equals(<span class="hljs-string">&quot;info5&quot;</span>)) &#123;<br>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;Consumer01接收到的消息: &quot;</span> + msg + <span class="hljs-string">&quot;: 此消息是被C1拒绝的&quot;</span>);<br>            channel.basic<span class="hljs-constructor">Reject(<span class="hljs-params">message</span>.<span class="hljs-params">getEnvelope</span>()</span>.get<span class="hljs-constructor">DeliveryTag()</span>, <span class="hljs-literal">false</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;Consumer01接收到的消息: &quot;</span> + msg);<br>            channel.basic<span class="hljs-constructor">Ack(<span class="hljs-params">message</span>.<span class="hljs-params">getEnvelope</span>()</span>.get<span class="hljs-constructor">DeliveryTag()</span>, <span class="hljs-literal">false</span>);<br>        &#125;<br>    &#125;;<br><br>    CancelCallback cancelCallback = (consumer) -&gt; &#123;<br><br>    &#125;;<br><br>    <span class="hljs-comment">// 开启手动应答</span><br>    channel.basic<span class="hljs-constructor">Consume(NORMAL_QUEUE, <span class="hljs-params">false</span>, <span class="hljs-params">deliverCallback</span>, <span class="hljs-params">cancelCallback</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fha4PX_He1z5Aea_0HW4CLv5rCkN.png"><br>当发送的消息处于 消息被拒绝, 消息的 TTL 过期, 队列打到最大长度 三种情况的一种, 就会发生死信<br>C1 拒收消息, 将由配置好的死信 C2 来接收处理消息</p><h2 id="延迟队列"><a href="#延迟队列" class="headerlink" title="延迟队列"></a>延迟队列</h2>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>MQ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringCloud</title>
    <link href="/Java/SpringCloud/"/>
    <url>/Java/SpringCloud/</url>
    
    <content type="html"><![CDATA[<p>Dubbo &#x3D;&gt; RPC<br>SpringCloud &#x3D;&gt; Restful</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>SpringCloud</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo切换主题以及主题的美化</title>
    <link href="/hexo/Hexo%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98%E4%BB%A5%E5%8F%8A%E4%B8%BB%E9%A2%98%E7%9A%84%E7%BE%8E%E5%8C%96/"/>
    <url>/hexo/Hexo%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98%E4%BB%A5%E5%8F%8A%E4%B8%BB%E9%A2%98%E7%9A%84%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="下载一个喜欢的主题"><a href="#下载一个喜欢的主题" class="headerlink" title="下载一个喜欢的主题"></a>下载一个喜欢的主题</h2><p>下载一个主题到 themes&#x2F;yilia</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">E:\Code\Blog\hexo-blog&gt;git <span class="hljs-built_in">clone</span> git@github.com:litten/hexo-theme-yilia.git themes/yilia<br></code></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>将 theme 的参数修改成 yilia, 然后报错</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: yilia<br></code></pre></td></tr></table></figure><h2 id="重新启动"><a href="#重新启动" class="headerlink" title="重新启动"></a>重新启动</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs excel"><span class="hljs-symbol">E:</span>\Code\B<span class="hljs-built_in">log</span>\hexo-blog&gt;hexo <span class="hljs-built_in">clean</span><br><br><span class="hljs-symbol">E:</span>\Code\B<span class="hljs-built_in">log</span>\hexo-blog&gt;hexo generate<br><br><span class="hljs-symbol">E:</span>\Code\B<span class="hljs-built_in">log</span>\hexo-blog&gt;hexo server<br><br><span class="hljs-symbol">E:</span>\Code\B<span class="hljs-built_in">log</span>\hexo-blog&gt;hexo deploy<br></code></pre></td></tr></table></figure><p>修改了主题不会立马生效, 我们可以喝杯茶, 抽根烟耐心等待下</p><p>另外推荐的主题:<br>quiet<br>doc: <a href="https://github.com/79E/hexo-theme-quiet">https://github.com/79E/hexo-theme-quiet</a><br>fluid<br>demo: <a href="https://hexo.fluid-dev.com/">https://hexo.fluid-dev.com/</a><br>doc: <a href="https://hexo.fluid-dev.com/docs/start/">https://hexo.fluid-dev.com/docs/start/</a><br>easyhexo<br>demo: <a href="https://easyhexo.com/">https://easyhexo.com/</a></p><h2 id="更换网站的-title"><a href="#更换网站的-title" class="headerlink" title="更换网站的 title"></a>更换网站的 title</h2><p>在_config.yaml 直接修改 title 的值</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"># Site<br><span class="hljs-symbol">title:</span> xiamu<br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">keywords:</span><br><span class="hljs-symbol">author:</span> 肉豆蔻吖<br><span class="hljs-symbol">language:</span> zh-CN<br><span class="hljs-symbol">timezone:</span> <span class="hljs-comment">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="更换网站的-favicon-ico"><a href="#更换网站的-favicon-ico" class="headerlink" title="更换网站的 favicon.ico"></a>更换网站的 favicon.ico</h2><p>在这个网站中找的一个 emoji 表情包做的 favicon.ico<br><a href="https://www.flaticon.com/">https://www.flaticon.com/</a><br><img src="http://cdn.xiamu.icu//FgWYqR8PjhEj-19SqJinqgPN0Gni.png"><br>把图片下载下来到 themes&#x2F;fluid&#x2F;source&#x2F;img<br>在_config.fluid.yaml 中引入下载好的图片</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 用于浏览器标签的图标</span><br><span class="hljs-comment"># Icon for browser tab</span><br>favicon: <span class="hljs-regexp">/img/</span>smile.png<br><span class="hljs-comment"># /img/fluid.png</span><br></code></pre></td></tr></table></figure><h2 id="引入自定义的-CSS"><a href="#引入自定义的-CSS" class="headerlink" title="引入自定义的 CSS"></a>引入自定义的 CSS</h2><p>当前选中文本的颜色是浏览器默认自带的蓝色的<br><img src="http://cdn.xiamu.icu//FgUip989myK97CmIxpebp5S0dQzD.png"><br>在 themes&#x2F;fluid&#x2F;source&#x2F;css&#x2F;创建 custom.css, 填写如下 css 代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-pseudo">::selection</span> &#123;<br>    <span class="hljs-attribute">color</span>: unset;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0px</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">209</span>, <span class="hljs-number">234</span>, <span class="hljs-number">254</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>_config&#x2F;fluid.yaml 引入 custom.css 的路径</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 指定自定义 .css 文件路径，用法和 custom_js 相同</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br>custom_css: <span class="hljs-regexp">/css/</span>custom.css<br></code></pre></td></tr></table></figure><p>保存预览, 文本选中的样式就发生了变化<br><img src="http://cdn.xiamu.icu//Fhmi0cH-GbbonE7poyfQQxZQzuGO.png"></p><h2 id="url-的设置"><a href="#url-的设置" class="headerlink" title="url 的设置"></a>url 的设置</h2><p>doc: <a href="https://hexo.io/docs/configuration.html">https://hexo.io/docs/configuration.html</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br>url: http:<span class="hljs-regexp">//</span>roudoukou.github.io<br>permalink: :category<span class="hljs-regexp">/:name/</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo部署到github</title>
    <link href="/hexo/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0github/"/>
    <url>/hexo/Hexo%E9%83%A8%E7%BD%B2%E5%88%B0github/</url>
    
    <content type="html"><![CDATA[<h2 id="创建-github-仓库"><a href="#创建-github-仓库" class="headerlink" title="创建 github 仓库"></a>创建 github 仓库</h2><p>创建一个 github 仓库<br><a href="https://github.com/roudoukou/roudoukou.github.io">https://github.com/roudoukou/roudoukou.github.io</a><br>仓库命名结尾一定要以 github 用户名.github.io 这种格式创建</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">E:\<span class="hljs-built_in">Code</span>\Blog\hexo-blog&gt;npm install hexo-deployer-git --<span class="hljs-keyword">save</span><br></code></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>修改_config.yml 末尾<br>type 修改成 git<br>repo 修改成 github 仓库地址<br>branch 填写仓库的分支</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/roudoukou/roudoukou.github.io.git</span><br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><p>配置修改好之后, 部署</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">E:\<span class="hljs-meta">Code</span>\Blog\hexo-blog&gt;hexo deploy<br></code></pre></td></tr></table></figure><p>部署完成之后, 在浏览器访问即可<br><img src="http://cdn.xiamu.icu//FgMYGQ6JwyzQEl2b5G3Y0YLIhO_0.png"></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo本地使用</title>
    <link href="/hexo/Hexo%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8/"/>
    <url>/hexo/Hexo%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="下载-Node-js"><a href="#下载-Node-js" class="headerlink" title="下载 Node.js"></a>下载 Node.js</h2><p><a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br><img src="http://cdn.xiamu.icu//FuR5YOhjfVvMsVZbLLkcYDZi-q_L.png"></p><h2 id="安装-cnmp-可选"><a href="#安装-cnmp-可选" class="headerlink" title="安装 cnmp(可选)"></a>安装 cnmp(可选)</h2><blockquote><p>争议 cnpm 应该是指的国内的 npm 镜像源，npm 是使用的国外的镜像源</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install -g cnpm --registry=https:<span class="hljs-regexp">//</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>如果安装了 cnpm, 以下的命令都用 cnpm</p><h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo-安装"></a>Hexo-安装</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">E:</span>\Code\Blog&gt;npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>hexo -v 查看是否安装成功<br><img src="http://cdn.xiamu.icu//Fs8hXKL8y50b4vEhrE6MFvI9sKLJ.png"></p><h2 id="Hexo-根目录的创建"><a href="#Hexo-根目录的创建" class="headerlink" title="Hexo-根目录的创建"></a>Hexo-根目录的创建</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">E:\Code\<span class="hljs-keyword">Blog&gt;mkdir </span>hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span><br>E:\Code\<span class="hljs-keyword">Blog&gt;cd </span>hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span><br>E:\Code\<span class="hljs-keyword">Blog\hexo-blog&gt;</span><br><span class="hljs-keyword"></span><br></code></pre></td></tr></table></figure><h2 id="Hexo-初始化"><a href="#Hexo-初始化" class="headerlink" title="Hexo-初始化"></a>Hexo-初始化</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">E:\<span class="hljs-meta">Code</span>\Blog\hexo-blog&gt;hexo init<br></code></pre></td></tr></table></figure><h2 id="Hexo-启动"><a href="#Hexo-启动" class="headerlink" title="Hexo-启动"></a>Hexo-启动</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs armasm">E:\<span class="hljs-meta">Code</span>\Blog\hexo-blog&gt;hexo server<br><br>或者简写成<br>E:\<span class="hljs-meta">Code</span>\Blog\hexo-blog&gt;hexo s<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fv-J8xq9lH2xjBl5p1FOrHNYi3oe.png"><br><img src="http://cdn.xiamu.icu//Fu_Eck2w2oyJHijFLKck4_zS2Kah.png"><br>此时 Hexo 就成功启动了</p><h2 id="Hexo-创建第一篇文章"><a href="#Hexo-创建第一篇文章" class="headerlink" title="Hexo-创建第一篇文章"></a>Hexo-创建第一篇文章</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">E:<span class="hljs-string">\Code\Blog\hexo-blog&gt;hexo</span> <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;我的第一篇博客&quot;</span><br></code></pre></td></tr></table></figure><p>随便编辑一下 “我的第一篇博客.md”, 然后保存</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">我的第一篇博客</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2023-02-07 17:13:39</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment">## 我的第一篇博客</span><br><br><span class="hljs-string">这是刚刚用Hexo创建出来的</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fty1abBU8fVhkPSe0hZfYfRTZQGA.png"></p><h2 id="Hexo-清理"><a href="#Hexo-清理" class="headerlink" title="Hexo-清理"></a>Hexo-清理</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel"><span class="hljs-symbol">E:</span>\Code\B<span class="hljs-built_in">log</span>\hexo-blog&gt;hexo <span class="hljs-built_in">clean</span><br></code></pre></td></tr></table></figure><h2 id="Hexo-生成"><a href="#Hexo-生成" class="headerlink" title="Hexo-生成"></a>Hexo-生成</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog">E:\Code\Blog\hexo-blog&gt;hexo <span class="hljs-keyword">generate</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dubbo</title>
    <link href="/Java/Dubbo/"/>
    <url>/Java/Dubbo/</url>
    
    <content type="html"><![CDATA[<h2 id="安装-zookeeper"><a href="#安装-zookeeper" class="headerlink" title="安装 zookeeper"></a>安装 zookeeper</h2><p>在 windows 环境安装 zookeeper, 为了省事(其实我就是偷懒, 视频中安装的地方就是 windows)<br><img src="http://cdn.xiamu.icu//FicRGS_5xp-JnHlMro0hjy_8z0IJ.png"><br>在根目录下创建 data 目录,<br>打开 conf 拷贝<code>zoo_sample.cfg</code>一份, 修改名称为<code>zoo.cfg</code><br>打开 cmd, 进入 bin 目录, <code>zkServer.cmd</code>启动服务<br>打开 cmd, 进入 bin 目录, <code>zkCli.cmd</code>启动客户端</p><h2 id="安装-dubbo-admin"><a href="#安装-dubbo-admin" class="headerlink" title="安装 dubbo-admin"></a>安装 dubbo-admin</h2><p>dubbo 本身并不是一个服务软件。它其实就是一个 jar 包能够帮你的 java 程序连接到 zookeeper，并利用 zookeeper 消费、提供服务。所以你不用在 Linux 上启动什么 dubbo 服务。<br>但是为了让用户更好的管理监控众多的 dubbo 服务，官方提供了一个可视化的监控程序，不过这个监控即使不装也不影响使用。<br>github 地址:<br><a href="https://github.com/apache/dubbo-admin">https://github.com/apache/dubbo-admin</a></p><h3 id="通过源码打包运行"><a href="#通过源码打包运行" class="headerlink" title="通过源码打包运行"></a>通过源码打包运行</h3><ol><li>下载代码: git clone <a href="https://github.com/apache/dubbo-admin.git">https://github.com/apache/dubbo-admin.git</a></li><li>在 dubbo-admin-server&#x2F;src&#x2F;main&#x2F;resources&#x2F;application.properties 中指定注册中心地址</li><li>构建<ul><li>mvn clean package -Dmaven.test.skip&#x3D;true</li></ul></li><li>启动<ul><li>mvn –projects dubbo-admin-server spring-boot:run 或者</li><li>cd dubbo-admin-distribution&#x2F;target; java -jar dubbo-admin-${project.version}.jar</li></ul></li><li>访问 <a href="http://localhost:38080/">http://localhost:38080</a></li></ol><p>检查 zookeeper 的主机地址是否正确<br><img src="http://cdn.xiamu.icu//FhSrof70m_-KUUGvhXLXRoNDK9CA.png"><br>使用 maven 进行打包<br><img src="http://cdn.xiamu.icu//FrlJKPBb9cq0JxynSOxUGJFDdewM.png"><br>运行打包好的 jar 项目<br><img src="http://cdn.xiamu.icu//FjxbwnUUeh39vshBLZPSqtZJ_Wdx.png"><br>可见端口是 7001,<br><img src="http://cdn.xiamu.icu//FuW2NgR42hnerMfvuXmrxOA-7B_Z.png"><br>访问<a href="http://localhost:7001/">http://localhost:7001/</a><br>账号 root, 密码 root<img src="http://cdn.xiamu.icu//FrTWv3zBCd6npkCyxy85vEtP9qyJ.png"></p><h2 id="服务消费者配置-amp-测试"><a href="#服务消费者配置-amp-测试" class="headerlink" title="服务消费者配置&amp;测试"></a>服务消费者配置&amp;测试</h2><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>订单服务 web 模块</td><td>创建订单等</td></tr><tr><td>用户服务 service 模块</td><td>查询用户地址等</td></tr></tbody></table><p>测试预期结果：<br>订单服务 web 模块在 A 服务器，用户服务模块在 B 服务器，A 可以远程调用 B 的功能。</p><h2 id="监控中心-Simple-Monitor-安装配置"><a href="#监控中心-Simple-Monitor-安装配置" class="headerlink" title="监控中心-Simple Monitor 安装配置"></a>监控中心-Simple Monitor 安装配置</h2><p>对 dubbo-monitor-simple 使用 maven 进行打包<code>mvn package</code><br><img src="http://cdn.xiamu.icu//FpENFOe1aTMuc4jInTiElFUjygSL.png"><br>检查配置文件端口是否正确<br><img src="http://cdn.xiamu.icu//FnQCXGDh3ZZDCyXtRO-6sElCXUF_.png"><br>E:\Code\Dubbo\课件\software\dubbo-monitor-simple-2.0.0\assembly.bin<br>在 bin 目录下双击 start.bat 启动 dubbo<br><img src="http://cdn.xiamu.icu//Fp6bTu3GgacsF3aTJAZPi_xfAjF4.png"><br><img src="http://cdn.xiamu.icu//FiwVJVdhG4uvWQQo2jY_GWYFuLqq.png"><br>启动好了之后访问<a href="http://localhost:8080/">http://localhost:8080/</a><br><img src="http://cdn.xiamu.icu//FhkXLPsfNxxUfOT8crH6KpBmn1CK.png"><br><strong>配置监控中心</strong><br><a href="https://cn.dubbo.apache.org/zh/docsv2.7/user/references/xml/dubbo-monitor/">https://cn.dubbo.apache.org/zh/docsv2.7/user/references/xml/dubbo-monitor/</a><br>consumer.xml 中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 配置监控中心 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:monitor</span> <span class="hljs-attr">protocol</span>=<span class="hljs-string">&quot;registry&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:monitor</span>&gt;</span><br><span class="hljs-comment">&lt;!--&lt;dubbo:monitor address=&quot;127.0.0.1:7070&quot;&gt;&lt;/dubbo:monitor&gt;--&gt;</span><br></code></pre></td></tr></table></figure><p>provider.xml 中配置</p><h2 id="Dubbo-与-SpringBoot-整合"><a href="#Dubbo-与-SpringBoot-整合" class="headerlink" title="Dubbo 与 SpringBoot 整合"></a>Dubbo 与 SpringBoot 整合</h2><h2 id="配置-Dubbo-properties-amp-属性加载顺序"><a href="#配置-Dubbo-properties-amp-属性加载顺序" class="headerlink" title="配置-Dubbo.properties&amp;属性加载顺序"></a>配置-Dubbo.properties&amp;属性加载顺序</h2><p><img src="http://cdn.xiamu.icu//FrsSSA79uNBtD1yNJVcPE3QIiDUl.png"><br>BootUserServiceProviderApplicaion<br>VM options 运行参数 <code>-Ddubbo.protocol.port=20880</code><br>applicaion.yaml 配置 (相当于 XML)</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">dubbo:</span><br><span class="hljs-symbol">  application:</span><br><span class="hljs-symbol">    name:</span> user-service-provider<br><span class="hljs-symbol">  registry:</span><br><span class="hljs-symbol">    address:</span> zookeeper:<span class="hljs-comment">//127.0.0.1:2181</span><br><span class="hljs-symbol">  protocol:</span><br><span class="hljs-symbol">    name:</span> dubbo<br><span class="hljs-symbol">    port:</span> <span class="hljs-number">20881</span><br><span class="hljs-symbol">  monitor:</span><br><span class="hljs-symbol">    protocol:</span> registry<br></code></pre></td></tr></table></figure><p>dubbo.properties 配置</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-title">dubbo</span>.protocol.<span class="hljs-keyword">port</span>=20882<br><br></code></pre></td></tr></table></figure><h2 id="配置-启动检查"><a href="#配置-启动检查" class="headerlink" title="配置-启动检查"></a>配置-启动检查</h2><p><a href="https://cn.dubbo.apache.org/zh/docs/advanced/preflight-check/">https://cn.dubbo.apache.org/zh/docs/advanced/preflight-check/</a><br>关闭某个服务的启动时检查(没有提供者时报错)</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;dubbo:<span class="hljs-keyword">reference</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;UserService&quot;</span> interface=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span> /&gt;<br><br></code></pre></td></tr></table></figure><p>关闭所有服务的启动时检查(没有提供者时报错)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:consumer</span> <span class="hljs-attr">check</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:consumer</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="配置-超时-amp-配置覆盖关系"><a href="#配置-超时-amp-配置覆盖关系" class="headerlink" title="配置-超时&amp;配置覆盖关系"></a>配置-超时&amp;配置覆盖关系</h2><p><a href="https://cn.dubbo.apache.org/zh/docs/references/configuration/xml/">https://cn.dubbo.apache.org/zh/docs/references/configuration/xml/</a><br><img src="http://cdn.xiamu.icu//FsJH2h6IOBRPRQMe4-i6x91QNOZO.png"><br>优先级:</p><ul><li>方法级优先，接口级次之，全局配置再次之。</li><li>如果级别一样，则消费方优先，提供方次之。</li></ul><p>provider.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 声明需要暴露的服务接口 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:service</span> <span class="hljs-attr">interface</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;UserServiceImpl&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;4000&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:method</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;getUserAddressList&quot;</span> <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;2000&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:method</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:service</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:provider</span> <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;6000&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:provider</span>&gt;</span><br></code></pre></td></tr></table></figure><p>consumer.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;dubbo:reference<br>        <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;UserService&quot;</span><br>        interface=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span><br>        <span class="hljs-built_in">timeout</span>=<span class="hljs-string">&quot;3000&quot;</span>&gt;<br>    &lt;dubbo:method name=<span class="hljs-string">&quot;getUserAddressList&quot;</span> <span class="hljs-built_in">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;&lt;/dubbo:method&gt;<br>&lt;/dubbo:reference&gt;<br><br>&lt;dubbo:consumer check=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-built_in">timeout</span>=<span class="hljs-string">&quot;5000&quot;</span>&gt;&lt;/dubbo:consumer&gt;<br></code></pre></td></tr></table></figure><h2 id="配置-重试次数"><a href="#配置-重试次数" class="headerlink" title="配置-重试次数"></a>配置-重试次数</h2><p>retries-“”: 重试次数, 不包含第一次调用, 0 代表不重试<br>幂等(设置重试次数)[查询, 删除, 修改] 非幂等(不能设置重试次数)[新增]</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- retries-&quot;&quot;: 重试次数, 不包含第一次调用, 0代表不重试 --&gt;</span><br><span class="hljs-comment">&lt;!-- 幂等(设置重试次数)[查询, 删除, 修改] 非幂等(不能设置重试次数)[新增] --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:reference</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;UserService&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">interface</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;5000&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">retries</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--&lt;dubbo:method name=&quot;getUserAddressList&quot; timeout=&quot;1000&quot;&gt;&lt;/dubbo:method&gt;--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:reference</span>&gt;</span><br></code></pre></td></tr></table></figure><p>重试三次, 如果有三个提供者, 将会每个都重试一遍<br><img src="http://cdn.xiamu.icu//Flvfok_AEYHshAkYio0k7b5veHHu.png"></p><h2 id="配置-多版本"><a href="#配置-多版本" class="headerlink" title="配置-多版本"></a>配置-多版本</h2><p>provider.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:service</span> <span class="hljs-attr">interface</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;UserServiceImpl01&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.0.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:method</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;getUserAddressList&quot;</span> <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:method</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:service</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:service</span> <span class="hljs-attr">interface</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;UserServiceImpl02&quot;</span></span><br><span class="hljs-tag">               <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;2.0.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:method</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;getUserAddressList&quot;</span> <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:method</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:service</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 和本地bean一样实现服务 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;UserServiceImpl01&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.impl.UserServiceImpl&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;UserServiceImpl02&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.impl.UserServiceImpl2&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>consumer.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:reference</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;UserService&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">interface</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;5000&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">retries</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;*&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--&lt;dubbo:method name=&quot;getUserAddressList&quot; timeout=&quot;1000&quot;&gt;&lt;/dubbo:method&gt;--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:reference</span>&gt;</span><br></code></pre></td></tr></table></figure><p>消费者指定需要使用的 version<br>version 可以填 1.0.0&#x2F;2.0.0&#x2F;* *表示随机的新老版本<br>不同运行结果如下:<br><img src="http://cdn.xiamu.icu//FuwcXwwihNRc2MfQjgBtjX6-lIHW.png"></p><h2 id="配置-本地存根"><a href="#配置-本地存根" class="headerlink" title="配置-本地存根"></a>配置-本地存根</h2><p>UserServiceStub.java</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceStub</span> <span class="hljs-title">implements</span> <span class="hljs-title">UserService</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> UserService userService;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 传入的是userService远程的代理对象</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> userService</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> UserServiceStub(UserService userService) &#123;<br>        <span class="hljs-keyword">this</span>.userService = userService;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;UserAddress&gt; getUserAddressList(String userId) &#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;UserServiceStub...&quot;</span>);<br>        <span class="hljs-keyword">if</span> (!StringUtils.isEmpty(userId)) &#123;<br>            <span class="hljs-keyword">return</span> userService.getUserAddressList(userId);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>consumer.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dubbo:reference</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;UserService&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">interface</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;5000&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">retries</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;*&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">stub</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserServiceStub&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--&lt;dubbo:method name=&quot;getUserAddressList&quot; timeout=&quot;1000&quot;&gt;&lt;/dubbo:method&gt;--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:reference</span>&gt;</span><br></code></pre></td></tr></table></figure><p>给 stub 设置包名</p><h2 id="配置-SpringBoot-整合的三种方式"><a href="#配置-SpringBoot-整合的三种方式" class="headerlink" title="配置-SpringBoot 整合的三种方式"></a>配置-SpringBoot 整合的三种方式</h2><ol><li>导入 dubbo-starter, 在 application.properties 配置属性, 使用@Service[暴露服务], 使用@Reference[引用服务]</li><li>保留 dubbo.xml 配置文件</li></ol><p>导入 dubbo-starter, 使用@ImportResource 导入 dubbo 的配置文件即可</p><ol start="3"><li>使用注解 API 的方式</li></ol><p>将每一个组件手动创建到容器中, 让 dubbo 来扫描其他的组件</p><p><strong>xml 的方式</strong><br>provider.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:dubbo</span>=<span class="hljs-string">&quot;http://dubbo.apache.org/schema/dubbo&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        http://dubbo.apache.org/schema/dubbo        http://dubbo.apache.org/schema/dubbo/dubbo.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 提供方应用信息，用于计算依赖关系 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:application</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;boot-user-service-provider&quot;</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 使用multicast广播注册中心暴露服务地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:registry</span> <span class="hljs-attr">address</span>=<span class="hljs-string">&quot;zookeeper://127.0.0.1:2181&quot;</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:protocol</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dubbo&quot;</span> <span class="hljs-attr">port</span>=<span class="hljs-string">&quot;20882&quot;</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 和本地bean一样实现服务 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;UserServiceImpl&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.impl.UserServiceImpl&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 声明需要暴露的服务接口 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:service</span> <span class="hljs-attr">interface</span>=<span class="hljs-string">&quot;com.atguigu.gmall.service.UserService&quot;</span></span><br><span class="hljs-tag">                   <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;UserServiceImpl&quot;</span></span><br><span class="hljs-tag">                   <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.0.0&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:method</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;getUserAddressList&quot;</span> <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:method</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:service</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:provider</span> <span class="hljs-attr">timeout</span>=<span class="hljs-string">&quot;1000&quot;</span> <span class="hljs-attr">token</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:provider</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 连接监控中心 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dubbo:monitor</span> <span class="hljs-attr">protocol</span>=<span class="hljs-string">&quot;registry&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dubbo:monitor</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这个 xml 文件中注入了 bean, UserService 就不需要@Service 这个注解暴露服务<br>UserService 中<br>@Service 是 com.alibaba.dubbo.config.annotation.Service;包下的</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">import</span> com.alibaba.dubbo.config.annotation.Service;<br><br><span class="hljs-comment">//@Service   // 暴露服务</span><br>@Component<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserServiceImpl</span> <span class="hljs-keyword"><span class="hljs-keyword">implements</span> <span class="hljs-type">UserService</span></span> </span>&#123;<br><br>    @Override<br>    <span class="hljs-keyword">public</span> List&lt;UserAddress&gt; getUserAddressList(<span class="hljs-keyword">String</span> userId) &#123;<br>        UserAddress address1 = <span class="hljs-keyword">new</span> <span class="hljs-type">UserAddress</span>(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;北京市昌平区宏福科技园综合楼3层&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;李老师&quot;</span>, <span class="hljs-string">&quot;010-56253825&quot;</span>, <span class="hljs-string">&quot;Y&quot;</span>);<br>        UserAddress address2 = <span class="hljs-keyword">new</span> <span class="hljs-type">UserAddress</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;深圳市宝安区西部硅谷大厦B座3层（深圳分校）&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;王老师&quot;</span>, <span class="hljs-string">&quot;010-56253825&quot;</span>, <span class="hljs-string">&quot;N&quot;</span>);<br><br>        <span class="hljs-keyword">return</span> Arrays.asList(address1,address2);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>Application</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">//@EnableDubbo // 开启基于注解的dubbo功能</span><br><span class="hljs-variable">@ImportResource</span>(locations = <span class="hljs-string">&quot;classpath:provider.xml&quot;</span>)<br><span class="hljs-variable">@SpringBootApplication</span><br>public class BootUserServiceProviderApplication &#123;<br><br>    <span class="hljs-selector-tag">public</span> <span class="hljs-selector-tag">static</span> <span class="hljs-selector-tag">void</span> <span class="hljs-selector-tag">main</span>(String[] args) &#123;<br>        <span class="hljs-selector-tag">SpringApplication</span><span class="hljs-selector-class">.run</span>(BootUserServiceProviderApplication.class, args);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注解的方式</strong><br>MyDubboConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.gmall.config;<br><br><span class="hljs-keyword">import</span> com.alibaba.dubbo.config.*;<br><span class="hljs-keyword">import</span> com.atguigu.gmall.service.UserService;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyDubboConfig</span> &#123;<br><br>    <span class="hljs-comment">//    &lt;dubbo:application name=&quot;boot-user-service-provider&quot; /&gt;</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ApplicationConfig <span class="hljs-title function_">applicationConfig</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">ApplicationConfig</span> <span class="hljs-variable">applicationConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ApplicationConfig</span>();<br>        applicationConfig.setName(<span class="hljs-string">&quot;boot-user-service-provider&quot;</span>);<br>        <span class="hljs-keyword">return</span> applicationConfig;<br>    &#125;<br><br>    <span class="hljs-comment">//    &lt;dubbo:registry address=&quot;zookeeper://127.0.0.1:2181&quot; /&gt;</span><br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RegistryConfig <span class="hljs-title function_">registryConfig</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">RegistryConfig</span> <span class="hljs-variable">registryConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegistryConfig</span>();<br>        registryConfig.setAddress(<span class="hljs-string">&quot;zookeeper://127.0.0.1:2181&quot;</span>);<br>        <span class="hljs-keyword">return</span> registryConfig;<br>    &#125;<br><br>    <span class="hljs-comment">//    &lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20882&quot; /&gt;</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ProtocolConfig <span class="hljs-title function_">protocolConfig</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">ProtocolConfig</span> <span class="hljs-variable">protocolConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProtocolConfig</span>();<br>        protocolConfig.setName(<span class="hljs-string">&quot;dubbo&quot;</span>);<br>        protocolConfig.setPort(<span class="hljs-number">20882</span>);<br>        <span class="hljs-keyword">return</span> protocolConfig;<br>    &#125;<br><br>    <span class="hljs-comment">//    &lt;dubbo:service interface=&quot;com.atguigu.gmall.service.UserService&quot;</span><br>    <span class="hljs-comment">//                   ref=&quot;UserServiceImpl&quot;</span><br>    <span class="hljs-comment">//                   timeout=&quot;1000&quot; version=&quot;1.0.0&quot;&gt;</span><br>    <span class="hljs-comment">//        &lt;dubbo:method name=&quot;getUserAddressList&quot; timeout=&quot;1000&quot;&gt;&lt;/dubbo:method&gt;</span><br>    <span class="hljs-comment">//    &lt;/dubbo:service&gt;</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ServiceConfig&lt;UserService&gt; <span class="hljs-title function_">userServiceServiceConfig</span><span class="hljs-params">(UserService userService)</span> &#123;<br>        ServiceConfig&lt;UserService&gt; userServiceServiceConfig = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ServiceConfig</span>&lt;&gt;();<br>        userServiceServiceConfig.setInterface(UserService.class);<br>        userServiceServiceConfig.setRef(userService);<br>        userServiceServiceConfig.setVersion(<span class="hljs-string">&quot;1.0.0&quot;</span>);<br><br>        <span class="hljs-comment">// 配置每一个method的信息</span><br>        <span class="hljs-type">MethodConfig</span> <span class="hljs-variable">methodConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MethodConfig</span>();<br>        methodConfig.setName(<span class="hljs-string">&quot;getUserAddressList&quot;</span>);<br>        methodConfig.setTimeout(<span class="hljs-number">1000</span>);<br><br>        <span class="hljs-comment">// 将method的设置关联到service配置中</span><br>        List&lt;MethodConfig&gt; methodConfigList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        methodConfigList.add(methodConfig);<br>        userServiceServiceConfig.setMethods(methodConfigList);<br>        <span class="hljs-keyword">return</span> userServiceServiceConfig;<br>    &#125;<br><br>    <span class="hljs-comment">//    &lt;dubbo:provider timeout=&quot;1000&quot;&gt;&lt;/dubbo:provider&gt;</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ProviderConfig <span class="hljs-title function_">providerConfig</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">ProviderConfig</span> <span class="hljs-variable">providerConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProviderConfig</span>();<br>        providerConfig.setTimeout(<span class="hljs-number">1000</span>);<br>        <span class="hljs-keyword">return</span> providerConfig;<br>    &#125;<br><br>    <span class="hljs-comment">//    &lt;dubbo:monitor protocol=&quot;registry&quot; &gt;&lt;/dubbo:monitor&gt;</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MonitorConfig <span class="hljs-title function_">monitorConfig</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MonitorConfig</span> <span class="hljs-variable">monitorConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MonitorConfig</span>();<br>        monitorConfig.setProtocol(<span class="hljs-string">&quot;registry&quot;</span>);<br>        <span class="hljs-keyword">return</span> monitorConfig;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>UserService 需要暴露服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span>   <span class="hljs-comment">// 暴露服务</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserService</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;UserAddress&gt; <span class="hljs-title function_">getUserAddressList</span><span class="hljs-params">(String userId)</span> &#123;<br>        <span class="hljs-type">UserAddress</span> <span class="hljs-variable">address1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserAddress</span>(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;北京市昌平区宏福科技园综合楼3层&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;李老师&quot;</span>, <span class="hljs-string">&quot;010-56253825&quot;</span>, <span class="hljs-string">&quot;Y&quot;</span>);<br>        <span class="hljs-type">UserAddress</span> <span class="hljs-variable">address2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserAddress</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;深圳市宝安区西部硅谷大厦B座3层（深圳分校）&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;王老师&quot;</span>, <span class="hljs-string">&quot;010-56253825&quot;</span>, <span class="hljs-string">&quot;N&quot;</span>);<br><br>        <span class="hljs-keyword">return</span> Arrays.asList(address1,address2);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>Application</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-comment">//@EnableDubbo // 开启基于注解的dubbo功能</span><br><span class="hljs-comment">//@ImportResource(locations = &quot;classpath:provider.xml&quot;)</span><br><span class="hljs-variable">@EnableDubbo</span>(scanBasePackages = <span class="hljs-string">&quot;com.atguigu.gmall&quot;</span>)<br><span class="hljs-variable">@SpringBootApplication</span><br>public class BootUserServiceProviderApplication &#123;<br><br>    <span class="hljs-selector-tag">public</span> <span class="hljs-selector-tag">static</span> <span class="hljs-selector-tag">void</span> <span class="hljs-selector-tag">main</span>(String[] args) &#123;<br>        <span class="hljs-selector-tag">SpringApplication</span><span class="hljs-selector-class">.run</span>(BootUserServiceProviderApplication.class, args);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="高可用-ZooKeeper-宕机与-Dubbo-直连"><a href="#高可用-ZooKeeper-宕机与-Dubbo-直连" class="headerlink" title="高可用-ZooKeeper 宕机与 Dubbo 直连"></a>高可用-ZooKeeper 宕机与 Dubbo 直连</h2><p><img src="http://cdn.xiamu.icu//FjaEbiGhM8BJPZ69ZETZ6jFEDrKj.png"><br>注册中心挂了, 仍然能消耗暴露的服务<br>健壮性</p><ul><li>监控中心宕掉不影响使用，只是丢失部分采样数据</li><li>数据库宕掉后，注册中心仍能通过缓存提供服务列表查询，但不能注册新服务</li><li>注册中心对等集群，任意一台宕掉后，将自动切换到另一台</li><li><strong>注册中心全部宕掉后，服务提供者和服务消费者仍能通过本地缓存通讯</strong></li><li>服务提供者无状态，任意一台宕掉后，不影响使用</li><li>服务提供者全部宕掉后，服务消费者应用将无法使用，并无限次重连等待服务提供者恢复</li></ul><p><img src="http://cdn.xiamu.icu//FujPqz_xF60myaTq46SBsQ9inpyS.png"></p><p>dubbo 直连</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-meta">@Reference(url = <span class="hljs-string">&quot;127.0.0.1:20882&quot;</span>)</span> <span class="hljs-comment">// dubbo直连</span><br></code></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><img src="http://cdn.xiamu.icu//FsQEVVw9ry0hR_YJmou6whjy6JGg.png"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Dubbo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ZooKeeper</title>
    <link href="/Java/ZooKeeper/"/>
    <url>/Java/ZooKeeper/</url>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://zookeeper.apache.org/">https://zookeeper.apache.org/</a><br><img src="http://cdn.xiamu.icu//FnfDmz4hkkqKN8B9weL91s63SXeZ.png"><br><a href="https://archive.apache.org/dist/zookeeper/">https://archive.apache.org/dist/zookeeper/</a><br>我们选择比较稳定的版本 3.5.7<br><img src="http://cdn.xiamu.icu//FupCiA_0rnsNAlKf1Vcfe4-JaMrx.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>上传到 linux 上<br><img src="http://cdn.xiamu.icu//FjnI6ho032YEB4qrWT1xppQQOYem.png"><br>解压缩<br><code>[xiamu@hadoop202 software]$ tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/module/</code><br>修改名称<br><code>[xiamu@hadoop202 module]$ mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7/</code><br>配置修改<br><code>[xiamu@hadoop202 module]$ cd zookeeper-3.5.7/</code><br><code>[xiamu@hadoop202 zookeeper-3.5.7]$ mkdir zkData</code><br><code>[xiamu@hadoop202 zookeeper-3.5.7]$ cd conf/</code><br><code>[xiamu@hadoop202 zookeeper-3.5.7]$ mv zoo_sample.cfg zoo.cfg</code><br><code>[xiamu@hadoop202 conf]$ vim zoo.cfg</code><br>修改 dataDir 的路径为刚刚创建的 zkData 的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">dataDir=/opt/module/zookeeper-3.5.7/zkData<br><br></code></pre></td></tr></table></figure><h2 id="本地启动和停止"><a href="#本地启动和停止" class="headerlink" title="本地启动和停止"></a>本地启动和停止</h2><p><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkServer.sh start</code>启动 zookeeper</p><p><code>[xiamu@hadoop202 zookeeper-3.5.7]$ jps </code>查看进程是否启动<br>4720 Jps<br>4686 QuorumPeerMain</p><p><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkServer.sh status</code>查看状态<br>ZooKeeper JMX enabled by default<br>Using config: &#x2F;opt&#x2F;module&#x2F;zookeeper-3.5.7&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg<br>Client port found: 2181. Client address: localhost.<br>Mode: standalone</p><p><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkCli.sh </code>启动客户端<br><code>[zk: localhost:2181(CONNECTED) 0] quit</code>退出客户端</p><p><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkServer.sh stop</code>停止 ZooKeeper<br>ZooKeeper JMX enabled by default<br>Using config: &#x2F;opt&#x2F;module&#x2F;zookeeper-3.5.7&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg<br>Stopping zookeeper … STOPPED</p><h2 id="集群安装"><a href="#集群安装" class="headerlink" title="集群安装"></a>集群安装</h2><p>在创建好的 zkData 目录下创建一个文件 myid<br><code>[xiamu@hadoop202 zkData]$ vim myid</code><br>2<br><code>[xiamu@hadoop203 zkData]$ vim myid</code><br>3<br><code>[xiamu@hadoop204 zkData]$ vim myid</code><br>4<br>在 hadoop202(102)中设置 2<br>在 hadoop203(103)中设置 3<br>在 hadoop204(104)中设置 4<br>分发脚本命令<code>[xiamu@hadoop202 module]$ xsync zookeeper-3.5.7/</code></p><p>配置<code>[xiamu@hadoop202 conf]$ vim zoo.cfg </code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#######################cluster##########################</span><br>server.2=hadoop202:2888:3888server.3=hadoop203:2888:3888<br>server.4=hadoop204:2888:3888<br><br></code></pre></td></tr></table></figure><p>配置完成之后分发<br><code>[xiamu@hadoop202 conf]$ xsync zoo.cfg</code></p><h2 id="集群启动"><a href="#集群启动" class="headerlink" title="集群启动"></a>集群启动</h2><p><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkServer.sh start</code><br><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkServer.sh status</code><br><img src="http://cdn.xiamu.icu//FhjjYf4MLhdBQPSrFx_A4E1Pc5nF.png"><br>需要对每一个集群开启 zookeeper<br><code>[xiamu@hadoop203 zookeeper-3.5.7]$ bin/zkServer.sh start</code><br><code>[xiamu@hadoop203 zookeeper-3.5.7]$ bin/zkServer.sh status</code><br>Mode: leader<br><code>[xiamu@hadoop204 zookeeper-3.5.7]$ bin/zkServer.sh start</code><br><code>[xiamu@hadoop204 zookeeper-3.5.7]$ bin/zkServer.sh status</code><br>Mode: follower</p><h2 id="第一次选举机制"><a href="#第一次选举机制" class="headerlink" title="第一次选举机制"></a>第一次选举机制</h2><p><img src="http://cdn.xiamu.icu//FoY5puhM54WCk6xKhY58Sex_CMnY.png"></p><h2 id="非第一次选举机制"><a href="#非第一次选举机制" class="headerlink" title="非第一次选举机制"></a>非第一次选举机制</h2><p><img src="http://cdn.xiamu.icu//Fi92EsmwSes32LY3H4wDj6HPNfNE.png"></p><h2 id="编写启动停止脚本"><a href="#编写启动停止脚本" class="headerlink" title="编写启动停止脚本"></a>编写启动停止脚本</h2><p>在&#x2F;home&#x2F;xiamu&#x2F;bin 目录下创建 zk.sh 脚本<code>[xiamu@hadoop202 bin]$ vim zk.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$1</span> <span class="hljs-keyword">in</span><br><span class="hljs-string">&quot;start&quot;</span>)&#123;<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> hadoop202 hadoop203 hadoop204<br>        <span class="hljs-keyword">do</span><br>                <span class="hljs-built_in">echo</span> ---------- ZooKeeper <span class="hljs-variable">$i</span> 启动 ----------<br>                ssh <span class="hljs-variable">$i</span> <span class="hljs-string">&quot;/opt/module/zookeeper-3.5.7/bin/zkServer.sh start&quot;</span><br>        <span class="hljs-keyword">done</span><br>&#125;<br>;;<br><span class="hljs-string">&quot;stop&quot;</span>)&#123;<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> hadoop202 hadoop203 hadoop204<br>        <span class="hljs-keyword">do</span><br>                <span class="hljs-built_in">echo</span> ---------- ZooKeeper <span class="hljs-variable">$i</span> 停止 ----------<br>                ssh <span class="hljs-variable">$i</span> <span class="hljs-string">&quot;/opt/module/zookeeper-3.5.7/bin/zkServer.sh stop&quot;</span><br>        <span class="hljs-keyword">done</span><br>&#125;<br>;;<br><span class="hljs-string">&quot;status&quot;</span>)&#123;<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> hadoop202 hadoop203 hadoop204<br>        <span class="hljs-keyword">do</span><br>                <span class="hljs-built_in">echo</span> ---------- ZooKeeper <span class="hljs-variable">$i</span> 状态 ----------<br>                ssh <span class="hljs-variable">$i</span> <span class="hljs-string">&quot;/opt/module/zookeeper-3.5.7/bin/zkServer.sh status&quot;</span><br>        <span class="hljs-keyword">done</span><br>&#125;<br>;;<br><span class="hljs-keyword">esac</span><br><br></code></pre></td></tr></table></figure><p>给予可执行权限<code>[xiamu@hadoop202 bin]$ chmod 777 zk.sh</code><br>分发脚本<code>[xiamu@hadoop202 bin]$ xsync zk.sh </code><br>使用脚本启动&#x2F;查看状态&#x2F;关闭 ZooKeeper<br><code>[xiamu@hadoop202 bin]$ zk.sh start</code><br><code>[xiamu@hadoop202 bin]$ zk.sh status</code><br><code>[xiamu@hadoop202 bin]$ zk.sh stop</code></p><h2 id="命令行-节点信息"><a href="#命令行-节点信息" class="headerlink" title="命令行-节点信息"></a>命令行-节点信息</h2><p>命令行语法</p><table><thead><tr><th>命令基本语法</th><th>功能描述</th></tr></thead><tbody><tr><td>help</td><td>显示所有操作命令</td></tr><tr><td>ls path</td><td>使用 ls 命令来查看当前 znode 的子节点[可监听]</td></tr></tbody></table><p>-w 监听子节点变化<br>-s 附加次级信息 |</p><p>| create | 普通创建<br>-s 含有序列</p><p>-e 临时（重启或者超时消失） |<br>| — | — |<br>| get path | 获得节点的值[可监听]<br>-w 监听节点内容变化<br>-s 附加次级信息 |<br>| set | 设置节点的具体值 |<br>| stat | 查看节点状态 |<br>| delete | 删除节点 |<br>| deleteall | 递归删除节点 |</p><p><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkCli.sh</code>客户端直接连接<br>[zk: localhost:2181(CONNECTED) 0]<br>此时 zk 后面的主机名是 localhost, 可以使用-server 参数修改<br><code>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkCli.sh -server hadoop202:2181</code><br><code>[zk: hadoop202:2181(CONNECTED) 0] ls /</code> 查看当前 znode 中所包含的内容<br><code>[zk: hadoop202:2181(CONNECTED) 1] help</code> 显示所有操作命令<br><code>[zk: hadoop202:2181(CONNECTED) 4] ls -s /</code> 查看当前节点详细数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zookeeper]cZxid = 0x0<br>ctime = Thu Jan 01 08:00:00 CST 1970<br>mZxid = 0x0<br>mtime = Thu Jan 01 08:00:00 CST 1970<br>pZxid = 0x0<br>cversion = -1<br>dataVersion = 0<br>aclVersion = 0<br>ephemeralOwner = 0x0<br>dataLength = 0<br>numChildren = 1<br></code></pre></td></tr></table></figure><p>（1）czxid：创建节点的事务 zxid<br>每次修改 ZooKeeper 状态都会产生一个 ZooKeeper 事务 ID。事务 ID 是 ZooKeeper 中所有修改总的次序。每次修改都有唯一的 zxid，如果 zxid1 小于 zxid2，那么 zxid1 在 zxid2 之前发生。<br>（2）ctime：znode 被创建的毫秒数（从 1970 年开始）<br>（3）mzxid：znode 最后更新的事务 zxid<br>（4）mtime：znode 最后修改的毫秒数（从 1970 年开始）<br>（5）pZxid：znode 最后更新的子节点 zxid<br>（6）cversion：znode 子节点变化号，znode 子节点修改次数<br>（7）dataversion：znode 数据变化号<br>（8）aclVersion：znode 访问控制列表的变化号<br>（9）ephemeralOwner：如果是临时节点，这个是 znode 拥有者的 session id。如果不是临时节点则是 0。<br>（10）dataLength：znode 的数据长度<br>（11）numChildren：znode 子节点数量</p><h2 id="命令行-节点类型-持久-x2F-短暂-x2F-有序号-x2F-无序号"><a href="#命令行-节点类型-持久-x2F-短暂-x2F-有序号-x2F-无序号" class="headerlink" title="命令行-节点类型(持久&#x2F;短暂&#x2F;有序号&#x2F;无序号)"></a>命令行-节点类型(持久&#x2F;短暂&#x2F;有序号&#x2F;无序号)</h2><h3 id="创建永久节点"><a href="#创建永久节点" class="headerlink" title="创建永久节点"></a>创建永久节点</h3><p>创建普通节点(默认创建的是不带序号的永久节点)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 0] <span class="hljs-built_in">ls</span> /<br>[zookeeper]<br>[zk: hadoop202:2181(CONNECTED) 1] create /sanguo <span class="hljs-string">&quot;diaochan&quot;</span><br>Created /sanguo<br>[zk: hadoop202:2181(CONNECTED) 2] <span class="hljs-built_in">ls</span> /<br>[sanguo, zookeeper]<br>[zk: hadoop202:2181(CONNECTED) 3]<br><br>[zk: hadoop202:2181(CONNECTED) 5] create /sanguo/shuguo <span class="hljs-string">&quot;liubei&quot;</span><br>Created /sanguo/shuguo<br>[zk: hadoop202:2181(CONNECTED) 7] <span class="hljs-built_in">ls</span> /sanguo<br>[shuguo]<br><br></code></pre></td></tr></table></figure><p>获取节点中的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 8] get -s /sanguo<br>diaochan<br>cZxid = 0x30000000a<br>ctime = Wed Feb 01 20:12:01 CST 2023<br>mZxid = 0x30000000a<br>mtime = Wed Feb 01 20:12:01 CST 2023<br>pZxid = 0x30000000b<br>cversion = 1<br>dataVersion = 0<br>aclVersion = 0<br>ephemeralOwner = 0x0<br>dataLength = 8<br>numChildren = 1<br><br>[zk: hadoop202:2181(CONNECTED) 9] get -s /sanguo/shuguo<br>liubei<br>cZxid = 0x30000000b<br>ctime = Wed Feb 01 20:14:02 CST 2023<br>mZxid = 0x30000000b<br>mtime = Wed Feb 01 20:14:02 CST 2023<br>pZxid = 0x30000000b<br>cversion = 0<br>dataVersion = 0<br>aclVersion = 0<br>ephemeralOwner = 0x0<br>dataLength = 6<br>numChildren = 0<br><br></code></pre></td></tr></table></figure><p>创建带序号的节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[zk: hadoop202:2181(CONNECTED) 12] create -s /sanguo/weiguo/zhangliao <span class="hljs-string">&quot;zhangliao&quot;</span><br>Created /sanguo/weiguo/zhangliao0000000000<br>[zk: hadoop202:2181(CONNECTED) 13] <span class="hljs-built_in">ls</span> /<br>[sanguo, zookeeper]<br>[zk: hadoop202:2181(CONNECTED) 14] <span class="hljs-built_in">ls</span> /sanguo/weiguo<br>[zhangliao0000000000]<br>[zk: hadoop202:2181(CONNECTED) 15]<br><br><br></code></pre></td></tr></table></figure><p>带序号的永久节点第二次创建会自动加上序号, 而不带序号的永久节点再次创建会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 15] create -s /sanguo/weiguo/zhangliao <span class="hljs-string">&quot;zhangliao&quot;</span><br>Created /sanguo/weiguo/zhangliao0000000001<br><br>[zk: hadoop202:2181(CONNECTED) 10] create /sanguo/weiguo <span class="hljs-string">&quot;caocao&quot;</span><br>Created /sanguo/weiguo<br>[zk: hadoop202:2181(CONNECTED) 16] create /sanguo/weiguo <span class="hljs-string">&quot;caocao&quot;</span><br>Node already exists: /sanguo/weiguo<br><br></code></pre></td></tr></table></figure><p>使用<code>quit</code>退出客户端, 再次连接, 发现之前创建的节点仍然存在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 17] quit<br>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkCli.sh -server hadoop202:2181<br><br>[zk: hadoop202:2181(CONNECTED) 0] <span class="hljs-built_in">ls</span> /sanguo<br>[shuguo, weiguo]<br>[zk: hadoop202:2181(CONNECTED) 1] <span class="hljs-built_in">ls</span> /sanguo/weiguo<br>[zhangliao0000000000, zhangliao0000000001]<br><br></code></pre></td></tr></table></figure><h3 id="创建临时节点"><a href="#创建临时节点" class="headerlink" title="创建临时节点"></a>创建临时节点</h3><p>创建临时节点只需要加上参数-e 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 2] create -e /sanguo/wuguo <span class="hljs-string">&quot;zhouyu&quot;</span><br>Created /sanguo/wuguo<br><br>查看吴国, 吴国创建成功<br>[zk: hadoop202:2181(CONNECTED) 3] <span class="hljs-built_in">ls</span> /sanguo<br>[shuguo, weiguo, wuguo]<br><br></code></pre></td></tr></table></figure><p>创建一个带序号的临时节点<br>只需要加上参数-s 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 4] create -e -s /sanguo/wuguo <span class="hljs-string">&quot;zhouyu&quot;</span><br>Created /sanguo/wuguo0000000003<br><br>查看刚刚创建的节点<br>[zk: hadoop202:2181(CONNECTED) 5] <span class="hljs-built_in">ls</span> /sanguo<br>[shuguo, weiguo, wuguo, wuguo0000000003]<br><br></code></pre></td></tr></table></figure><p>断开<code>quit</code>连接之后, 吴国(wuguo)就没有了, 因为吴国创建的时候有-e, -e 表示是临时节点, 临时节点断开连接之后就删除了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 6] quit<br>[xiamu@hadoop202 zookeeper-3.5.7]$ bin/zkCli.sh -server hadoop202:2181<br><br>[zk: hadoop202:2181(CONNECTED) 0] <span class="hljs-built_in">ls</span> /sanguo<br>[shuguo, weiguo]<br><br></code></pre></td></tr></table></figure><p>**总结: **<br>-s 表示带序号<br>-e 表示临时节点</p><h3 id="修改节点的值"><a href="#修改节点的值" class="headerlink" title="修改节点的值"></a>修改节点的值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop202:2181(CONNECTED) 2] get -s /sanguo/weiguo<br>caocao<br>cZxid = 0x30000000c<br>ctime = Wed Feb 01 20:15:52 CST 2023<br>mZxid = 0x30000000c<br>mtime = Wed Feb 01 20:15:52 CST 2023<br>pZxid = 0x30000000e<br>cversion = 2<br>dataVersion = 0<br>aclVersion = 0<br>ephemeralOwner = 0x0<br>dataLength = 6<br>numChildren = 2<br>[zk: hadoop202:2181(CONNECTED) 4] <span class="hljs-built_in">set</span> /sanguo/weiguo <span class="hljs-string">&quot;simayi&quot;</span><br>[zk: hadoop202:2181(CONNECTED) 5] get -s /sanguo/weiguo<br>simayi<br>cZxid = 0x30000000c<br>ctime = Wed Feb 01 20:15:52 CST 2023<br>mZxid = 0x300000016<br>mtime = Wed Feb 01 20:29:31 CST 2023<br>pZxid = 0x30000000e<br>cversion = 2<br>dataVersion = 1<br>aclVersion = 0<br>ephemeralOwner = 0x0<br>dataLength = 6<br>numChildren = 2<br><br><br>[zk: hadoop202:2181(CONNECTED) 8] get /sanguo/weiguo<br>simayi<br><br></code></pre></td></tr></table></figure><h2 id="监听器及节点删除"><a href="#监听器及节点删除" class="headerlink" title="监听器及节点删除"></a>监听器及节点删除</h2><h3 id="监听节点的值"><a href="#监听节点的值" class="headerlink" title="监听节点的值"></a>监听节点的值</h3><p>在 hadoop204 中, <code>get -s /sanguo</code>查看 sanguo 的值, 并且使用<code>get -w /sanguo</code>监控 sanguo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop204(CONNECTED) 0] get -s /sanguo<br>diaochan<br>cZxid = 0x30000000a<br>ctime = Wed Feb 01 20:12:01 CST 2023<br>mZxid = 0x30000000a<br>mtime = Wed Feb 01 20:12:01 CST 2023<br>pZxid = 0x300000014<br>cversion = 6<br>dataVersion = 0<br>aclVersion = 0<br>ephemeralOwner = 0x0<br>dataLength = 8<br>numChildren = 2<br>[zk: hadoop204(CONNECTED) 1] get -w /sanguo<br>diaochan<br><br><br></code></pre></td></tr></table></figure><p>在 hadoop203 中修改 sanguo 的值, 在 hadoop204 的选项卡会出现一个感叹号<br>只有 hadoop203 第一次修改的时候 hadoop204 会出现一个感叹号,<br>hadoop203 修改多次, hadoop204 只会出现一个感叹号, 因为 hadoop204 只监听一次<br>如果想再次监听, 需要再次在 hadoop204 注册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop203(CONNECTED) 3] <span class="hljs-built_in">set</span> /sanguo <span class="hljs-string">&quot;xisi&quot;</span><br>[zk: hadoop203(CONNECTED) 4] <span class="hljs-built_in">set</span> /sanguo <span class="hljs-string">&quot;yangfeiyan&quot;</span><br><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fmq-1qc0phaQob9poEpyU5X5Sd2X.png"></p><h3 id="监听节点的路径变化"><a href="#监听节点的路径变化" class="headerlink" title="监听节点的路径变化"></a>监听节点的路径变化</h3><p>在 hadoop204 中使用<code>ls -w /sanguo</code>监听 sanguo 的路径变化<br>在 hadoop203 中添加一个节点, hadoop204 中出现叹号, 同样也是注册一次生效一次, 创建多个节点也就只会出现一个叹号, 除非再次开启监听<br><img src="http://cdn.xiamu.icu//FqbwPnz9Ln1HD3-Q8OjdbDZuOp2D.png"></p><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p>删除节点和递归删除节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop204(CONNECTED) 7] <span class="hljs-built_in">ls</span> /<br>[sanguo, zookeeper]<br>[zk: hadoop204(CONNECTED) 8] <span class="hljs-built_in">ls</span> /sanguo<br>[jin, jin1, shuguo, weiguo]<br>[zk: hadoop204(CONNECTED) 9] delete /sanguo/jin<br>[zk: hadoop204(CONNECTED) 10] <span class="hljs-built_in">ls</span> /sanguo<br>[jin1, shuguo, weiguo]<br>[zk: hadoop204(CONNECTED) 12] delete /sanguo<br>Node not empty: /sanguo<br>[zk: hadoop204(CONNECTED) 13] deleteall /sanguo<br>[zk: hadoop204(CONNECTED) 14] <span class="hljs-built_in">ls</span> /sanguo<br>Node does not exist: /sanguo<br>[zk: hadoop204(CONNECTED) 15] <span class="hljs-built_in">ls</span> /<br>[zookeeper]<br><br></code></pre></td></tr></table></figure><h3 id="查看节点状态"><a href="#查看节点状态" class="headerlink" title="查看节点状态"></a>查看节点状态</h3><p>查看节点状态, 但是不查看值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zk: hadoop204(CONNECTED) 21] <span class="hljs-built_in">stat</span> /sanguo<br>cZxid = 0x30000002d<br>ctime = Wed Feb 01 21:07:20 CST 2023<br>mZxid = 0x30000002d<br>mtime = Wed Feb 01 21:07:20 CST 2023<br>pZxid = 0x30000002d<br>cversion = 0<br>dataVersion = 0<br>aclVersion = 0<br>ephemeralOwner = 0x0<br>dataLength = 9<br>numChildren = 0<br><br></code></pre></td></tr></table></figure><h2 id="客户端-创建节点"><a href="#客户端-创建节点" class="headerlink" title="客户端-创建节点"></a>客户端-创建节点</h2><p>创建 maven 项目<code>zookeeper</code><br>在 pom.xml 导入依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;dependencies&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;junit&lt;/groupId&gt;<br>        &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>        &lt;version&gt;RELEASE&lt;/version&gt;<br>    &lt;/dependency&gt;<br><br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;<br>        &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;<br>        &lt;version&gt;2.8.2&lt;/version&gt;<br>    &lt;/dependency&gt;<br><br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;<br>        &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;<br>        &lt;version&gt;3.5.7&lt;/version&gt;<br>    &lt;/dependency&gt;<br>&lt;/dependencies&gt;<br></code></pre></td></tr></table></figure><p>在 resource 添加 log4j.properties 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">log4j.rootLogger=INFO, stdout<br>log4j.appender.stdout=org.apache.log4j.ConsoleAppender<br>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout<br>log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n<br>log4j.appender.logfile=org.apache.log4j.FileAppender<br>log4j.appender.logfile.File=target/spring.log<br>log4j.appender.logfile.layout=org.apache.log4j.PatternLayout<br>log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n<br></code></pre></td></tr></table></figure><p>创建包名<code>com.atguigu.zk</code><br>创建类名称<code>zkClient</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class zkClient &#123;<br><br>    // 注意, 逗号左右不能有空格<br>    private String connectString = <span class="hljs-string">&quot;hadoop202:2181,hadoop203:2181,hadoop204:2181&quot;</span>;<br>    private int sessionTimeout = 2000;<br>    private ZooKeeper zooKeeper;<br><br>    // 连接zookeeper<br>    @Before<br>    public void init() throws IOException &#123;<br>        zooKeeper = new ZooKeeper(connectString, sessionTimeout, new <span class="hljs-function"><span class="hljs-title">Watcher</span></span>() &#123;<br>            @Override<br>            public void process(WatchedEvent watchedEvent) &#123;<br><br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    @Test<br>    public void create() throws InterruptedException, KeeperException &#123;<br>        // 创建一个节点<br>        String nodeCreated = zooKeeper.create(<span class="hljs-string">&quot;/atguigu&quot;</span>, <span class="hljs-string">&quot;ss.avi&quot;</span>.getBytes(),<br>                ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="客户端-监听节点的变化"><a href="#客户端-监听节点的变化" class="headerlink" title="客户端-监听节点的变化"></a>客户端-监听节点的变化</h2><p>getChildren 中第二个参数为 true 会调用 init 中 new Watch(){…}</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">  @Before<br>  public void init() throws IOException &#123;<br>      zooKeeper = new ZooKeeper(connectString, sessionTimeout, new <span class="hljs-function"><span class="hljs-title">Watcher</span></span>() &#123;<br>          @Override<br>          public void process(WatchedEvent watchedEvent) &#123;<br>              List&lt;String&gt; children = null;<br>              try &#123;<br>                  children = zooKeeper.getChildren(<span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-literal">true</span>);<br>              &#125; catch (KeeperException e) &#123;<br>                  e.printStackTrace();<br>              &#125; catch (InterruptedException e) &#123;<br>                  e.printStackTrace();<br>              &#125;<br>              System.out.println(<span class="hljs-string">&quot;------------------&quot;</span>);<br>              <span class="hljs-keyword">for</span> (String child : children) &#123;<br>                  System.out.println(child);<br>              &#125;<br>              System.out.println(<span class="hljs-string">&quot;------------------&quot;</span>);<br>          &#125;<br>      &#125;);<br>  &#125;<br><br><br>@Test<br>  public void getChildren() throws InterruptedException, KeeperException &#123;<br>      List&lt;String&gt; children = zooKeeper.getChildren(<span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-literal">true</span>);<br><br>      Thread.<span class="hljs-built_in">sleep</span>(Long.MAX_VALUE);<br>  &#125;<br></code></pre></td></tr></table></figure><p>监听的同时, 在 linux 中添加&#x2F;删除节点, idea 能监听得到<br><img src="http://cdn.xiamu.icu//FtXhjPVhA1Tys_otpR_uijfuukAo.png"><br><img src="http://cdn.xiamu.icu//FsZm6TzE8INSUkqTrmtmQVIA2lY5.png"></p><h2 id="客户端-判断节点是否存在"><a href="#客户端-判断节点是否存在" class="headerlink" title="客户端-判断节点是否存在"></a>客户端-判断节点是否存在</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 判断Znode是否存在<br>@Test<br>public void exist() throws InterruptedException, KeeperException &#123;<br>    Stat <span class="hljs-built_in">stat</span> = zooKeeper.exists(<span class="hljs-string">&quot;/atguigu&quot;</span>, <span class="hljs-literal">false</span>);<br>    System.out.println(<span class="hljs-built_in">stat</span> == null ? <span class="hljs-string">&quot;not exist&quot;</span> : <span class="hljs-string">&quot;exist&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="写数据原理"><a href="#写数据原理" class="headerlink" title="写数据原理"></a>写数据原理</h2><p>ack 表示应答<br>write 表示写操作<br><img src="http://cdn.xiamu.icu//FuK7zbV66YRHxh8BmN3wRG832Aul.png"><br><img src="http://cdn.xiamu.icu//FjOze3LIfkv2-WEGdNURdrdW2-0i.png"></p><h2 id="服务器动态上下线"><a href="#服务器动态上下线" class="headerlink" title="服务器动态上下线"></a>服务器动态上下线</h2><p><img src="http://cdn.xiamu.icu//FqILmd_t_GMvf-oidgQUnL-Sj_ON.png"></p><p>操作上线<br><img src="http://cdn.xiamu.icu//FqH9kCAQfDTwVBTeIS9C-vYZM14l.png"><br>操作下线<br><img src="http://cdn.xiamu.icu//FgsUd_bwbql-VQZMJ1J-CDfXp9Xy.png"></p><p>DistributeServer 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash">package com.atguigu.case1;<br><br>import org.apache.zookeeper.*;<br><br>import java.io.IOException;<br><br>public class DistributeServer &#123;<br>    private String connectString = <span class="hljs-string">&quot;hadoop202:2181,hadoop203:2181,hadoop204:2181&quot;</span>;<br>    private int sessionTimeout = 2000;<br>    private ZooKeeper zooKeeper;<br><br>    public static void main(String[] args) throws IOException, InterruptedException, KeeperException &#123;<br>        DistributeServer server = new DistributeServer();<br>        // 获取zk连接<br>        server.getConnect();<br><br>        // 注册服务器到zk集群<br>        server.register(args[0]);<br><br>        // 启动业务逻辑(睡觉)<br>        server.bussiness();<br>    &#125;<br><br>    private void bussiness() throws InterruptedException &#123;<br>        Thread.<span class="hljs-built_in">sleep</span>(Long.MAX_VALUE);<br>    &#125;<br><br>    private void register(String hostname) throws InterruptedException, KeeperException &#123;<br>        String create = zooKeeper.create(<span class="hljs-string">&quot;/servers/&quot;</span> + hostname, hostname.getBytes(),<br>                ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);<br><br>        System.out.println(hostname + <span class="hljs-string">&quot; is online&quot;</span>);<br>    &#125;<br><br>    private void getConnect() throws IOException &#123;<br>        zooKeeper = new ZooKeeper(connectString, sessionTimeout, new <span class="hljs-function"><span class="hljs-title">Watcher</span></span>() &#123;<br>            @Override<br>            public void process(WatchedEvent event) &#123;<br><br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>DistributeClient 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs bash">package com.atguigu.case1;<br><br>import org.apache.zookeeper.KeeperException;<br>import org.apache.zookeeper.WatchedEvent;<br>import org.apache.zookeeper.Watcher;<br>import org.apache.zookeeper.ZooKeeper;<br><br>import java.io.IOException;<br>import java.util.ArrayList;<br>import java.util.List;<br><br>public class DistributeClient &#123;<br>    private String connectString = <span class="hljs-string">&quot;hadoop202:2181,hadoop203:2181,hadoop204:2181&quot;</span>;<br>    private int sessionTimeout = 2000;<br>    private ZooKeeper zooKeeper;<br><br><br>    public static void main(String[] args) throws InterruptedException, IOException, KeeperException &#123;<br>        DistributeClient client = new DistributeClient();<br><br>        // 获取zk连接<br>        client.getConnect();<br><br>        // 监听/servers下面子节点的增加和删除<br>        client.getServerList();<br><br>        // 业务逻辑(睡觉)<br>        client.bussiness();<br>    &#125;<br><br>    private void bussiness() throws InterruptedException &#123;<br>        Thread.<span class="hljs-built_in">sleep</span>(Long.MAX_VALUE);<br>    &#125;<br><br>    private void getServerList() throws InterruptedException, KeeperException &#123;<br>        List&lt;String&gt; children = zooKeeper.getChildren(<span class="hljs-string">&quot;/servers&quot;</span>, <span class="hljs-literal">true</span>);<br>        ArrayList&lt;String&gt; servers = new ArrayList&lt;&gt;();<br>        <span class="hljs-keyword">for</span> (String child : children) &#123;<br>            byte[] data = zooKeeper.getData(<span class="hljs-string">&quot;/servers/&quot;</span> + child, <span class="hljs-literal">false</span>, null);<br>            servers.add(new String(data));<br>        &#125;<br><br>        System.out.println(servers);<br>    &#125;<br><br>    private void getConnect() throws IOException &#123;<br>        zooKeeper = new ZooKeeper(connectString, sessionTimeout, new <span class="hljs-function"><span class="hljs-title">Watcher</span></span>() &#123;<br>            @Override<br>            public void process(WatchedEvent event) &#123;<br>                try &#123;<br>                    getServerList();<br>                &#125; catch (Exception e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fq4oqdyS3utMXF2Ad_7n4xC9T3mZ.png"><br>tips:<br>运行 main 的时候需要传入参数, 在 idea 中传入参数的方式如下<br>在 Program arguments 中填写传入的参数<br><img src="http://cdn.xiamu.icu//Fus9z-vjmtEyREnMCAaVzRq2SHj-.png"></p><h2 id="分布式锁"><a href="#分布式锁" class="headerlink" title="分布式锁"></a>分布式锁</h2><p>什么叫做分布式锁呢？<br>比如说”进程 1”在使用该资源的时候，会先去获得锁，”进程 1”获得锁以后会对该资源保持独占，这样其他进程就无法访问该资源，”进程 1”用完该资源以后就将锁释放掉，让其他进程来获得锁，那么通过这个锁机制，我们就能保证了分布式系统中多个进程能够有序的访问该临界资源。那么我们把这个分布式环境下的这个锁叫作分布式锁。<br><img src="http://cdn.xiamu.icu//FmbrP7XR5ORbghM8M4vzOa_vY777.png"><br>DistributedLock 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs bash">package com.atguigu.case2;<br><br>import org.apache.zookeeper.*;<br>import org.apache.zookeeper.data.Stat;<br><br>import java.io.IOException;<br>import java.util.Collections;<br>import java.util.List;<br>import java.util.concurrent.CountDownLatch;<br><br>public class DistributedLock &#123;<br><br>    private final String connectString = <span class="hljs-string">&quot;hadoop202:2181,hadoop203:2181,hadoop204:2181&quot;</span>;<br>    private final int sessionTimeout = 2000;<br>    private final ZooKeeper zooKeeper;<br><br>    private CountDownLatch countDownLatch = new CountDownLatch(1);<br>    private CountDownLatch waitLatch = new CountDownLatch(1);<br>    private String currentMode;<br>    private String waitPath;<br><br>    public DistributedLock() throws IOException, InterruptedException, KeeperException &#123;<br>        // 获取连接<br>        zooKeeper = new ZooKeeper(connectString, sessionTimeout, new <span class="hljs-function"><span class="hljs-title">Watcher</span></span>() &#123;<br>            @Override<br>            public void process(WatchedEvent watchedEvent) &#123;<br>                // connectLatch 如果连接上zk 可以释放<br>                <span class="hljs-keyword">if</span> (watchedEvent.getState() == Event.KeeperState.SyncConnected) &#123;<br>                    countDownLatch.countDown();<br>                &#125;<br><br>                // waitLatch 需要释放<br>                <span class="hljs-keyword">if</span> (watchedEvent.getType() == Event.EventType.NodeDeleted<br>                        &amp;&amp; watchedEvent.getPath().equals(waitPath)) &#123;<br>                    waitLatch.countDown();<br>                &#125;<br>            &#125;<br>        &#125;);<br><br>        // 等待zk正常连接后, 往下走程序<br>        countDownLatch.await();<br><br>        // 判断根节点/locks是否存在<br>        Stat <span class="hljs-built_in">stat</span> = zooKeeper.exists(<span class="hljs-string">&quot;/locks&quot;</span>, <span class="hljs-literal">false</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">stat</span> == null) &#123;<br>            // 创建一下根节点<br>            zooKeeper.create(<span class="hljs-string">&quot;/locks&quot;</span>, <span class="hljs-string">&quot;locks&quot;</span>.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);<br>        &#125;<br>    &#125;<br><br>    // 对zk加锁<br>    public void <span class="hljs-function"><span class="hljs-title">zkLock</span></span>() &#123;<br>        // 创建对应的临时带序号节点<br>        try &#123;<br>            currentMode = zooKeeper.create(<span class="hljs-string">&quot;/locks/&quot;</span> + <span class="hljs-string">&quot;seq-&quot;</span>, null, ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);<br><br>            // 判断创建的节点是否是最小序号节点, 如果是获取到锁, 如果不是, 监听序号前一个节点<br>            List&lt;String&gt; children = zooKeeper.getChildren(<span class="hljs-string">&quot;/locks&quot;</span>, <span class="hljs-literal">false</span>);<br><br>            // 如果children 只有一个值, 那就直接获取锁, 如果有多个节点, 需要判断, 谁最小<br>            <span class="hljs-keyword">if</span> (children.size() == 1) &#123;<br>                <span class="hljs-built_in">return</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                Collections.<span class="hljs-built_in">sort</span>(children);<br><br>                // 获取节点名称 seq-00000000<br>                String thisNode = currentMode.substring(<span class="hljs-string">&quot;/locks/&quot;</span>.length());<br>                // 通过seq-00000000获取该节点在children结合的位置<br>                int index = children.indexOf(thisNode);<br><br>                // 判断<br>                <span class="hljs-keyword">if</span> (index == -1) &#123;<br>                    System.out.println(<span class="hljs-string">&quot;数据异常&quot;</span>);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (index == 0) &#123;<br>                    // 就一个节点, 可以获取锁了<br>                    <span class="hljs-built_in">return</span>;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    // 需要监听他前一个节点变化<br>                    waitPath = <span class="hljs-string">&quot;/locks/&quot;</span> + children.get(index - 1);<br>                    zooKeeper.getData(waitPath, <span class="hljs-literal">true</span>, null);<br><br>                    // 等待监听<br>                    waitLatch.await();<br><br>                    <span class="hljs-built_in">return</span>;<br>                &#125;<br>            &#125;<br><br>        &#125; catch (KeeperException e) &#123;<br>            e.printStackTrace();<br>        &#125; catch (InterruptedException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br><br>    // 解锁<br>    public void <span class="hljs-function"><span class="hljs-title">unZkLock</span></span>() &#123;<br>        // 删除节点<br>        try &#123;<br>            zooKeeper.delete(currentMode, -1);<br>        &#125; catch (InterruptedException e) &#123;<br>            e.printStackTrace();<br>        &#125; catch (KeeperException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>DistributedLockTest 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs bash">package com.atguigu.case2;<br><br>import org.apache.zookeeper.KeeperException;<br><br>import java.io.IOException;<br><br>public class DistributedLockTest &#123;<br>    public static void main(String[] args) throws IOException, InterruptedException, KeeperException &#123;<br>        final DistributedLock lock1 = new DistributedLock();<br>        final DistributedLock lock2 = new DistributedLock();<br><br>        new Thread(new <span class="hljs-function"><span class="hljs-title">Runnable</span></span>() &#123;<br>            @Override<br>            public void <span class="hljs-function"><span class="hljs-title">run</span></span>() &#123;<br>                try &#123;<br>                    lock1.zkLock();<br>                    System.out.println(<span class="hljs-string">&quot;线程1启动 获取到锁&quot;</span>);<br>                    Thread.<span class="hljs-built_in">sleep</span>(5 * 1000);<br><br>                    lock1.unZkLock();<br>                    System.out.println(<span class="hljs-string">&quot;线程1 释放锁&quot;</span>);<br>                &#125; catch (InterruptedException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;).start();<br><br>        new Thread(new <span class="hljs-function"><span class="hljs-title">Runnable</span></span>() &#123;<br>            @Override<br>            public void <span class="hljs-function"><span class="hljs-title">run</span></span>() &#123;<br>                try &#123;<br>                    lock2.zkLock();<br>                    System.out.println(<span class="hljs-string">&quot;线程2启动 获取到锁&quot;</span>);<br>                    Thread.<span class="hljs-built_in">sleep</span>(5 * 1000);<br><br>                    lock2.unZkLock();<br>                    System.out.println(<span class="hljs-string">&quot;线程2 释放锁&quot;</span>);<br>                &#125; catch (InterruptedException e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;).start();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>运行结果如下:<br>线程 2 先获取锁, 当锁释放掉之后, 才会给其他线程上锁<br><img src="http://cdn.xiamu.icu//FgVm80ZOqotskMbUSOO63uoZCNoL.png"></p><h2 id="Curator-框架实现分布式锁案例"><a href="#Curator-框架实现分布式锁案例" class="headerlink" title="Curator 框架实现分布式锁案例"></a>Curator 框架实现分布式锁案例</h2><p>pom.xml 导入依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;dependency&gt;<br>    &lt;groupId&gt;org.apache.curator&lt;/groupId&gt;<br>    &lt;artifactId&gt;curator-framework&lt;/artifactId&gt;<br>    &lt;version&gt;4.3.0&lt;/version&gt;<br>&lt;/dependency&gt;<br>&lt;dependency&gt;<br>    &lt;groupId&gt;org.apache.curator&lt;/groupId&gt;<br>    &lt;artifactId&gt;curator-recipes&lt;/artifactId&gt;<br>    &lt;version&gt;4.3.0&lt;/version&gt;<br>&lt;/dependency&gt;<br>&lt;dependency&gt;<br>    &lt;groupId&gt;org.apache.curator&lt;/groupId&gt;<br>    &lt;artifactId&gt;curator-client&lt;/artifactId&gt;<br>    &lt;version&gt;4.3.0&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><p>CuratorLockTest 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs bash">package com.atguigu.case3;<br><br>import org.apache.curator.framework.CuratorFramework;<br>import org.apache.curator.framework.CuratorFrameworkFactory;<br>import org.apache.curator.framework.recipes.locks.InterProcessMutex;<br>import org.apache.curator.retry.ExponentialBackoffRetry;<br><br>public class CuratorLockTest &#123;<br>    public static void main(String[] args) &#123;<br>        // 创建分布式锁1<br>        InterProcessMutex lock1 = new InterProcessMutex(getCuratorFramework(), <span class="hljs-string">&quot;/locks&quot;</span>);<br><br>        // 创建分布式锁2<br>        InterProcessMutex lock2 = new InterProcessMutex(getCuratorFramework(), <span class="hljs-string">&quot;/locks&quot;</span>);<br><br>        new Thread(new <span class="hljs-function"><span class="hljs-title">Runnable</span></span>() &#123;<br>            @Override<br>            public void <span class="hljs-function"><span class="hljs-title">run</span></span>() &#123;<br>                try &#123;<br>                    lock1.acquire();<br>                    System.out.println(<span class="hljs-string">&quot;线程1 获取到锁&quot;</span>);<br><br>                    lock1.acquire();<br>                    System.out.println(<span class="hljs-string">&quot;线程1 再次获取到锁&quot;</span>);<br><br>                    Thread.<span class="hljs-built_in">sleep</span>(5 * 1000);<br><br>                    lock1.release();<br>                    System.out.println(<span class="hljs-string">&quot;线程1 释放锁&quot;</span>);<br><br>                    lock1.release();<br>                    System.out.println(<span class="hljs-string">&quot;线程1 再次释放锁&quot;</span>);<br><br>                &#125; catch (Exception e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;).start();<br><br>        new Thread(new <span class="hljs-function"><span class="hljs-title">Runnable</span></span>() &#123;<br>            @Override<br>            public void <span class="hljs-function"><span class="hljs-title">run</span></span>() &#123;<br>                try &#123;<br>                    lock2.acquire();<br>                    System.out.println(<span class="hljs-string">&quot;线程2 获取到锁&quot;</span>);<br><br>                    lock2.acquire();<br>                    System.out.println(<span class="hljs-string">&quot;线程2 再次获取到锁&quot;</span>);<br><br>                    Thread.<span class="hljs-built_in">sleep</span>(5 * 1000);<br><br>                    lock2.release();<br>                    System.out.println(<span class="hljs-string">&quot;线程2 释放锁&quot;</span>);<br><br>                    lock2.release();<br>                    System.out.println(<span class="hljs-string">&quot;线程2 再次释放锁&quot;</span>);<br><br>                &#125; catch (Exception e) &#123;<br>                    e.printStackTrace();<br>                &#125;<br>            &#125;<br>        &#125;).start();<br>    &#125;<br><br>    private static CuratorFramework <span class="hljs-function"><span class="hljs-title">getCuratorFramework</span></span>() &#123;<br><br>        ExponentialBackoffRetry policy = new ExponentialBackoffRetry(3000, 3);<br><br>        CuratorFramework client = CuratorFrameworkFactory.builder()<br>                .connectString(<span class="hljs-string">&quot;hadoop202:2181,hadoop203:2181,hadoop204:2181&quot;</span>)<br>                .connectionTimeoutMs(2000)<br>                .sessionTimeoutMs(2000)<br>                .retryPolicy(policy)<br>                .build();<br><br>        // 启动客户端<br>        client.start();<br><br>        System.out.println(<span class="hljs-string">&quot;zookeeper 启动成功&quot;</span>);<br><br>        <span class="hljs-built_in">return</span> client;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>说明同一个线程中锁是可以多次获取的<br><img src="http://cdn.xiamu.icu//FlypVeE8541AHqPHg1zJJQbnGTWQ.png"></p><h2 id="企业面试真题（面试重点）"><a href="#企业面试真题（面试重点）" class="headerlink" title="企业面试真题（面试重点）"></a>企业面试真题（面试重点）</h2><h3 id="选举机制"><a href="#选举机制" class="headerlink" title="选举机制"></a>选举机制</h3><p>半数机制，超过半数的投票通过，即通过。<br>（1） 第一次启动选举规则：<br>投票过半数时，服务器 id 大的胜出<br>（2） 第二次启动选举规则：<br>①EPOCH 大的直接胜出<br>②EPOCH 相同，事务 id 大的胜出<br>③ 事务 id 相同，服务器 id 大的胜出</p><h3 id="生产集群安装多少-zk-合适？"><a href="#生产集群安装多少-zk-合适？" class="headerlink" title="生产集群安装多少 zk 合适？"></a>生产集群安装多少 zk 合适？</h3><p>安装奇数台。生产经验：<br>l 10 台服务器：3 台 zk；<br>l 20 台服务器：5 台 zk；<br>l 100 台服务器：11 台 zk；<br>l 200 台服务器：11 台 zk<br>服务器台数多：好处，提高可靠性；坏处：提高通信延时</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>ls、get、create、delete</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>ZooKeeper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Yarn</title>
    <link href="/Hadoop/Yarn/"/>
    <url>/Hadoop/Yarn/</url>
    
    <content type="html"><![CDATA[<p>指定向 hive 对象提交任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 hadoop-3.1.3]$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount -D mapreduce.job.queuename=hive /input /output5<br><br></code></pre></td></tr></table></figure><p>也可以在打包之前的驱动指定向其他队列提交作业</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class WcDrvier &#123;<br><br>    public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException &#123;<br><br>        Configuration conf = new Configuration();<br><br>        conf.set(<span class="hljs-string">&quot;mapreduce.job.queuename&quot;</span>,<span class="hljs-string">&quot;hive&quot;</span>);<br><br>        //1. 获取一个Job实例<br>        Job job = Job.getInstance(conf);<br><br>        。。。 。。。<br><br>        //6. 提交Job<br>        boolean b = job.waitForCompletion(<span class="hljs-literal">true</span>);<br>        System.<span class="hljs-built_in">exit</span>(b ? 0 : 1);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MapReduce</title>
    <link href="/Hadoop/MapReduce/"/>
    <url>/Hadoop/MapReduce/</url>
    
    <content type="html"><![CDATA[<h2 id="编写-WordCount"><a href="#编写-WordCount" class="headerlink" title="编写 WordCount"></a>编写 WordCount</h2><p>WordCountMapper 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">/**<br> * KEYIN, map阶段输入的key的类型: LongWritable<br> * VALUEIN, map阶段输入value类型: Text<br> * KEYOUT, map阶段输出的Key类型: Text<br> * VALUEOUT, map阶段输出的value类型: IntWritable<br> */<br>public class WordCountMapper extends Mapper&lt;LongWritable, Text, Text, IntWritable&gt; &#123;<br><br>    private Text outK = new Text();<br>    private IntWritable outV = new IntWritable(1);<br><br>    @Override<br>    protected void map(LongWritable key, Text value, Mapper&lt;LongWritable, Text, Text, IntWritable&gt;.Context context) throws IOException, InterruptedException &#123;<br>        // 1.获取一行<br>        String line = key.toString();<br><br>        // 2.切割<br>        String[] words = line.split(<span class="hljs-string">&quot; &quot;</span>);<br><br>        // 3.循环写出<br>        <span class="hljs-keyword">for</span> (String word : words) &#123;<br>            outK.<span class="hljs-built_in">set</span>(word);<br>            context.write(outK, outV);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>WordCountDriver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class WordCountDriver &#123;<br>    public static void main(String[] args) throws IOException, InterruptedException, ClassNotFoundException &#123;<br>        // 1.获取job<br>        Configuration conf = new Configuration();<br>        Job job = Job.getInstance(conf);<br><br>        // 2.设置jar包路径<br>        job.setJarByClass(WordCountDriver.class);<br><br>        // 3.关联mapper和reducer<br>        job.setMapperClass(WordCountMapper.class);<br>        job.setReducerClass(WordCountReducer.class);<br><br>        // 4.设置map输出的kv类型<br>        job.setMapOutputKeyClass(Text.class);<br>        job.setOutputValueClass(IntWritable.class);<br><br>        // 5.设置最终输出的kv类型<br>        job.setOutputKeyClass(Text.class);<br>        job.setOutputValueClass(IntWritable.class);<br><br>        // 6.设置输入路径和输出路径<br>        FileInputFormat.addInputPath(job, new Path(<span class="hljs-string">&quot;E:\\hadoop\\input&quot;</span>));<br>        FileOutputFormat.setOutputPath(job, new Path(<span class="hljs-string">&quot;E:\\hadoop\\output666&quot;</span>));<br><br>        // 7.提交job<br>        boolean result = job.waitForCompletion(<span class="hljs-literal">true</span>);<br><br>        System.<span class="hljs-built_in">exit</span>(result ? 0 : 1);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>WordCountMapper</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">/**<br> * KEYIN, reduce阶段输入的key的类型: LongWritable<br> * VALUEIN, reduce阶段输入value类型: Text<br> * KEYOUT, reduce阶段输出的Key类型: Text<br> * VALUEOUT, reduce阶段输出的value类型: IntWritable<br> */<br>public class WordCountReducer extends Reducer&lt;Text, IntWritable, Text, IntWritable&gt; &#123;<br><br>    private IntWritable outV = new IntWritable();<br><br>    @Override<br>    protected void reduce(Text key, Iterable&lt;IntWritable&gt; values, Reducer&lt;Text, IntWritable, Text, IntWritable&gt;.Context context) throws IOException, InterruptedException &#123;<br><br>        int <span class="hljs-built_in">sum</span> = 0;<br>        // 累加<br>        <span class="hljs-keyword">for</span> (IntWritable value : values) &#123;<br>            <span class="hljs-built_in">sum</span> += value.get();<br>        &#125;<br><br>        outV.<span class="hljs-built_in">set</span>(<span class="hljs-built_in">sum</span>);<br><br>        // 写出<br>        context.write(key, outV);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>将代码打包上传到 hadoop, 然后进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 hadoop-3.1.3]$ hadoop jar wc.jar com.atguigu.mapreduce.wordcount2.WordCountDriver /input /output<br><br></code></pre></td></tr></table></figure><h2 id="Partition-分区"><a href="#Partition-分区" class="headerlink" title="Partition 分区"></a>Partition 分区</h2><p>分区总结<br>(1) 如果 ReduceTask 的数量&gt;getPartition 的结果数, 则会多产生几个空的输出文件 part-r-000xx;<br>(2) 如果 1&lt;ReduceTask 的数量&lt;getPartition 的结果数, 则有一部分分区数据无处安放, 会 Exception<br>(3) 如果 ReduceTask 的数量&#x3D;1, 则不管 MapTask 端输出多少个分区文件, 最终结果都交给这一个 ReduceTask, 最终也就只会产生一个结果文件 part-r-00000;<br>(4) 分区号必须从零开始, 逐一累加</p><p>例如: 假设自定义分区数为 5, 则<br>(1) job.setNumReduceTasks(1); 会正常运行, 只不过会产生一个输出文件<br>(2) job.setNumReduceTasks(2); 会报错<br>(3) job.setNumReduceTasks(6);</p><h2 id="MapTask-工作机制"><a href="#MapTask-工作机制" class="headerlink" title="MapTask 工作机制"></a>MapTask 工作机制</h2><p>Read 阶段, Map 阶段, Collect 阶段, 溢写阶段, Merge 阶段<br><img src="http://cdn.xiamu.icu//Fmgj8p7YRsjOuSq9B-FBLhgimq1H.png"></p><h2 id="ReduceTask-工作机制"><a href="#ReduceTask-工作机制" class="headerlink" title="ReduceTask 工作机制"></a>ReduceTask 工作机制</h2><p>copy 阶段, sort 阶段, reduce 阶段<br><img src="http://cdn.xiamu.icu//Fu2MTtWXDbV1NN-8GBWdsiZY_Qkm.png"></p>]]></content>
    
    
    <categories>
      
      <category>Hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Snipaste</title>
    <link href="/uncategorized/Snipaste/"/>
    <url>/uncategorized/Snipaste/</url>
    
    <content type="html"><![CDATA[<p>下载解压, 然后双击 Snipaste.exe<br><img src="http://cdn.xiamu.icu//FipZXg0zxs2Nux79s5h8SuNeRnk5.png"></p><p>按<code>F1</code>开始截图<br>按<code>F3</code>(贴图)把截图粘贴到浮动窗口<br>也可以把剪切板中的图片或者文件粘贴到浮动窗口<br>缩放 (<code>鼠标滚动</code>或者<code>+</code>&#x2F;<code>-</code>)<br>旋转(<code>1</code>&#x2F;<code>2</code>)<br>翻转(<code>3</code>&#x2F;<code>4</code>)<br>设置透明度(<code>Ctrl</code> + <code>鼠标滚动</code> 或者 <code>Ctrl</code>+<code>+</code>&#x2F;<code>-</code> )<br>图片编辑(<code>Space</code>)<br>缩略图模式(<code>Shift</code>+<code>鼠标双击</code>)<br>隐藏(<code>鼠标双击</code>)</p><p>回放截图记录<br>按<code>,</code>或<code>.</code></p><p>放大镜<code>Alt</code><br>在放大镜模式下按<code>C</code>取色</p><p>调整画笔宽度<br><code>鼠标滚轮</code><br><code>1``2</code></p><p><code>-</code></p><p>高级技巧<br>按住 Shift 拖动贴图, 可以对齐</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>node-sass</title>
    <link href="/uncategorized/node-sass/"/>
    <url>/uncategorized/node-sass/</url>
    
    <content type="html"><![CDATA[<p>使用 npm i 安装报错,</p><ul><li>gyp err xxx</li><li>gyp verb check python checking for Python executable “python2” in the PATH</li></ul><p>参考地址: <a href="https://github.com/lenve/VBlog/issues/79">https://github.com/lenve/VBlog/issues/79</a><br><img src="http://cdn.xiamu.icu//Fm_lYcgPpu2YKBwBO5mt_z88xRcs.png"></p><p>只需要删除 package.json 中的<br>“node-sass”: “^4.14.1”,<br>“sass-loader”: “^6.0.6”,<br><img src="http://cdn.xiamu.icu//FjKiYsfbhwAkX2KD7oGZzcTu4zaY.png"></p><p>如果页面出现有 can not resolve sass-loader, 把对应的 scss 删除掉<br><img src="http://cdn.xiamu.icu//FuOR3d7bxRk5YBQUWFiXldSjQLb5.png"><br><img src="http://cdn.xiamu.icu//FkQLuqF7PC7McDveSOV5H84spebQ.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HDFS</title>
    <link href="/Hadoop/HDFS/"/>
    <url>/Hadoop/HDFS/</url>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>HDFS(Hadoop Distributed File System), 它是一个文件系统, 用于存储文件, 通过目录树来定位文件;<br>其次, 它是分布式, 由很多服务器联合起来实现其功能, 集群中的服务器有各自的角色.<br>HDFS 的使用场景, 适合一次写入, 多次读书的场景. 一个文件经过创建, 写入和关闭之后就不需要改变.<br>思考:<br>NameNode 在生产环境中一般是 128G 的内存, 能存多少文件? 一个文件块占用 150 个字节, 128G 的内存能存储 9 亿个文件块<br>计算过程:<br>128G &#x3D; 128 _ 1024M &#x3D; 128 _ 1024 _ 1024KB &#x3D; 128 _ 1024 _ 1024 _ 1024Byte &#x3D; 237 Byte&#x3D; 137438953472Byte<br>一个文件块大小是 150Byte<br>那么能够存储的文件数量是<img src="http://cdn.xiamu.icu//FlWOZrsKo2OsLAt3VWdGWtsrh8Q0.svg"> &#x3D; 916259689.813 ≈ 9 亿<br>tip: Byte 是字节, bit 是位<br><img src="http://cdn.xiamu.icu//FnLhxL-nLpsKfnLXUnTFJZs3Bg03.png"></p><h2 id="组成架构"><a href="#组成架构" class="headerlink" title="组成架构"></a>组成架构</h2><p><img src="http://cdn.xiamu.icu//FtLQb21-vvOhMJCiByp5KMPfEwug.png"><img src="http://cdn.xiamu.icu//FkY_HVQkK3jwniJiAoHfb0Fk7wP-.png"><br>在 hdfs 创建文件夹:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 bin]$ hadoop fs -<span class="hljs-built_in">mkdir</span> /aaa<br><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fo4vA7ntCA7kvfpxshHEulcIVCSx.png"></p><h2 id="文件块大小"><a href="#文件块大小" class="headerlink" title="文件块大小"></a>文件块大小</h2><p>HDFS 中的文件在物理上是分块存储(Block), 块的大小可以通过配置参数(dfs.blocksize)来规定, 默认大小在 Hadoop2.x&#x2F;3.x 版本中是 128M, 1.x 版本中是 64M</p><p>总结: HDFS 块的大小设置主要取决于磁盘传输速率</p><h2 id="HDFS-的-Shell-操作-开发重点"><a href="#HDFS-的-Shell-操作-开发重点" class="headerlink" title="HDFS 的 Shell 操作(开发重点)"></a>HDFS 的 Shell 操作(开发重点)</h2><p>hadoop fs 具体命令 OR hdfs dfs 具体命令<br>两个是完全相同的</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>启动 Hadoop 集群<br><code>[xiamu@hadoop202 bin]$ myhadoop.sh start</code><br>-help: 查看命令如何使用<br><code>[xiamu@hadoop202 bin]$ hadoop fs -help rm</code><br>创建文件夹<br><code>[xiamu@hadoop202 bin]$ hadoop fs -mkdir /sanguo</code></p><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><ol><li>moveFromLocal 的使用:</li></ol><p>新建文件, 上传文件(剪切文件)<br><code>[xiamu@hadoop202 hadoop-3.1.3]$ vim shuguo.txt</code><br><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -moveFromLocal ./shuguo.txt /sanguo</code></p><ol start="2"><li>copyFromLocal 的使用</li></ol><p>新建文件, 拷贝文件(本地的文件仍然存在)<br><code>[xiamu@hadoop202 hadoop-3.1.3]$ vim weiguo.txt</code><br><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -copyFromLocal weiguo.txt /sanguo</code></p><ol start="3"><li>put 约同于 copyFromLocal, 生产环境更习惯用 put</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ vim wuguo.txt</code><br><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -put wuguo.txt /sanguo</code></p><ol start="4"><li>appendToFile 追加一个文件到已经存在的文件末尾</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ vim liubei.txt</code><br><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -appendToFile liubei.txt /sanguo/shuguo.txt</code></p><p>HDFS 的特性, 只能追加内容, 不能修改原有的内容</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ol><li>copyToLocal, 从 HDFS 拷贝到本地</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -copyToLocal /sanguo/shuguo.txt ./</code></p><ol start="2"><li>等同于 copyToLocal，生产环境更习惯用 get</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -get /sanguo/shuguo.txt ./shuguo2.txt</code></p><h3 id="HDFS-直接操作"><a href="#HDFS-直接操作" class="headerlink" title="HDFS 直接操作"></a><strong>HDFS 直接操作</strong></h3><ol><li>-ls: 显示目录信息</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -ls /sanguo</code></p><ol start="2"><li>-cat: 显示文件内容</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -cat /sanguo/shuguo.txt</code></p><ol start="3"><li>-chgrp、-chmod、-chown：Linux 文件系统中的用法一样，修改文件所属权限</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -chown xiamu:xiamu /sanguo/shuguo.txt</code></p><ol start="4"><li>-mkdir：创建路径</li></ol><p><code>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -mkdir /jinguo</code></p><ol start="5"><li>-cp：从 HDFS 的一个路径拷贝到 HDFS 的另一个路径</li></ol><p><code>[xiamu@hadoop202 ~]$ hadoop fs -cp /sanguo/shuguo.txt /jinguo</code></p><ol start="6"><li>-mv：在 HDFS 目录中移动文件</li></ol><p><code>[xiamu@hadoop202 ~]$ hadoop fs -mv /sanguo/weiguo.txt /jinguo</code><br><code>[xiamu@hadoop202 ~]$ hadoop fs -mv /sanguo/wuguo.txt /jinguo</code></p><ol start="7"><li>-tail：显示一个文件的末尾 1kb 的数据</li></ol><p><code>[xiamu@hadoop202 ~]$ hadoop fs -tail /jinguo/shuguo.txt</code></p><ol start="8"><li>-rm：删除文件或文件夹</li></ol><p><code>[xiamu@hadoop202 ~]$ hadoop fs -rm /sanguo/shuguo.txt</code></p><ol start="9"><li>-rm -r：递归删除目录及目录里面内容</li></ol><p><code>[xiamu@hadoop202 ~]$ hadoop fs -rm -r /sanguo</code></p><ol start="10"><li>-du 统计文件夹的大小信息</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 ~]$ hadoop fs -<span class="hljs-built_in">du</span> -s -h /jinguo<br>27  81  /jinguo<br>[xiamu@hadoop202 ~]$ hadoop fs -<span class="hljs-built_in">du</span> -h /jinguo<br>14  42  /jinguo/shuguo.txt<br>7   21  /jinguo/weiguo.txt<br>6   18  /jinguo/wuguo.txt<br><br></code></pre></td></tr></table></figure><p>说明：27 表示文件大小；81 表示 27*3 个副本；&#x2F;jinguo 表示查看的目录</p><ol start="11"><li>-setrep：设置 HDFS 中文件的副本数量</li></ol><p><img src="http://cdn.xiamu.icu//FgdVVj393LyomxwYyA-hVQosFQav.png"><br>这里设置的副本数只是记录在 NameNode 的元数据中，是否真的会有这么多副本，还得看 DataNode 的数量。因为目前只有 3 台设备，最多也就 3 个副本，只有节点数的增加到 10 台时，副本数才能达到 10。</p><h2 id="Windows-配置环境变量"><a href="#Windows-配置环境变量" class="headerlink" title="Windows 配置环境变量"></a>Windows 配置环境变量</h2><p><img src="http://cdn.xiamu.icu//FkqeuFjPQmThE9fj0P9bATkT_Yfm.png"><br><img src="http://cdn.xiamu.icu//FmcdxzXcv1zf9rHHlA7orm4Gm17k.png"><br>配置完成之后双击 winutils.exe, 一闪而过说明配置环境变量成功<br><img src="http://cdn.xiamu.icu//FlCG6IctmbpIE3rKetkJF-P4Xk4c.png"></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><strong>在 IDEA 中创建一个 Maven 工程 HdfsClientDemo，并导入相应的依赖坐标+日志添加</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;dependencies&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;<br>        &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;<br>        &lt;version&gt;3.1.3&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;junit&lt;/groupId&gt;<br>        &lt;artifactId&gt;junit&lt;/artifactId&gt;<br>        &lt;version&gt;4.12&lt;/version&gt;<br>    &lt;/dependency&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.slf4j&lt;/groupId&gt;<br>        &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;<br>        &lt;version&gt;1.7.30&lt;/version&gt;<br>    &lt;/dependency&gt;<br>&lt;/dependencies&gt;<br></code></pre></td></tr></table></figure><p>在项目的 src&#x2F;main&#x2F;resources 目录下，新建一个文件，命名为“log4j.properties”，在文件中填入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">log4j.rootLogger=INFO, stdout<br>log4j.appender.stdout=org.apache.log4j.ConsoleAppender<br>log4j.appender.stdout.layout=org.apache.log4j.PatternLayout<br>log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n<br>log4j.appender.logfile=org.apache.log4j.FileAppender<br>log4j.appender.logfile.File=target/spring.log<br>log4j.appender.logfile.layout=org.apache.log4j.PatternLayout<br>log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n<br></code></pre></td></tr></table></figure><p><strong>创建包名：com.atguigu.hdfs</strong><br><strong>创建 HdfsClient 类</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class HdfsClient &#123;<br><br>    @Test<br>    public void testMkdirs() throws IOException, URISyntaxException, InterruptedException &#123;<br><br>        // 1 获取文件系统<br>        Configuration configuration = new Configuration();<br><br>        // FileSystem fs = FileSystem.get(new URI(<span class="hljs-string">&quot;hdfs://hadoop102:8020&quot;</span>), configuration);<br>        FileSystem fs = FileSystem.get(new URI(<span class="hljs-string">&quot;hdfs://hadoop102:8020&quot;</span>), configuration,<span class="hljs-string">&quot;atguigu&quot;</span>);<br><br>        // 2 创建目录<br>        fs.mkdirs(new Path(<span class="hljs-string">&quot;/xiyou/huaguoshan/&quot;</span>));<br><br>        // 3 关闭资源<br>        fs.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="HDFS-API-创建文件夹"><a href="#HDFS-API-创建文件夹" class="headerlink" title="HDFS_API 创建文件夹"></a>HDFS_API 创建文件夹</h2><p>为了方便, 每一个测试类中都会存在获取文件系统, 关闭资源这两个操作, 所以我们可以使用切面抽取出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">private FileSystem fs;<br><br>@Before<br>public void init() throws URISyntaxException, IOException, InterruptedException &#123;<br>    // 连接的集群nn地址<br>    URI uri = new URI(<span class="hljs-string">&quot;hdfs://hadoop202:8020&quot;</span>);<br><br>    // 创建一个配置文件<br>    Configuration configuration = new Configuration();<br><br>    // 用户<br>    String user = <span class="hljs-string">&quot;xiamu&quot;</span>;<br><br>    // 获取到客户端对象<br>    fs = FileSystem.get(uri, configuration, user);<br>&#125;<br><br>@After<br>public void close() throws IOException &#123;<br><br>    // 关闭资源<br>    fs.close();<br>&#125;<br><br></code></pre></td></tr></table></figure><p>创建目录代码, 相比于之前的代码, 瞬间精简了很多</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 创建目录<br>@Test<br>public void testMkdirs() throws IOException, URISyntaxException, InterruptedException &#123;<br><br>    // 执行相关的操作命令<br>    fs.mkdirs(new Path(<span class="hljs-string">&quot;/xiyou/huaguoshan1&quot;</span>));<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="HDFS-API-上传"><a href="#HDFS-API-上传" class="headerlink" title="HDFS_API 上传"></a>HDFS_API 上传</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 上传操作<br>@Test<br>public void testPut() throws IOException &#123;<br>    // 参数解读: 参数一delSrc: 表示删除原数据<br>    // 参数二overwrite: 是否允许覆盖<br>    // 参数三src: 原数据路径<br>    // 参数四dst: 目标数据路径<br>    fs.copyFromLocalFile(<br>            <span class="hljs-literal">true</span>,<br>            <span class="hljs-literal">true</span>,<br>            new Path(<span class="hljs-string">&quot;E:\\sunwukong.txt&quot;</span>),<br>            new Path(<span class="hljs-string">&quot;hdfs://hadoop202/xiyou/huaguoshan&quot;</span>)<br>    );<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="HDFS-API-参数的优先级"><a href="#HDFS-API-参数的优先级" class="headerlink" title="HDFS_API 参数的优先级"></a>HDFS_API 参数的优先级</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">/**<br> * 参数优先级<br> * hdfs-default.xml =&gt; hdfs-site.xml =&gt; 在项目资源目录下的配置文件 =&gt; 代码里面的配置<br> * @throws IOException<br> */<br>@Test<br>public void testPut() throws IOException &#123;<br>    // 参数解读: 参数一delSrc: 表示删除原数据<br>    // 参数二overwrite: 是否允许覆盖<br>    // 参数三src: 原数据路径<br>    // 参数四dst: 目标数据路径<br>    fs.copyFromLocalFile(<br>            <span class="hljs-literal">false</span>,<br>            <span class="hljs-literal">true</span>,<br>            new Path(<span class="hljs-string">&quot;E:\\sunwukong.txt&quot;</span>),<br>            new Path(<span class="hljs-string">&quot;hdfs://hadoop202/xiyou/huaguoshan&quot;</span>)<br>    );<br>&#125;<br></code></pre></td></tr></table></figure><p>在 resource 中创建 hdfs-site.xml, 然后上传文件, 发现副本数量是 1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;?xml-stylesheet <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/xsl&quot;</span> href=<span class="hljs-string">&quot;configuration.xsl&quot;</span>?&gt;<br><br>&lt;configuration&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;dfs.replication&lt;/name&gt;<br>        &lt;value&gt;1&lt;/value&gt;<br>    &lt;/property&gt;<br>&lt;/configuration&gt;<br></code></pre></td></tr></table></figure><p>修改 init 函数, configuration 中设置 dfs.replication 的值, 然后再次运行代码, 此时的副本数量是 2, 这就说明了这次运行的 dfs.replication 的值会覆盖掉 resource 中的 hdfs-site.xml 里的 dfs.replication 中的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">@Before<br>public void init() throws URISyntaxException, IOException, InterruptedException &#123;<br>    // 连接的集群nn地址<br>    URI uri = new URI(<span class="hljs-string">&quot;hdfs://hadoop202:8020&quot;</span>);<br><br>    // 创建一个配置文件<br>    Configuration configuration = new Configuration();<br><br>    configuration.set(<span class="hljs-string">&quot;dfs.replication&quot;</span>, <span class="hljs-string">&quot;2&quot;</span>);<br><br>    // 用户<br>    String user = <span class="hljs-string">&quot;xiamu&quot;</span>;<br><br>    // 获取到客户端对象<br>    fs = FileSystem.get(uri, configuration, user);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="HDFS-API-文件下载"><a href="#HDFS-API-文件下载" class="headerlink" title="HDFS_API 文件下载"></a>HDFS_API 文件下载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 文件下载<br>@Test<br>public void testGet() throws IOException &#123;<br>    // 参数解读:<br>    // 参数一delSrc: 下载完成之后, 是否删除掉hdfs中的原文件<br>    // 参数二src: HDFS中原文件的路径<br>    // 参数三dst: 客户端目标地址的路径<br>    // 参数四useRawLocalFileSystem: 是否开启本地文件的校验<br>    fs.copyToLocalFile(<br>            <span class="hljs-literal">true</span>,<br>            new Path(<span class="hljs-string">&quot;hdfs://hadoop202/xiyou/huaguoshan&quot;</span>),<br>            new Path(<span class="hljs-string">&quot;E:\\huaguosan&quot;</span>),<br>            <span class="hljs-literal">true</span><br>    );<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="HDFS-API-文件删除"><a href="#HDFS-API-文件删除" class="headerlink" title="HDFS_API 文件删除"></a>HDFS_API 文件删除</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 删除<br>@Test<br>public void testRm() throws IOException &#123;<br>    // 参数解读:<br>    // 参数一path: 表示要删除的路径<br>    // 参数二b: 表示是否递归删除<br><br>    // 删除文件<br>    // fs.delete(new Path(<span class="hljs-string">&quot;/jdk-8u212-linux-x64.tar.gz&quot;</span>), <span class="hljs-literal">false</span>);<br><br>    // 删除空目录<br>    // fs.delete(new Path(<span class="hljs-string">&quot;/xiyou&quot;</span>), <span class="hljs-literal">false</span>);<br><br>    // 删除非空目录<br>    fs.delete(new Path(<span class="hljs-string">&quot;/jinguo&quot;</span>), <span class="hljs-literal">true</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="HDFS-API-文件更名和移动"><a href="#HDFS-API-文件更名和移动" class="headerlink" title="HDFS_API 文件更名和移动"></a>HDFS_API 文件更名和移动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 文件的更名和移动<br>@Test<br>public void testmv() throws IOException &#123;<br>    // 参数解读:<br>    // 参数一: 原文件路径<br>    // 参数二: 目标文件路径<br>    // 对文件名称的修改:<br>    // fs.rename(new Path(<span class="hljs-string">&quot;/input/word.txt&quot;</span>), new Path(<span class="hljs-string">&quot;/input/ss.txt&quot;</span>));<br><br>    // 文件的移动和更名<br>    // fs.rename(new Path(<span class="hljs-string">&quot;/input/ss.txt&quot;</span>), new Path(<span class="hljs-string">&quot;/cls.txt&quot;</span>));<br><br>    // 目录的更名<br>    fs.rename(new Path(<span class="hljs-string">&quot;/input&quot;</span>), new Path(<span class="hljs-string">&quot;/output&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="HDFS-API-文件详细查看"><a href="#HDFS-API-文件详细查看" class="headerlink" title="HDFS_API 文件详细查看"></a>HDFS_API 文件详细查看</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 获取文件详细信息<br>@Test<br>public void fileDetail() throws IOException &#123;<br>    // 参数1 f: 表示哪一个路径<br>    // 参数2 recursive: 表示递归<br><br>    // 获取所有文件信息, 返回一个迭代器<br>    RemoteIterator&lt;LocatedFileStatus&gt; listFiles = fs.listFiles(new Path(<span class="hljs-string">&quot;/&quot;</span>), <span class="hljs-literal">true</span>);<br>    // 遍历迭代器<br>    <span class="hljs-keyword">while</span> (listFiles.hasNext()) &#123;<br>        LocatedFileStatus fileStatus = listFiles.next();<br>        System.out.println(<span class="hljs-string">&quot;=======&quot;</span> + fileStatus.getPath() + <span class="hljs-string">&quot;=======&quot;</span>);<br>        System.out.println(fileStatus.getPermission());<br>        System.out.println(fileStatus.getOwner());<br>        System.out.println(fileStatus.getGroup());<br>        System.out.println(fileStatus.getLen());<br>        System.out.println(fileStatus.getModificationTime());<br>        System.out.println(fileStatus.getReplication());<br>        System.out.println(fileStatus.getBlockSize());<br>        System.out.println(fileStatus.getPath().getName());<br><br>        // 获取块信息<br>        BlockLocation[] blockLocations = fileStatus.getBlockLocations();<br>        System.out.println(Arrays.toString(blockLocations));<br>        /*<span class="hljs-keyword">for</span> (BlockLocation blockLocation : blockLocations) &#123;<br>            System.out.println(blockLocation);<br>        &#125;*/<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查询结果如下<br><img src="http://cdn.xiamu.icu//Fns0ooKq6S0JhwtxSGVzo02-IOsa.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">=======hdfs://hadoop202:8020/hadoop-3.1.3.tar.gz=======<br>rw-r--r--<br>xiamu<br>supergroup<br>338075860<br>1673210373259<br>3<br>134217728<br>hadoop-3.1.3.tar.gz<br>[0,134217728,hadoop202,hadoop204,hadoop203, 134217728,134217728,hadoop202,hadoop204,hadoop203, 268435456,69640404,hadoop204,hadoop202,hadoop203]<br></code></pre></td></tr></table></figure><p>0,134217728 表示从 0 字节开始存放, 存放的大小是 134217728 字节<br>134217728,134217728 表示从 134217728 字节开始存放, 存放的大小是 134217728 字节<br>268435456,69640404 表示从 268435456 字节开始存放, 存放的大小是 69640404 字节</p><h2 id="HDFS-API-文件和文件夹判断"><a href="#HDFS-API-文件和文件夹判断" class="headerlink" title="HDFS_API 文件和文件夹判断"></a>HDFS_API 文件和文件夹判断</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">    // 判断是文件夹还是文件<br>    @Test<br>    public void testFile() throws IOException &#123;<br>        FileStatus[] listStatus = fs.listStatus(new Path(<span class="hljs-string">&quot;/&quot;</span>));<br>        <span class="hljs-keyword">for</span> (FileStatus status : listStatus) &#123;<br>            <span class="hljs-keyword">if</span> (status.isFile()) &#123;<br>                System.out.println(<span class="hljs-string">&quot;这是一个文件: &quot;</span> + status.getPath().getName());<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                System.out.println(<span class="hljs-string">&quot;这是一个目录: &quot;</span> + status.getPath().getName());<br>            &#125;<br>        &#125;<br>    &#125;<br><br><br>这是一个文件: cls.txt<br>这是一个文件: hadoop-3.1.3.tar.gz<br>这是一个目录: output<br>这是一个目录: tmp<br></code></pre></td></tr></table></figure><h2 id="网络拓扑-节点距离计算"><a href="#网络拓扑-节点距离计算" class="headerlink" title="网络拓扑-节点距离计算"></a>网络拓扑-节点距离计算</h2><pre><code class="hljs">在HDFS写数据的过程中，NameNode会选择距离待上传数据最近距离的DataNode接收数据。那么这个最近距离怎么计算呢？</code></pre><p>节点距离：两个节点到达最近的共同祖先的距离总和。<br><img src="http://cdn.xiamu.icu//FivDpKj4ztVlHs5uydiybSVIVNjI.png"><br>例如，假设有数据中心 d1 机架 r1 中的节点 n1。该节点可以表示为&#x2F;d1&#x2F;r1&#x2F;n1。利用这种标记，这里给出四种距离描述。<br>大家算一算每两个节点之间的距离。<br>⑤ 和 ⑨ 距离是 3<br>⑩ 和 ② 距离是 3<br>相差几根线, 距离就是几<br><img src="http://cdn.xiamu.icu//Fij3vmTrShU8PPeWOSPFSpMmB9fA.png"></p><h2 id="oiv-查看-Fsimage-文件"><a href="#oiv-查看-Fsimage-文件" class="headerlink" title="oiv 查看 Fsimage 文件"></a><strong>oiv 查看 Fsimage 文件</strong></h2><p><img src="http://cdn.xiamu.icu//Fmug3HqvsxWuECjd4_t8GfOkDf3R.png"><br>（1）查看 oiv 和 oev 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[atguigu@hadoop102 current]$ hdfs<br>oiv            apply the offline fsimage viewer to an fsimage<br>oev            apply the offline edits viewer to an edits file<br></code></pre></td></tr></table></figure><p>（2）基本语法<br><code>hdfs oiv -p 文件类型 -i镜像文件 -o 转换后文件输出路径</code><br>（3）案例实操</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[atguigu@hadoop102 current]$ <span class="hljs-built_in">pwd</span><br>/opt/module/hadoop-3.1.3/data/dfs/name/current<br><br>[atguigu@hadoop102 current]$ hdfs oiv -p XML -i fsimage_0000000000000000025 -o /opt/module/hadoop-3.1.3/fsimage.xml<br><br>[atguigu@hadoop102 current]$ <span class="hljs-built_in">cat</span> /opt/module/hadoop-3.1.3/fsimage.xml<br><br><span class="hljs-comment"># 上传完之后下载</span><br>[atguigu@hadoop102 hadoop-3.1.3]$ sz fsimage.xml<br><br></code></pre></td></tr></table></figure><p>将显示的 xml 文件内容拷贝到 Idea 中创建的 xml 文件中，并格式化。部分显示结果如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;inode&gt;<br>&lt;<span class="hljs-built_in">id</span>&gt;16386&lt;/id&gt;<br>&lt;<span class="hljs-built_in">type</span>&gt;DIRECTORY&lt;/type&gt;<br>&lt;name&gt;user&lt;/name&gt;<br>&lt;mtime&gt;1512722284477&lt;/mtime&gt;<br>&lt;permission&gt;atguigu:supergroup:rwxr-xr-x&lt;/permission&gt;<br>&lt;nsquota&gt;-1&lt;/nsquota&gt;<br>&lt;dsquota&gt;-1&lt;/dsquota&gt;<br>&lt;/inode&gt;<br>&lt;inode&gt;<br>&lt;<span class="hljs-built_in">id</span>&gt;16387&lt;/id&gt;<br>&lt;<span class="hljs-built_in">type</span>&gt;DIRECTORY&lt;/type&gt;<br>&lt;name&gt;atguigu&lt;/name&gt;<br>&lt;mtime&gt;1512790549080&lt;/mtime&gt;<br>&lt;permission&gt;atguigu:supergroup:rwxr-xr-x&lt;/permission&gt;<br>&lt;nsquota&gt;-1&lt;/nsquota&gt;<br>&lt;dsquota&gt;-1&lt;/dsquota&gt;<br>&lt;/inode&gt;<br>&lt;inode&gt;<br>&lt;<span class="hljs-built_in">id</span>&gt;16389&lt;/id&gt;<br>&lt;<span class="hljs-built_in">type</span>&gt;FILE&lt;/type&gt;<br>&lt;name&gt;wc.input&lt;/name&gt;<br>&lt;replication&gt;3&lt;/replication&gt;<br>&lt;mtime&gt;1512722322219&lt;/mtime&gt;<br>&lt;atime&gt;1512722321610&lt;/atime&gt;<br>&lt;perferredBlockSize&gt;134217728&lt;/perferredBlockSize&gt;<br>&lt;permission&gt;atguigu:supergroup:rw-r--r--&lt;/permission&gt;<br>&lt;blocks&gt;<br>&lt;block&gt;<br>&lt;<span class="hljs-built_in">id</span>&gt;1073741825&lt;/id&gt;<br>&lt;genstamp&gt;1001&lt;/genstamp&gt;<br>&lt;numBytes&gt;59&lt;/numBytes&gt;<br>&lt;/block&gt;<br>&lt;/blocks&gt;<br>&lt;/inode &gt;<br></code></pre></td></tr></table></figure><p>思考：可以看出，Fsimage 中没有记录块所对应 DataNode，为什么？<br>在集群启动后，要求 DataNode 上报数据块信息，并间隔一段时间后再次上报。</p><h2 id="oev-查看-Edits-文件"><a href="#oev-查看-Edits-文件" class="headerlink" title="oev 查看 Edits 文件"></a>oev 查看 Edits 文件</h2><p>（1）基本语法<br><code>hdfs oev -p 文件类型 -i编辑日志 -o 转换后文件输出路径</code><br>（2）案例实操</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[atguigu@hadoop102 current]$ hdfs oev -p XML -i edits_0000000000000000012-0000000000000000013 -o /opt/module/hadoop-3.1.3/edits.xml<br><br>[atguigu@hadoop102 current]$ <span class="hljs-built_in">cat</span> /opt/module/hadoop-3.1.3/edits.xml<br></code></pre></td></tr></table></figure><p>将显示的 xml 文件内容拷贝到 Idea 中创建的 xml 文件中，并格式化。显示结果如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;EDITS&gt;<br>&lt;EDITS_VERSION&gt;-63&lt;/EDITS_VERSION&gt;<br>&lt;RECORD&gt;<br>&lt;OPCODE&gt;OP_START_LOG_SEGMENT&lt;/OPCODE&gt;<br>&lt;DATA&gt;<br>&lt;TXID&gt;129&lt;/TXID&gt;<br>&lt;/DATA&gt;<br>&lt;/RECORD&gt;<br>&lt;RECORD&gt;<br>&lt;OPCODE&gt;OP_ADD&lt;/OPCODE&gt;<br>&lt;DATA&gt;<br>&lt;TXID&gt;130&lt;/TXID&gt;<br>&lt;LENGTH&gt;0&lt;/LENGTH&gt;<br>&lt;INODEID&gt;16407&lt;/INODEID&gt;<br>&lt;PATH&gt;/hello7.txt&lt;/PATH&gt;<br>&lt;REPLICATION&gt;2&lt;/REPLICATION&gt;<br>&lt;MTIME&gt;1512943607866&lt;/MTIME&gt;<br>&lt;ATIME&gt;1512943607866&lt;/ATIME&gt;<br>&lt;BLOCKSIZE&gt;134217728&lt;/BLOCKSIZE&gt;<br>&lt;CLIENT_NAME&gt;DFSClient_NONMAPREDUCE_-1544295051_1&lt;/CLIENT_NAME&gt;<br>&lt;CLIENT_MACHINE&gt;192.168.10.102&lt;/CLIENT_MACHINE&gt;<br>&lt;OVERWRITE&gt;<span class="hljs-literal">true</span>&lt;/OVERWRITE&gt;<br>&lt;PERMISSION_STATUS&gt;<br>&lt;USERNAME&gt;atguigu&lt;/USERNAME&gt;<br>&lt;GROUPNAME&gt;supergroup&lt;/GROUPNAME&gt;<br>&lt;MODE&gt;420&lt;/MODE&gt;<br>&lt;/PERMISSION_STATUS&gt;<br>&lt;RPC_CLIENTID&gt;908eafd4-9aec-4288-96f1-e8011d181561&lt;/RPC_CLIENTID&gt;<br>&lt;RPC_CALLID&gt;0&lt;/RPC_CALLID&gt;<br>&lt;/DATA&gt;<br>&lt;/RECORD&gt;<br>&lt;RECORD&gt;<br>&lt;OPCODE&gt;OP_ALLOCATE_BLOCK_ID&lt;/OPCODE&gt;<br>&lt;DATA&gt;<br>&lt;TXID&gt;131&lt;/TXID&gt;<br>&lt;BLOCK_ID&gt;1073741839&lt;/BLOCK_ID&gt;<br>&lt;/DATA&gt;<br>&lt;/RECORD&gt;<br>&lt;RECORD&gt;<br>&lt;OPCODE&gt;OP_SET_GENSTAMP_V2&lt;/OPCODE&gt;<br>&lt;DATA&gt;<br>&lt;TXID&gt;132&lt;/TXID&gt;<br>&lt;GENSTAMPV2&gt;1016&lt;/GENSTAMPV2&gt;<br>&lt;/DATA&gt;<br>&lt;/RECORD&gt;<br>&lt;RECORD&gt;<br>&lt;OPCODE&gt;OP_ADD_BLOCK&lt;/OPCODE&gt;<br>&lt;DATA&gt;<br>&lt;TXID&gt;133&lt;/TXID&gt;<br>&lt;PATH&gt;/hello7.txt&lt;/PATH&gt;<br>&lt;BLOCK&gt;<br>&lt;BLOCK_ID&gt;1073741839&lt;/BLOCK_ID&gt;<br>&lt;NUM_BYTES&gt;0&lt;/NUM_BYTES&gt;<br>&lt;GENSTAMP&gt;1016&lt;/GENSTAMP&gt;<br>&lt;/BLOCK&gt;<br>&lt;RPC_CLIENTID&gt;&lt;/RPC_CLIENTID&gt;<br>&lt;RPC_CALLID&gt;-2&lt;/RPC_CALLID&gt;<br>&lt;/DATA&gt;<br>&lt;/RECORD&gt;<br>&lt;RECORD&gt;<br>&lt;OPCODE&gt;OP_CLOSE&lt;/OPCODE&gt;<br>&lt;DATA&gt;<br>&lt;TXID&gt;134&lt;/TXID&gt;<br>&lt;LENGTH&gt;0&lt;/LENGTH&gt;<br>&lt;INODEID&gt;0&lt;/INODEID&gt;<br>&lt;PATH&gt;/hello7.txt&lt;/PATH&gt;<br>&lt;REPLICATION&gt;2&lt;/REPLICATION&gt;<br>&lt;MTIME&gt;1512943608761&lt;/MTIME&gt;<br>&lt;ATIME&gt;1512943607866&lt;/ATIME&gt;<br>&lt;BLOCKSIZE&gt;134217728&lt;/BLOCKSIZE&gt;<br>&lt;CLIENT_NAME&gt;&lt;/CLIENT_NAME&gt;<br>&lt;CLIENT_MACHINE&gt;&lt;/CLIENT_MACHINE&gt;<br>&lt;OVERWRITE&gt;<span class="hljs-literal">false</span>&lt;/OVERWRITE&gt;<br>&lt;BLOCK&gt;<br>&lt;BLOCK_ID&gt;1073741839&lt;/BLOCK_ID&gt;<br>&lt;NUM_BYTES&gt;25&lt;/NUM_BYTES&gt;<br>&lt;GENSTAMP&gt;1016&lt;/GENSTAMP&gt;<br>&lt;/BLOCK&gt;<br>&lt;PERMISSION_STATUS&gt;<br>&lt;USERNAME&gt;atguigu&lt;/USERNAME&gt;<br>&lt;GROUPNAME&gt;supergroup&lt;/GROUPNAME&gt;<br>&lt;MODE&gt;420&lt;/MODE&gt;<br>&lt;/PERMISSION_STATUS&gt;<br>&lt;/DATA&gt;<br>&lt;/RECORD&gt;<br>&lt;/EDITS &gt;<br></code></pre></td></tr></table></figure><p>思考：NameNode 如何确定下次开机启动的时候合并哪些 Edits？<br>NameNode 启动的时候合并的是上次停机前正在写入的 Edits，即 edits_inprogress_xxx<br>根据 seen_txid 里面记录最新的 Fsimage(镜像文件)的值去合并 Edits(编辑日志)。</p><h2 id="CheckPoint-时间设置"><a href="#CheckPoint-时间设置" class="headerlink" title="CheckPoint 时间设置"></a><strong>CheckPoint 时间设置</strong></h2><p><strong>通常情况下，SecondaryNameNode 每隔一小时执行一次。</strong><br>[hdfs-default.xml]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;property&gt;<br>&lt;name&gt;dfs.namenode.checkpoint.period&lt;/name&gt;<br>&lt;value&gt;3600s&lt;/value&gt;<br>&lt;/property&gt;<br></code></pre></td></tr></table></figure><p><strong>2）一分钟检查一次操作次数，当操作次数达到 1 百万时，SecondaryNameNode 执行一次。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;property&gt;<br>&lt;name&gt;dfs.namenode.checkpoint.txns&lt;/name&gt;<br>&lt;value&gt;1000000&lt;/value&gt;<br>&lt;description&gt;操作动作次数&lt;/description&gt;<br>&lt;/property&gt;<br><br>&lt;property&gt;<br>&lt;name&gt;dfs.namenode.checkpoint.check.period&lt;/name&gt;<br>&lt;value&gt;60s&lt;/value&gt;<br>&lt;description&gt; 1分钟检查一次操作次数&lt;/description&gt;<br>&lt;/property&gt;<br></code></pre></td></tr></table></figure><h2 id="DataNode"><a href="#DataNode" class="headerlink" title="DataNode"></a>DataNode</h2><p><img src="http://cdn.xiamu.icu//Fue-R2YVB_F87Xf3L7x52-hSxgK4.png"><br>（1）一个数据块在 DataNode 上以文件形式存储在磁盘上，包括两个文件，一个是数据本身，一个是元数据包括数据块的长度，块数据的校验和，以及时间戳。<br>（2）DataNode 启动后向 NameNode 注册，通过后，周期性（6 小时）的向 NameNode 上报所有的块信息。<br>DN 向 NN 汇报当前解读信息的时间间隔，默认 6 小时；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;property&gt;<br>&lt;name&gt;dfs.blockreport.intervalMsec&lt;/name&gt;<br>&lt;value&gt;21600000&lt;/value&gt;<br>&lt;description&gt;Determines block reporting interval <span class="hljs-keyword">in</span> milliseconds.&lt;/description&gt;<br>&lt;/property&gt;<br></code></pre></td></tr></table></figure><p>DN 扫描自己节点块信息列表的时间，默认 6 小时</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;property&gt;<br>&lt;name&gt;dfs.datanode.directoryscan.interval&lt;/name&gt;<br>&lt;value&gt;21600s&lt;/value&gt;<br>&lt;description&gt;Interval <span class="hljs-keyword">in</span> seconds <span class="hljs-keyword">for</span> Datanode to scan data directories and reconcile the difference between blocks <span class="hljs-keyword">in</span> memory and on the disk.<br>Support multiple time unit suffix(<span class="hljs-keyword">case</span> insensitive), as described<br><span class="hljs-keyword">in</span> dfs.heartbeat.interval.<br>&lt;/description&gt;<br>&lt;/property&gt;<br></code></pre></td></tr></table></figure><p>（3）心跳是每 3 秒一次，心跳返回结果带有 NameNode 给该 DataNode 的命令如复制块数据到另一台机器，或删除某个数据块。如果超过 10 分钟没有收到某个 DataNode 的心跳，则认为该节点不可用。<br>（4）集群运行中可以安全加入和退出一些机器。</p>]]></content>
    
    
    <categories>
      
      <category>Hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>入门</title>
    <link href="/Hadoop/%E5%85%A5%E9%97%A8/"/>
    <url>/Hadoop/%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><img src="http://cdn.xiamu.icu//FtfIbSnsIBeP8p-4iI5D1Ig-H_YA.png"><br><img src="http://cdn.xiamu.icu//FnLhxL-nLpsKfnLXUnTFJZs3Bg03.png"><br>大数据主要解决, 海量数据的采集, 存储和分析计算问题</p><h2 id="linux-的配置"><a href="#linux-的配置" class="headerlink" title="linux 的配置"></a>linux 的配置</h2><p>设置终端的字体大小<br>setfont sun12x22</p><p>一些基本的配置<br>最小安装需要安装一些工具包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install net-tools wget zip unzip vim-enhanced net-tools -y<br></code></pre></td></tr></table></figure><p>安装用于上传, 下载文件的工具包<br>rz 上传, zs 下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install lrzsz -y<br></code></pre></td></tr></table></figure><p>配置静态 ip<br>[root@hadoop200 ~]# vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">TYPE=<span class="hljs-string">&quot;Ethernet&quot;</span><br>PROXY_METHOD=<span class="hljs-string">&quot;none&quot;</span><br>BROWSER_ONLY=<span class="hljs-string">&quot;no&quot;</span><br>BOOTPROTO=<span class="hljs-string">&quot;static&quot;</span><br>DEFROUTE=<span class="hljs-string">&quot;yes&quot;</span><br>IPV4_FAILURE_FATAL=<span class="hljs-string">&quot;no&quot;</span><br>IPV6INIT=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_AUTOCONF=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_DEFROUTE=<span class="hljs-string">&quot;yes&quot;</span><br>IPV6_FAILURE_FATAL=<span class="hljs-string">&quot;no&quot;</span><br>IPV6_ADDR_GEN_MODE=<span class="hljs-string">&quot;stable-privacy&quot;</span><br>NAME=<span class="hljs-string">&quot;ens33&quot;</span><br>UUID=<span class="hljs-string">&quot;a3b13aa9-1510-453c-8dc7-fab53450f73b&quot;</span><br>DEVICE=<span class="hljs-string">&quot;ens33&quot;</span><br>ONBOOT=<span class="hljs-string">&quot;yes&quot;</span><br><br>IPADDR=192.168.1.200<br>GATEWAY=192.168.1.2<br>DNS1=192.168.1.2<br><br></code></pre></td></tr></table></figure><p>[root@hadoop200 ~]# vi &#x2F;etc&#x2F;hostname</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hadoop200<br><br></code></pre></td></tr></table></figure><p>[root@hadoop200 ~]# vi &#x2F;etc&#x2F;host</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>192.168.1.200 hadoop200<br>192.168.1.201 hadoop201<br>192.168.1.202 hadoop202<br>192.168.1.203 hadoop203<br>192.168.1.204 hadoop204<br>192.168.1.205 hadoop205<br>192.168.1.206 hadoop206<br>192.168.1.207 hadoop207<br>192.168.1.208 hadoop208<br><br></code></pre></td></tr></table></figure><p>windows 中设置 host<br>C:\Windows\System32\drivers\etc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">192.168.1.200 hadoop200<br>192.168.1.201 hadoop201<br>192.168.1.202 hadoop202<br>192.168.1.203 hadoop203<br>192.168.1.204 hadoop204<br>192.168.1.205 hadoop205<br>192.168.1.206 hadoop206<br>192.168.1.207 hadoop207<br>192.168.1.208 hadoop208<br></code></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@hadoop200 ~]<span class="hljs-comment"># systemctl stop firewalld</span><br>[root@hadoop200 ~]<span class="hljs-comment"># systemctl disable firewalld.service</span><br><br></code></pre></td></tr></table></figure><p>配置 atguigu 用户具有 root 权限，方便后期加 sudo 执行 root 权限的命令<br>[root@hadoop200 ~]# vim &#x2F;etc&#x2F;sudoers<br>修改&#x2F;etc&#x2F;sudoers 文件，在%wheel 这行下面添加一行，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">root    ALL=(ALL)       ALL<br><span class="hljs-comment">## Allows members of the &#x27;sys&#x27; group to run networking, software,</span><br><span class="hljs-comment">## Allows people in group wheel to run all commands</span><br>%wheel  ALL=(ALL)       ALL<br>xiamu   ALL=(ALL)     NOPASSWD:ALL<br><br></code></pre></td></tr></table></figure><p>注意：atguigu 这一行不要直接放到 root 行下面，因为所有用户都属于 wheel 组，你先配置了 atguigu 具有免密功能，但是程序执行到%wheel 行时，该功能又被覆盖回需要密码。所以 atguigu 要放到%wheel 这行下面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop200 opt]$ <span class="hljs-built_in">mkdir</span> module/<br>[xiamu@hadoop200 opt]$ <span class="hljs-built_in">mkdir</span> software/<br>[xiamu@hadoop200 opt]$ sudo <span class="hljs-built_in">chown</span> xiamu:xiamu module/ software/<br>[xiamu@hadoop200 opt]$ ll<br>总用量 0<br>drwxr-xr-x. 2 xiamu xiamu 6 12月 30 17:03 module<br>drwxr-xr-x. 2 xiamu xiamu 6 12月 30 17:04 software<br><br></code></pre></td></tr></table></figure><p>删除 java<br>如果有 java 请先删除<br>注意：如果你的虚拟机是最小化安装不需要执行这一步。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@hadoop100 ~]<span class="hljs-comment"># rpm -qa | grep -i java</span><br>[root@hadoop100 ~]<span class="hljs-comment"># rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps</span><br></code></pre></td></tr></table></figure><p>重启之后的检查 hostname, ip, 以及能否 ping 通外网</p><h2 id="安装-jdk"><a href="#安装-jdk" class="headerlink" title="安装 jdk"></a>安装 jdk</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 software]$ tar -zxvf jdk-8u212-linux-x64.tar.gz -C /opt/module/<br>[xiamu@hadoop202 software]$ <span class="hljs-built_in">cd</span> /opt/module/jdk1.8.0_212/<br><br><span class="hljs-comment"># 查看一个脚本, 这个脚本不需要改动, 这个脚本会循环遍历profile.d下的所有.sh文件</span><br>[xiamu@hadoop202 jdk1.8.0_212]$ vim /etc/profile<br>[xiamu@hadoop202 jdk1.8.0_212]$ <span class="hljs-built_in">cd</span> /etc/profile.d/<br><br>[xiamu@hadoop202 profile.d]$ sudo vim my_env.sh<br><span class="hljs-comment">#JAVA_HOME</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/opt/module/jdk1.8.0_212<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br><br><span class="hljs-comment"># 重新遍历一把profile中的文件</span><br>[xiamu@hadoop202 profile.d]$ <span class="hljs-built_in">source</span> /etc/profile<br><br>[xiamu@hadoop202 hadoop-3.1.3]$ java -version<br>java version <span class="hljs-string">&quot;1.8.0_212&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="安装-Hadoop"><a href="#安装-Hadoop" class="headerlink" title="安装 Hadoop"></a>安装 Hadoop</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 software]$ tar -zxvf hadoop-3.1.3.tar.gz -C /opt/module/<br><br>[xiamu@hadoop202 hadoop-3.1.3]$ sudo vim /etc/profile.d/my_env.sh<br><span class="hljs-comment">#HADOOP_HOME</span><br><span class="hljs-built_in">export</span> HADOOP_HOME=/opt/module/hadoop-3.1.3<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HADOOP_HOME</span>/bin<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$HADOOP_HOME</span>/sbin<br><br>[xiamu@hadoop202 hadoop-3.1.3]$ <span class="hljs-built_in">source</span> /etc/profile<br><br></code></pre></td></tr></table></figure><p>hadoop 目录<br><img src="http://cdn.xiamu.icu//FlGpj-FH70qApneeEZIV8VgFtjS6.png"><br>bin: 常用的命令 hdfs, yarn, mapred<br>常用的文件夹 bin, etc, sbin</p><h2 id="本地运行模式"><a href="#本地运行模式" class="headerlink" title="本地运行模式"></a>本地运行模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[xiamu@hadoop202 hadoop-3.1.3]$ <span class="hljs-built_in">mkdir</span> wcinput<br>[xiamu@hadoop202 hadoop-3.1.3]$ <span class="hljs-built_in">cd</span> wcinput<br>[xiamu@hadoop202 wcinput]$ vim word.txt<br>ss ss<br>cls cls<br>banzhang<br>bobo<br>yangge<br><br><br><span class="hljs-comment"># 统计单词数量</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount wcinput/ ./wcoutput<br>[xiamu@hadoop202 hadoop-3.1.3]$ <span class="hljs-built_in">cd</span> wcoutput/<br>[xiamu@hadoop202 wcoutput]$ ll<br>总用量 4<br>-rw-r--r--. 1 xiamu xiamu 38 12月 31 01:07 part-r-00000<br>-rw-r--r--. 1 xiamu xiamu  0 12月 31 01:07 _SUCCESS<br>[xiamu@hadoop202 wcoutput]$ <span class="hljs-built_in">cat</span> part-r-00000<br>banzhang1<br>bobo1<br>cls2<br>ss2<br>yangge1<br><br><span class="hljs-comment"># 再次运行就会报错, 原因是因为输出的目录已经存在了</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount wcinput/ ./wcoutput<br>org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory file:/opt/module/hadoop-3.1.3/wcoutput already exists<br><br></code></pre></td></tr></table></figure><h2 id="scp-拷贝命令"><a href="#scp-拷贝命令" class="headerlink" title="scp 拷贝命令"></a>scp 拷贝命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 把hadoop202中的jdk1.8.0_212目录下的文件拷贝到hadoop203中去了</span><br>[xiamu@hadoop202 module]$ scp -r jdk1.8.0_212/ xiamu@hadoop203:/opt/module/<br><br><span class="hljs-comment"># 把hadoop202中的hadoop-3.1.3目录下的文件拷贝到hadoop203中来了</span><br>[xiamu@hadoop203 module]$ scp -r xiamu@hadoop202:/opt/module/hadoop-3.1.3 ./<br><br><span class="hljs-comment"># 甚至可以把hadoop202中的目录拷贝到hadoop204中去</span><br>[xiamu@hadoop203 module]$ scp -r xiamu@hadoop202:/opt/module/* xiamu@hadoop204:/opt/module/<br><br></code></pre></td></tr></table></figure><h2 id="rsync-命令"><a href="#rsync-命令" class="headerlink" title="rsync 命令"></a>rsync 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 同步命令, 修改某一个文件, 执行该命令就会把修改的文件该同步过去</span><br><span class="hljs-comment"># 前提是服务器上需要安装rsync</span><br>[xiamu@hadoop202 module]$ sudo yum install rsync<br>[xiamu@hadoop202 module]$ rsync -av hadoop-3.1.3/ xiamu@hadoop203:/opt/module/hadoop-3.1.3/<br><br><br></code></pre></td></tr></table></figure><h2 id="xsync-集群分发脚本"><a href="#xsync-集群分发脚本" class="headerlink" title="xsync 集群分发脚本"></a>xsync 集群分发脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 ~]$ <span class="hljs-built_in">cd</span> /home/xiamu/<br>[xiamu@hadoop202 ~]$ <span class="hljs-built_in">mkdir</span> bin<br>[xiamu@hadoop202 ~]$ <span class="hljs-built_in">cd</span> bin/<br>[xiamu@hadoop202 bin]$ vim xsync<br><br><br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-comment">#1. 判断参数个数</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$#</span> -lt 1 ]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> Not Enough Arguement!<br>    <span class="hljs-built_in">exit</span>;<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#2. 遍历集群所有机器</span><br><span class="hljs-keyword">for</span> host <span class="hljs-keyword">in</span> hadoop202 hadoop203 hadoop204<br><span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> ====================  <span class="hljs-variable">$host</span>  ====================<br>    <span class="hljs-comment">#3. 遍历所有目录，挨个发送</span><br><br>    <span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> <span class="hljs-variable">$@</span><br>    <span class="hljs-keyword">do</span><br>        <span class="hljs-comment">#4. 判断文件是否存在</span><br>        <span class="hljs-keyword">if</span> [ -e <span class="hljs-variable">$file</span> ]<br>            <span class="hljs-keyword">then</span><br>                <span class="hljs-comment">#5. 获取父目录</span><br>                pdir=$(<span class="hljs-built_in">cd</span> -P $(<span class="hljs-built_in">dirname</span> <span class="hljs-variable">$file</span>); <span class="hljs-built_in">pwd</span>)<br><br>                <span class="hljs-comment">#6. 获取当前文件的名称</span><br>                fname=$(<span class="hljs-built_in">basename</span> <span class="hljs-variable">$file</span>)<br>                ssh <span class="hljs-variable">$host</span> <span class="hljs-string">&quot;mkdir -p <span class="hljs-variable">$pdir</span>&quot;</span><br>                rsync -av <span class="hljs-variable">$pdir</span>/<span class="hljs-variable">$fname</span> <span class="hljs-variable">$host</span>:<span class="hljs-variable">$pdir</span><br>            <span class="hljs-keyword">else</span><br>                <span class="hljs-built_in">echo</span> <span class="hljs-variable">$file</span> does not exists!<br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br><br><br><br>修改脚本 xsync 具有执行权限<br>[xiamu@hadoop202 bin]$ <span class="hljs-built_in">chmod</span> 777 xsync<br>[xiamu@hadoop202 bin]$ xsync /home/xiamu/bin<br>[xiamu@hadoop202 bin]$ sudo <span class="hljs-built_in">cp</span> xsync /bin/<br>[xiamu@hadoop202 bin]$ sudo ./bin/xsync /etc/profile.d/my_env.sh<br>注意：如果用了sudo，那么xsync一定要给它的路径补全。<br>让环境变量生效<br>[xiamu@hadoop203 ~]$ <span class="hljs-built_in">source</span> /etc/profile<br>[xiamu@hadoop204 ~]$ <span class="hljs-built_in">source</span> /etc/profile<br><br></code></pre></td></tr></table></figure><h2 id="设置-ssh-免密登录"><a href="#设置-ssh-免密登录" class="headerlink" title="设置 ssh 免密登录"></a>设置 ssh 免密登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 .ssh]$ <span class="hljs-built_in">pwd</span><br>/home/xiamu/.ssh<br><span class="hljs-comment"># 生成公钥和私钥</span><br><span class="hljs-comment"># 然后敲（三个回车），就会生成两个文件id_rsa（私钥）、id_rsa.pub（公钥）</span><br>[xiamu@hadoop202 ~]$ ssh-keygen -t rsa<br>[xiamu@hadoop202 ~]$ <span class="hljs-built_in">cd</span> .ssh/<br>[xiamu@hadoop202 .ssh]$ ll<br>总用量 12<br>-rw-------. 1 xiamu xiamu 1675 12月 31 04:20 id_rsa<br>-rw-r--r--. 1 xiamu xiamu  397 12月 31 04:20 id_rsa.pub<br>-rw-r--r--. 1 xiamu xiamu  726 12月 31 02:22 known_hosts<br><br>[xiamu@hadoop202 .ssh]$ <span class="hljs-built_in">cat</span> id_rsa<br>-----BEGIN RSA PRIVATE KEY-----<br>MIIEowIBAAKCAQEAs27rMM0gTqHTYpPExLsuhvzO2Z3hZPellncDj/pvqFClFCzy<br>...<br>-----END RSA PRIVATE KEY-----<br><br>[xiamu@hadoop202 .ssh]$ <span class="hljs-built_in">cat</span> id_rsa.pub<br>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzbuswzSBOodNik8TEuy6G/M7ZneFk96WWdwOP+m+oUKUULPKxsadl++5yQLt+rlauC/jNF9S93TbJEasoBJHsxywTdwe4gmxT5Kx73kDTg41y9vn8gduZdxeOEe3bYvmsJKGpSyPw9ZIqz2mrvIjj1SHE9/CZHQzU9a4EnPePoltYHyP4wIzwauThuQcmFa2O3aZZEYxBdUZxLrFZviI02SQd4raHR7h5nMkGbsMWqjAq3Ky4p1i1Pji0P5Uj++L4A7aL2qiIKXcpW3JeUPx/xdvfPB+Q/llNUaMahIayacNVHbnBDGZdJC3e5qXplBzjcst/RB+KzF2nL8XZp0LX xiamu@hadoop202<br><br><span class="hljs-comment"># 将公钥拷贝到要免密登录的目标机器上</span><br>[xiamu@hadoop202 .ssh]$ ssh-copy-id hadoop202<br>[xiamu@hadoop202 .ssh]$ ssh-copy-id hadoop203<br>[xiamu@hadoop202 .ssh]$ ssh-copy-id hadoop204<br><br>[xiamu@hadoop202 .ssh]$ ll<br>总用量 16<br>-rw-------. 1 xiamu xiamu  397 12月 31 04:30 authorized_keys<br>-rw-------. 1 xiamu xiamu 1675 12月 31 04:20 id_rsa<br>-rw-r--r--. 1 xiamu xiamu  397 12月 31 04:20 id_rsa.pub<br>-rw-r--r--. 1 xiamu xiamu  726 12月 31 02:22 known_hosts<br><br>known_hosts 记录ssh访问过计算机的公钥（public key）<br>id_rsa 生成的私钥<br>id_rsa.pub 生成的公钥<br>authorized_keys 存放授权过的无密登录服务器公钥<br><br>注意：<br>还需要在hadoop103上采用xiamu账号配置一下无密登录到hadoop202、hadoop203、hadoop204服务器上。<br>还需要在hadoop104上采用xiamu账号配置一下无密登录到hadoop202、hadoop203、hadoop204服务器上。<br>还需要在hadoop102上采用root账号，配置一下无密登录到hadoop202、hadoop203、hadoop204；<br></code></pre></td></tr></table></figure><h2 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 hadoop]$ vim core-site.xml<br>&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;?xml-stylesheet <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/xsl&quot;</span> href=<span class="hljs-string">&quot;configuration.xsl&quot;</span>?&gt;<br><br>&lt;!-- Put site-specific property overrides <span class="hljs-keyword">in</span> this file. --&gt;<br><br>&lt;configuration&gt;<br>    &lt;!-- 指定NameNode的地址 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;fs.defaultFS&lt;/name&gt;<br>        &lt;value&gt;hdfs://hadoop202:8020&lt;/value&gt;<br>    &lt;/property&gt;<br><br>    &lt;!-- 指定hadoop数据的存储目录 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;<br>        &lt;value&gt;/opt/module/hadoop-3.1.3/data&lt;/value&gt;<br>    &lt;/property&gt;<br>    &lt;!-- 配置HDFS网页登录使用的静态用户为xiamu --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;hadoop.http.staticuser.user&lt;/name&gt;<br>        &lt;value&gt;xiamu&lt;/value&gt;<br>    &lt;/property&gt;<br>&lt;/configuration&gt;<br><br>[xiamu@hadoop202 hadoop]$ vim hdfs-site.xml<br>&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;?xml-stylesheet <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/xsl&quot;</span> href=<span class="hljs-string">&quot;configuration.xsl&quot;</span>?&gt;<br><br>&lt;!-- Put site-specific property overrides <span class="hljs-keyword">in</span> this file. --&gt;<br><br>&lt;configuration&gt;<br>    &lt;!-- nn web端访问地址--&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;dfs.namenode.http-address&lt;/name&gt;<br>        &lt;value&gt;hadoop202:9870&lt;/value&gt;<br>    &lt;/property&gt;<br>    &lt;!-- 2nn web端访问地址--&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;<br>        &lt;value&gt;hadoop204:9868&lt;/value&gt;<br>    &lt;/property&gt;<br>&lt;/configuration&gt;<br><br>[xiamu@hadoop202 hadoop]$ vim yarn-site.xml<br>&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;<br>&lt;configuration&gt;<br><br>&lt;!-- 指定MR走shuffle --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;<br>        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;<br>    &lt;/property&gt;<br><br>    &lt;!-- 指定ResourceManager的地址--&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;<br>        &lt;value&gt;hadoop203&lt;/value&gt;<br>    &lt;/property&gt;<br><br>    &lt;!-- 环境变量的继承 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt;<br>        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;/value&gt;<br>    &lt;/property&gt;<br><br>&lt;/configuration&gt;<br><br>[xiamu@hadoop202 hadoop]$ vim mapred-site.xml<br>&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;<br>&lt;?xml-stylesheet <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;text/xsl&quot;</span> href=<span class="hljs-string">&quot;configuration.xsl&quot;</span>?&gt;<br><br>&lt;!-- Put site-specific property overrides <span class="hljs-keyword">in</span> this file. --&gt;<br><br>&lt;configuration&gt;<br>    &lt;!-- 指定MapReduce程序运行在Yarn上 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;<br>        &lt;value&gt;yarn&lt;/value&gt;<br>    &lt;/property&gt;<br>&lt;/configuration&gt;<br><br></code></pre></td></tr></table></figure><h2 id="群起集群"><a href="#群起集群" class="headerlink" title="群起集群"></a>群起集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 hadoop]$ <span class="hljs-built_in">pwd</span><br>/opt/module/hadoop-3.1.3/etc/hadoop<br>[xiamu@hadoop202 hadoop]$ vim workers<br><br>hadoop202<br>hadoop203<br>hadoop204<br><br><span class="hljs-comment"># 注意, 上面配置三个主机名不要有任何多余的空格和空行</span><br><br><span class="hljs-comment"># 如果集群是第一次启动，需要在hadoop202节点格式化NameNode</span><br><span class="hljs-comment"># （注意：格式化NameNode，会产生新的集群id，导致NameNode和DataNode的集群id不一致，</span><br><span class="hljs-comment"># 集群找不到已往数据。如果集群在运行过程中报错，需要重新格式化NameNode的话，</span><br><span class="hljs-comment"># 一定要先停止namenode和datanode进程，并且要删除所有机器的data和logs目录，然后再进行格式化。）</span><br><br><span class="hljs-comment"># 第一次启动需要初始化</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ hdfs namenode -format<br><span class="hljs-comment"># 启动HDFS</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ sbin/start-dfs.sh<br><br><br><span class="hljs-comment"># 在配置了ResourceManager的节点（hadoop103）启动YARN</span><br>[xiamu@hadoop203 hadoop-3.1.3]$ sbin/start-yarn.sh<br><br><span class="hljs-comment"># 查看历史服务器</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ jps<br>1876 DataNode<br>2199 NodeManager<br>2296 Jps<br>1757 NameNode<br>[xiamu@hadoop203 hadoop-3.1.3]$ jps<br>1714 ResourceManager<br>2163 Jps<br>1828 NodeManager<br>1531 DataNode<br>[xiamu@hadoop204 ~]$ jps<br>1520 DataNode<br>1605 SecondaryNameNode<br>1749 NodeManager<br>1850 Jps<br><br></code></pre></td></tr></table></figure><p><a href="http://hadoop202:9870/dfshealth.html#tab-overview">http://hadoop202:9870</a><br>Web 端查看 HDFS 的 NameNode<br><img src="http://cdn.xiamu.icu//Fv5T3hG1veWZhXYxt-elY2930Vlx.png"><br>Web 端查看 YARN 的 ResourceManager<br><a href="http://hadoop203:8088/cluster">http://hadoop203:8088/cluster</a><br><img src="http://cdn.xiamu.icu//FupHJug1Gka4Ydq_oqi4h2Dqug5k.png"></p><h2 id="集群基本测试-上传文件"><a href="#集群基本测试-上传文件" class="headerlink" title="集群基本测试(上传文件)"></a><strong>集群基本测试(上传文件)</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -<span class="hljs-built_in">mkdir</span> /wcinput<br><br><span class="hljs-comment"># 上传小文件</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -put wcinput/word.txt /wcinput<br><br></code></pre></td></tr></table></figure><p>执行完成之后页面多了一个目录, 目录中包含着 word.txt 文件<br><img src="http://cdn.xiamu.icu//FpQgXd8kTDTg8ftMn_u6pqENUlBD.png"><br><img src="http://cdn.xiamu.icu//FiaZOsuaVRQsdHpCTkemiNYcTNSD.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 上传一个大文件</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -put /opt/software/jdk-8u212-linux-x64.tar.gz /<br><br><br><span class="hljs-comment"># hdfs文件存储的位置在hadoop根目录中data目录下</span><br>[xiamu@hadoop202 subdir0]$ <span class="hljs-built_in">pwd</span><br>/opt/module/hadoop-3.1.3/data/dfs/data/current/BP-1090801922-192.168.1.202-1672543197610/current/finalized/subdir0/subdir0<br>[xiamu@hadoop202 subdir0]$ <span class="hljs-built_in">ls</span><br>blk_1073741825            blk_1073741826_1002.meta<br>blk_1073741825_1001.meta  blk_1073741827<br>blk_1073741826            blk_1073741827_1003.meta<br><br>[xiamu@hadoop202 subdir0]$ <span class="hljs-built_in">cat</span> blk_1073741826 &gt;&gt; tmp.tar.gz<br>[xiamu@hadoop202 subdir0]$ <span class="hljs-built_in">cat</span> blk_1073741827 &gt;&gt; tmp.tar.gz<br>[xiamu@hadoop202 subdir0]$ tar -zxvf tmp.tar.gz<br>[xiamu@hadoop202 subdir0]$ <span class="hljs-built_in">ls</span><br>blk_1073741825            blk_1073741826            blk_1073741827            jdk1.8.0_212<br>blk_1073741825_1001.meta  blk_1073741826_1002.meta  blk_1073741827_1003.meta  tmp.tar.gz<br><br><span class="hljs-comment"># 这就说明了blk_1073741826和blk_1073741827就是jdk</span><br><br><span class="hljs-comment"># 执行wordcount, 统计文件的词数</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /wcinput /123<br><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FkiEqvU1SveWOTKNlpOG3pmcQiaB.png"></p><h2 id="集群崩溃重启方案"><a href="#集群崩溃重启方案" class="headerlink" title="集群崩溃重启方案"></a>集群崩溃重启方案</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">删除所有集群hadoop根目录下的data, <span class="hljs-built_in">log</span>目录<br>停止dfs和yarn<br>[xiamu@hadoop202 hadoop-3.1.3]$ stop-dfs.sh<br>[xiamu@hadoop203 hadoop-3.1.3]$ stop-yarn.sh<br><br><span class="hljs-comment"># 格式化namenode</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ hdfs namenode -format<br><br><span class="hljs-comment"># 启动HDFS</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ start-dfs.sh<br><br><span class="hljs-comment"># 启动YARN</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ start-yarn.sh<br></code></pre></td></tr></table></figure><h2 id="配置历史服务器"><a href="#配置历史服务器" class="headerlink" title="配置历史服务器"></a>配置历史服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 hadoop]$ vim mapred-site.xml<br>&lt;configuration&gt;<br>    &lt;!-- 指定MapReduce程序运行在Yarn上 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;<br>        &lt;value&gt;yarn&lt;/value&gt;<br>    &lt;/property&gt;<br>    &lt;!-- 历史服务器端地址 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;<br>        &lt;value&gt;hadoop202:10020&lt;/value&gt;<br>    &lt;/property&gt;<br><br>    &lt;!-- 历史服务器web端地址 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;<br>        &lt;value&gt;hadoop202:19888&lt;/value&gt;<br>    &lt;/property&gt;<br>&lt;/configuration&gt;<br><br><br><span class="hljs-comment"># 分发配置</span><br>[xiamu@hadoop202 hadoop]$ xsync mapred-site.xml<br><br><span class="hljs-comment"># 启动历史服务器</span><br>[xiamu@hadoop202 hadoop]$ mapred --daemon start historyserver<br><span class="hljs-comment"># 查看历史服务器是否启动</span><br>[xiamu@hadoop202 hadoop]$ jps<br>4420 NodeManager<br>4117 DataNode<br>4661 Jps<br>4620 JobHistoryServer<br>3998 NameNode<br><br><span class="hljs-comment"># 重启YARN</span><br>[xiamu@hadoop203 hadoop]$ stop-yarn.sh<br>[xiamu@hadoop203 hadoop]$ start-yarn.sh<br><br><span class="hljs-comment"># 上传一个文件到hdfs</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -<span class="hljs-built_in">mkdir</span> /input<br>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop fs -put ./wcinput/word.txt /input<br>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /output<br><br></code></pre></td></tr></table></figure><h2 id="配置日志的聚集"><a href="#配置日志的聚集" class="headerlink" title="配置日志的聚集"></a>配置日志的聚集</h2><p>日志聚集概念：应用运行完成以后，将程序运行日志信息上传到 HDFS 系统上。<br>日志聚集功能好处：可以方便的查看到程序运行详情，方便开发调试。<br>注意：开启日志聚集功能，需要重新启动 NodeManager 、ResourceManager 和 HistoryServer。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 hadoop]$ vim yarn-site.xml<br>    &lt;!-- 开启日志聚集功能 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;yarn.log-aggregation-enable&lt;/name&gt;<br>        &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>    &lt;/property&gt;<br>    &lt;!-- 设置日志聚集服务器地址 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;yarn.log.server.url&lt;/name&gt;<br>        &lt;value&gt;http://hadoop202:19888/jobhistory/logs&lt;/value&gt;<br>    &lt;/property&gt;<br>    &lt;!-- 设置日志保留时间为7天 --&gt;<br>    &lt;property&gt;<br>        &lt;name&gt;yarn.log-aggregation.retain-seconds&lt;/name&gt;<br>        &lt;value&gt;604800&lt;/value&gt;<br>    &lt;/property&gt;<br><br><span class="hljs-comment"># 分发配置文件</span><br>[xiamu@hadoop202 hadoop]$ xsync yarn-site.xml<br><br><span class="hljs-comment"># 重启yarn</span><br>[xiamu@hadoop203 hadoop]$ stop-yarn.sh<br>[xiamu@hadoop202 hadoop]$ mapred --daemon stop historyserver<br>[xiamu@hadoop203 hadoop]$ start-yarn.sh<br>[xiamu@hadoop202 hadoop]$ mapred --daemon start historyserver<br><br><span class="hljs-comment"># 执行一个程序</span><br>[xiamu@hadoop202 hadoop-3.1.3]$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /output2<br><br></code></pre></td></tr></table></figure><p>从<a href="http://hadoop203:8088/cluster">http://hadoop203:8088/cluster</a>访问, 查看当前正在执行的程序, 执行完成之后就可以点进去查看日志</p><h2 id="编写-Hadoop-集群常用脚本"><a href="#编写-Hadoop-集群常用脚本" class="headerlink" title="编写 Hadoop 集群常用脚本"></a>编写 Hadoop 集群常用脚本</h2><p>Hadoop 集群启停脚本（包含 HDFS，Yarn，Historyserver）：myhadoop.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 ~]$ <span class="hljs-built_in">cd</span> /home/xiamu/bin/<br>[xiamu@hadoop202 bin]$ vim myhadoop.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$#</span> -lt 1 ]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;No Args Input...&quot;</span><br>    <span class="hljs-built_in">exit</span> ;<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$1</span> <span class="hljs-keyword">in</span><br><span class="hljs-string">&quot;start&quot;</span>)<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; =================== 启动 hadoop集群 ===================&quot;</span><br><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; --------------- 启动 hdfs ---------------&quot;</span><br>        ssh hadoop202 <span class="hljs-string">&quot;/opt/module/hadoop-3.1.3/sbin/start-dfs.sh&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; --------------- 启动 yarn ---------------&quot;</span><br>        ssh hadoop203 <span class="hljs-string">&quot;/opt/module/hadoop-3.1.3/sbin/start-yarn.sh&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; --------------- 启动 historyserver ---------------&quot;</span><br>        ssh hadoop202 <span class="hljs-string">&quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver&quot;</span><br>;;<br><span class="hljs-string">&quot;stop&quot;</span>)<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; =================== 关闭 hadoop集群 ===================&quot;</span><br><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; --------------- 关闭 historyserver ---------------&quot;</span><br>        ssh hadoop202 <span class="hljs-string">&quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; --------------- 关闭 yarn ---------------&quot;</span><br>        ssh hadoop203 <span class="hljs-string">&quot;/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; --------------- 关闭 hdfs ---------------&quot;</span><br>        ssh hadoop202 <span class="hljs-string">&quot;/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh&quot;</span><br>;;<br>*)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Input Args Error...&quot;</span><br>;;<br><span class="hljs-keyword">esac</span><br><br><br>[xiamu@hadoop202 bin]$ <span class="hljs-built_in">chmod</span> 777 myhadoop.sh<br><br><span class="hljs-comment"># 关闭HDFS，Yarn，Historyserver</span><br>[xiamu@hadoop202 bin]$ myhadoop.sh stop<br><br><span class="hljs-comment"># 开启HDFS，Yarn，Historyserver</span><br>[xiamu@hadoop202 ~]$ myhadoop.sh start<br><br></code></pre></td></tr></table></figure><p>查看三台服务器 Java 进程脚本：jpsall</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 ~]$ <span class="hljs-built_in">cd</span> /home/xiamu/bin<br>[xiamu@hadoop202 bin]$ vim jpsall<br><br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-keyword">for</span> host <span class="hljs-keyword">in</span> hadoop202 hadoop203 hadoop204<br><span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> =============== <span class="hljs-variable">$host</span> ===============<br>        ssh <span class="hljs-variable">$host</span> jps<br><span class="hljs-keyword">done</span><br><br>[xiamu@hadoop202 bin]$ <span class="hljs-built_in">chmod</span> 777 jpsall<br><span class="hljs-comment"># 执行方式</span><br>[xiamu@hadoop202 bin]$ jpsall<br><br><span class="hljs-comment"># 分发脚本</span><br>[xiamu@hadoop202 ~]$ xsync /home/xiamu/bin/<br><br></code></pre></td></tr></table></figure><h2 id="常用端口号"><a href="#常用端口号" class="headerlink" title="常用端口号"></a>常用端口号</h2><p>hadoop3.x<br>HDFS NameNode 内部通信端口: 8020&#x2F;9000&#x2F;9820<br>HDFS NameNode 对用户的查询端口: 9870<br>Yarn 查看任务运行情况的: 8088<br>历史服务器: 19888<br>hadoop2.x<br>HDFS NameNode 内部通信端口: 8020&#x2F;9000<br>HDFS NameNode 对用户的查询端口: 50070<br>Yarn 查看任务运行情况的: 8088<br>历史服务器: 19888</p><h2 id="常用的配置文件"><a href="#常用的配置文件" class="headerlink" title="常用的配置文件"></a>常用的配置文件</h2><p>3.x core-site.xml hdfs-site.xml yarn-site.xml mapred-site.xml workers<br>2.x core-site.xml hdfs-site.xml yarn-site.xml mapred-site.xml slaves</p><h2 id="集群的时间同步-可选"><a href="#集群的时间同步-可选" class="headerlink" title="集群的时间同步(可选)"></a>集群的时间同步(可选)</h2><p>一般来说, 集群连接了外网就可以不用配置<br>设置完成之后不知道为啥会 1 Jan 22:31:36 ntpdate[1532]: bind() fails: Permission denied</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[root@hadoop202 xiamu]<span class="hljs-comment"># yum install ntp</span><br>[root@hadoop202 xiamu]<span class="hljs-comment"># systemctl status ntpd</span><br>[root@hadoop202 xiamu]<span class="hljs-comment"># systemctl start ntpd</span><br>[root@hadoop202 xiamu]<span class="hljs-comment"># vim /etc/ntp.conf</span><br><br>1. 把<br><span class="hljs-comment">#restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap</span><br>修改成<br>restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap<br><br>192.168.1.0表示是192.168.1这个网段的<br><br>2.把<br>server 0.centos.pool.ntp.org iburst<br>server 1.centos.pool.ntp.org iburst<br>server 2.centos.pool.ntp.org iburst<br>server 3.centos.pool.ntp.org iburst<br>注释掉<br><span class="hljs-comment"># server 0.centos.pool.ntp.org iburst</span><br><span class="hljs-comment"># server 1.centos.pool.ntp.org iburst</span><br><span class="hljs-comment"># server 2.centos.pool.ntp.org iburst</span><br><span class="hljs-comment"># server 3.centos.pool.ntp.org iburst</span><br><br>3.文件末尾追加两句<br>erver 127.127.1.0<br>fudge 127.127.1.0 stratum 10<br><br><br><span class="hljs-comment"># 修改hadoop202中的 /etc/sysconfig/ntpd 文件</span><br><span class="hljs-comment"># 追加一行</span><br>[root@hadoop202 xiamu]<span class="hljs-comment"># vim /etc/sysconfig/ntpd</span><br>SYNC_HWCLOCK=<span class="hljs-built_in">yes</span><br><span class="hljs-comment"># 重启ntpd服务</span><br>[root@hadoop202 xiamu]<span class="hljs-comment"># systemctl restart ntpd</span><br><span class="hljs-comment"># 设置开机自启动</span><br>[root@hadoop202 xiamu]<span class="hljs-comment"># systemctl enable ntpd</span><br><br><br>hadoop203主机<br>[root@hadoop203 bin]<span class="hljs-comment"># systemctl stop ntpd</span><br>[root@hadoop203 bin]<span class="hljs-comment"># systemctl disable ntpd</span><br>[root@hadoop203 bin]<span class="hljs-comment"># crontab -e</span><br>*/1 * * * * /usr/sbin/ntpdate hadoop202<br><br><span class="hljs-comment"># 随便修改一个时间</span><br>[root@hadoop203 bin]<span class="hljs-comment"># date -s &quot;2021-9-11 11:11:11&quot;</span><br>2021年 09月 11日 星期六 11:11:11 CST<br><span class="hljs-comment"># 查看时间</span><br>[root@hadoop203 bin]<span class="hljs-comment"># date</span><br>2021年 09月 11日 星期六 11:11:17 CST<br><br></code></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[xiamu@hadoop202 ~]$ hadoop fs -put /opt/software/jdk-8u212-linux-x64.tar.gz /<br></code></pre></td></tr></table></figure><p>块大小是 128M, 但是 jdk 的大小超过了块大小, 所有 jdk 有两个块<br><img src="http://cdn.xiamu.icu//FlyIbgBmkIGXcIlYCFT7rhwZtmxg.png"><br><img src="http://cdn.xiamu.icu//FinOngPmGS4U9708FSpKZTlYBKMY.png"></p>]]></content>
    
    
    <categories>
      
      <category>Hadoop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Maven ClassNotFoundException MySql</title>
    <link href="/uncategorized/Maven%20ClassNotFoundException%20MySql/"/>
    <url>/uncategorized/Maven%20ClassNotFoundException%20MySql/</url>
    
    <content type="html"><![CDATA[<p>在 maven 导入 mysql-connector-java 的时候报错,<br>java.lang.ClassNotFoundException<br>检查如下代码, 打包成 war 包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>war<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.0.30<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ElasticSearch</title>
    <link href="/Java/ElasticSearch/"/>
    <url>/Java/ElasticSearch/</url>
    
    <content type="html"><![CDATA[<h2 id="下载-ElasticSearch"><a href="#下载-ElasticSearch" class="headerlink" title="下载 ElasticSearch"></a>下载 ElasticSearch</h2><p><a href="https://www.elastic.co/cn/">https://www.elastic.co/cn/</a><img src="http://cdn.xiamu.icu//FjWGROR6MJCL8KVHvVaIlec8DKLf.png"><br><img src="http://cdn.xiamu.icu//Fjni9KKdOpq59BzrrR27wYB74nj3.png"><br><a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0">https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0</a><br><img src="http://cdn.xiamu.icu//FmPiBKbeQS80K7DBFZ8H2TGID0c2.png"><br>下载之后解压, 文件目录如下<br><img src="http://cdn.xiamu.icu//FoK8yfG5XZSwsJ0oYH23-x75Jm7G.png"><br>bin 可执行脚本目录<br> config 配置目录<br> jdk 内置 JDK 目录<br> lib 类库<br> logs 日志目录<br> modules 模块目录<br> plugins 插件目录</p><h2 id="启动-ElasticSearch"><a href="#启动-ElasticSearch" class="headerlink" title="启动 ElasticSearch"></a>启动 ElasticSearch</h2><p>要确保 java -version 和 echo %JAVA_HOME% 的版本一致<br><img src="http://cdn.xiamu.icu//Fv4woLVw_gvlfw02Mz04uv30YjmY.png"><br>打开 bin 目录, 双击 elasticsearch.bat 文件, 会弹出一个黑框, 注意, 你的笔记本电脑需要有 java 环境<br><img src="http://cdn.xiamu.icu//FpXU6YbNXwGw7lTD6Dz9ICEc9xmf.png"><br>双击之后关注两个位置<br><img src="http://cdn.xiamu.icu//FuVbYxfYDlAKsf7L6cStY-9Vv05T.png"><br>在浏览器中打开<a href="http://127.0.0.1:9200/">http://127.0.0.1:9200/</a><br>显示如下内容说明 elasticsearch 启动成功<br><img src="http://cdn.xiamu.icu//Fs4HZ9JshhNNB_gTWEHsilQsj8Xj.png"></p><h2 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h2><p>Elasticsearch 是面向文档型数据库，一条数据在这里就是一个文档。为了方便大家理解， 我们将 Elasticsearch 里存储文档数据和关系型数据库 MySQL 存储数据的概念进行一个类比<br><img src="http://cdn.xiamu.icu//FvKbkTApum_A_8YGyDAa-INJVeE1.png"><br>ES 里的 Index 可以看做一个库，而 Types 相当于表，Documents 则相当于表的行。 这里 Types 的概念已经被逐渐弱化，Elasticsearch 6.X 中，一个 index 下已经只能包含一个 type，Elasticsearch 7.X 中, Type 的概念已经被删除了。</p><h2 id="索引操作"><a href="#索引操作" class="headerlink" title="索引操作"></a>索引操作</h2><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><p>打开 postman, 给<a href="http://localhost:9200/shopping">http://localhost:9200/shopping</a>发送 PUT 请求<br><img src="http://cdn.xiamu.icu//FrAUA9IPCf0SI4Gw9qHbzwuFuwL0.png"></p><blockquote><p>幂等（idempotent、idempotence）是一个数学与计算机学概念，常见于抽象代数中。 在编程中一个幂等操作的特点是其任意多次执行所产生的影响均与一次执行的影响相同。 幂等函数，或幂等方法，是指可以使用相同参数重复执行，并能获得相同结果的函数。</p></blockquote><p>简单来说, 就是调用一次, 和调用多次得到的结果是一样的<br>PUT 是具有幂等性的, 创建好 shopping 之后, 再次发送请求, 就会提示, 已经创建好了<br><img src="http://cdn.xiamu.icu//FqNhWL9_I6qVQb1O2qPjpayjQLBT.png"><br>不能够发送 POST 请求, 因为 POST 请求不是幂等的, 两次的操作可能不一样<br><img src="http://cdn.xiamu.icu//Fsbb0KFOTGrVQtYt8VhMLtGNEIHO.png"><br>允许使用的只有 GET, DELETE, HEAD, PUT</p><h3 id="查询索引"><a href="#查询索引" class="headerlink" title="查询索引"></a>查询索引</h3><p><strong>查询单个索引</strong>发送 get 请求<a href="http://localhost:9200/shopping">http://localhost:9200/shopping</a><br><img src="http://cdn.xiamu.icu//FroW7u3zV69CC3TRGXZiMioXhEEW.png"><br><img src="http://cdn.xiamu.icu//FuXzk39NyByz_uzSm3muMr5PE6Hy.png"><br><strong>查询所有索引</strong>发送 get 请求<a href="http://localhost:9200/_cat/indices?v">http://localhost:9200/_cat&#x2F;indices?v</a><br><img src="http://cdn.xiamu.icu//FsG7rrnfhIcrtRVMArmD_Kzjh_1_.png"><br><img src="http://cdn.xiamu.icu//FlZpkFDdyb5D0BeGqFkqen-dLofq.png"></p><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><p>使用 delete 发送<a href="http://localhost:9200/shopping">http://localhost:9200/shopping</a>请求<br><img src="http://cdn.xiamu.icu//Fqj35LBDRZs5wciS2Xk1dNBw2YS7.png"><br><img src="http://cdn.xiamu.icu//FsKv3y50ZgsL6ZXSMLD6uIS1gx__.png"><br>再次查询所有索引, 发现已经没有 shopping 索引了<br><img src="http://cdn.xiamu.icu//Fm_bDkVQvXiDC7UyFTQFYRQp-io3.png"></p><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><p>创建文档并添加数据<br>使用 Post 发送请求<a href="http://127.0.0.1:9200/shopping/_doc">http://127.0.0.1:9200/shopping/_doc</a><br>在 Body 中携带 JSON 数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;小米手机&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;category&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;小米&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;images&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3999.0</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fm5EDLxRxwEYrgtHZj8qyfK2SnO0.png"><br>此处发送请求的方式必须为 POST，不能是 PUT，否则会发生错误<br><img src="http://cdn.xiamu.icu//FnLuI-sJgs19XpT45-xlGbK18n-a.png"><br>上面的数据创建后，由于没有指定数据唯一性标识（ID），默认情况下，ES 服务器会随机 生成一个。<br> 如果想要自定义唯一性标识，需要在创建时指定：<a href="http://127.0.0.1:9200/shopping/_doc/114514">http://127.0.0.1:9200/shopping/_doc&#x2F;114514</a><br>此处需要注意：如果增加数据时明确数据主键，那么请求方式也可以为 PUT<br><img src="http://cdn.xiamu.icu//FmaRSTKu58ytjq8q6U_FAr3uE_p_.png"></p><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><p><strong>主键查询</strong><br>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_doc/114514">http://127.0.0.1:9200/shopping/_doc&#x2F;114514</a><br><img src="http://cdn.xiamu.icu//FpCAZqyD26PjzXz9cKH0398HWdBy.png"><br><strong>查询所有数据</strong><br>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br><img src="http://cdn.xiamu.icu//FmeZyzU2bX0KPQN3NRZyO5pNEYtN.png"></p><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><p><strong>全量修改</strong><br>使用 POST 发送<a href="http://127.0.0.1:9200/shopping/_doc/114514">http://127.0.0.1:9200/shopping/_doc&#x2F;114514</a><br>在 Body 携带 JSON</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;华为手机&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;category&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;华为&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;images&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;http://www.gulixueyuan.com/hw.jpg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4999.0</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fj_xUcmvfEsIE_bRG720hzJirkEE.png"><br><strong>局部修改</strong><br>只修改当中的某一个属性<br>使用 PUT 发送<a href="http://127.0.0.1:9200/shopping/_doc/114514">http://127.0.0.1:9200/shopping/_doc&#x2F;114514</a><br>携带 JSON 参数</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;_doc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;5999.00&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FiSPKgdGclga-gVXRrAsvtStjaSQ.png"></p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>使用 DELETE 发送<a href="http://127.0.0.1:9200/shopping/_doc/114514">http://127.0.0.1:9200/shopping/_doc&#x2F;114514</a><br><img src="http://cdn.xiamu.icu//Fv3-hPeCi5cfLYGvS1W62zLV2lCO.png"><br>再次发送 DELETE 请求, 则”result”: “not_found”,<br><img src="http://cdn.xiamu.icu//Fox7lAkH62QwYUlpgXRNfA-OyfDw.png"></p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p>第一种直接在地址栏中带参数<br>使用 GET 发送请求 <a href="http://127.0.0.1:9200/shopping/_search?q=category:">http://127.0.0.1:9200/shopping/_search?q&#x3D;category:</a>小米<br><img src="http://cdn.xiamu.icu//Ft06INnZUqDvMT1g8bHLWATdWG-9.png"><br>第二种: 在请求头中带参数, 避免的地址栏中包含中文会乱码的问题<br>使用 GET 发送请求<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>请求头携带 JSON 格式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;match&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;category&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;小米&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>同样能够查询出来 category 是小米的数据<br><img src="http://cdn.xiamu.icu//FjHPYyWJZ-vEaDoXC7SlTwKBMwFg.png"></p><p>全查询<br>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>请求头携带</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;match_all&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>最后查询的结果是把数据全部查询出来<br><img src="http://cdn.xiamu.icu//Fi_BBLYAYqIL3VlNm062QgPra2HA.png"></p><h2 id="分页查询和条件查询"><a href="#分页查询和条件查询" class="headerlink" title="分页查询和条件查询"></a>分页查询和条件查询</h2><p>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>请求头携带 JSON:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;match_all&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;from&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;size&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;_source&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;title&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;sort&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;price&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;desc&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br>from是起始位置<br>from = (页面 - <span class="hljs-number">1</span>) * 每页数据条数<br><br>_source是指定当前只查询的字段<br>sort是指定需要对某一个字段进行排序操作<br></code></pre></td></tr></table></figure><h2 id="多条件查询"><a href="#多条件查询" class="headerlink" title="多条件查询"></a>多条件查询</h2><p>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>请求头 JSON:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;query&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;bool&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;must&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;match&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;category&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;小米&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;match&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3999.0</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>must 表示: 匹配的条件, category 是小米, 并且 price 也要是 3999<br>must 可以替换成 should, 表示</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br><span class="hljs-string">&quot;bool&quot;</span> : &#123;<br><span class="hljs-string">&quot;should&quot;</span> : [<br>&#123;<br><span class="hljs-string">&quot;match&quot;</span> : &#123;<br><span class="hljs-string">&quot;category&quot;</span> : &quot;小米&quot;<br>&#125;<br>&#125;,<br>&#123;<br><span class="hljs-string">&quot;match&quot;</span> : &#123;<br><span class="hljs-string">&quot;category&quot;</span> : &quot;华为&quot;<br>&#125;<br>&#125;<br>]<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>加上范围, 查询大于 5000 价格的手机的</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;bool&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;should&quot;</span> : [<br>                &#123;<br>                    <span class="hljs-string">&quot;match&quot;</span> : &#123;<br>                        <span class="hljs-string">&quot;category&quot;</span> : &quot;小米&quot;<br>                    &#125;<br>                &#125;,<br>                &#123;<br>                    <span class="hljs-string">&quot;match&quot;</span> : &#123;<br>                        <span class="hljs-string">&quot;category&quot;</span> : &quot;华为&quot;<br>                    &#125;<br>                &#125;<br>            ],<br>            <span class="hljs-string">&quot;filter&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;range&quot;</span> : &#123;<br>                    <span class="hljs-string">&quot;price&quot;</span> : &#123;<br>                        <span class="hljs-string">&quot;gt&quot;</span> : 5000<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="全文检索-amp-完全匹配-amp-高亮查询"><a href="#全文检索-amp-完全匹配-amp-高亮查询" class="headerlink" title="全文检索 &amp; 完全匹配 &amp; 高亮查询"></a>全文检索 &amp; 完全匹配 &amp; 高亮查询</h2><p><strong>全文检索</strong><br>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>Body 携带 JSON</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;match&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;category&quot;</span> : &quot;米&quot;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>category 中带有 “米” 的关键字都会被查询出来<br>如果 category: “华米”, category 中会查询出 “华为” , “小米”等等这种字段</p><p><strong>完全匹配</strong><br>如果不想使用这种全文检索, 那么可以采用完全匹配的规则进行查询<br>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>Body 携带 JSON</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;match_phrase&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;category&quot;</span> : &quot;华米&quot;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样匹配, 就不会同时出现”小米” “华为”了, 只会精准的匹配到”华米”</p><p><strong>高亮查询</strong><br>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>Body 携带 JSON</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;match_phrase&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;category&quot;</span> : &quot;小米&quot;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-string">&quot;highlight&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;fields&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;category&quot;</span> : &#123;&#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br>返回的数据如下: 会在highlight中加上高亮的效果<br>&#123;<br>    <span class="hljs-string">&quot;_index&quot;</span>: <span class="hljs-string">&quot;shopping&quot;</span>,<br>    <span class="hljs-string">&quot;_type&quot;</span>: <span class="hljs-string">&quot;_doc&quot;</span>,<br>    <span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-string">&quot;1009&quot;</span>,<br>    <span class="hljs-string">&quot;_score&quot;</span>: <span class="hljs-number">0.5156582</span>,<br>    <span class="hljs-string">&quot;_source&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;小米手机&quot;</span>,<br>        <span class="hljs-string">&quot;category&quot;</span>: <span class="hljs-string">&quot;小米&quot;</span>,<br>        <span class="hljs-string">&quot;images&quot;</span>: <span class="hljs-string">&quot;http://www.gulixueyuan.com/hw.jpg&quot;</span>,<br>        <span class="hljs-string">&quot;price&quot;</span>: <span class="hljs-number">9999.00</span><br>    &#125;,<br>    <span class="hljs-string">&quot;highlight&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;category&quot;</span>: [<br>            <span class="hljs-string">&quot;&lt;em&gt;小&lt;/em&gt;&lt;em&gt;米&lt;/em&gt;&quot;</span><br>        ]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h2><p>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>Body 携带 JSON</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123;<br>    <span class="hljs-string">&quot;aggs&quot;</span> : &#123; <span class="hljs-regexp">//</span> 聚合操作<br>        <span class="hljs-string">&quot;price_group&quot;</span> : &#123; <span class="hljs-regexp">//</span> 名称: 随意起名<br>            <span class="hljs-string">&quot;terms&quot;</span> : &#123; <span class="hljs-regexp">//</span> 分组<br>                <span class="hljs-string">&quot;field&quot;</span> : <span class="hljs-string">&quot;price&quot;</span> <span class="hljs-regexp">//</span> 分组字段<br>            &#125;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-string">&quot;size&quot;</span> : <span class="hljs-number">0</span> <span class="hljs-regexp">//</span> 不查询原数据<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FkEGeT2C5rDG4DeyHlXJ4Fb41d1R.png"><br>使用 GET 发送<a href="http://127.0.0.1:9200/shopping/_search">http://127.0.0.1:9200/shopping/_search</a><br>Body 携带 JSON</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123;<br>    <span class="hljs-string">&quot;aggs&quot;</span> : &#123; <span class="hljs-regexp">//</span> 聚合操作<br>        <span class="hljs-string">&quot;price_avg&quot;</span> : &#123; <span class="hljs-regexp">//</span> 名称: 随意起名<br>            <span class="hljs-string">&quot;avg&quot;</span> : &#123; <span class="hljs-regexp">//</span> 平均值<br>                <span class="hljs-string">&quot;field&quot;</span> : <span class="hljs-string">&quot;price&quot;</span> <span class="hljs-regexp">//</span> 分组字段<br>            &#125;<br>        &#125;<br>    &#125;,<br>    <span class="hljs-string">&quot;size&quot;</span> : <span class="hljs-number">0</span> <span class="hljs-regexp">//</span> 不查询原数据<br>&#125;<br></code></pre></td></tr></table></figure><p>查询结果如下:<br><img src="http://cdn.xiamu.icu//FkrOyZkDpL_zKS85RIVjPpyoNdYd.png"></p><h2 id="映射关系"><a href="#映射关系" class="headerlink" title="映射关系"></a>映射关系</h2><p>先使用 PUT 发送<a href="http://localhost:9200/user">http://localhost:9200/user</a><br>创建 user 索引<br>Body 携带 JSON</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;properties&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;name&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;type&quot;</span> : &quot;<span class="hljs-type">text</span><span class="hljs-string">&quot;,</span><br><span class="hljs-string">            &quot;</span>index<span class="hljs-string">&quot; : true</span><br><span class="hljs-string">        &#125;,</span><br><span class="hljs-string">        &quot;</span>sex<span class="hljs-string">&quot; : &#123;</span><br><span class="hljs-string">            &quot;</span><span class="hljs-keyword">type</span><span class="hljs-string">&quot; : &quot;</span>keyword<span class="hljs-string">&quot;,</span><br><span class="hljs-string">            &quot;</span>index<span class="hljs-string">&quot; : true</span><br><span class="hljs-string">        &#125;,</span><br><span class="hljs-string">        &quot;</span>tel<span class="hljs-string">&quot; : &#123;</span><br><span class="hljs-string">            &quot;</span><span class="hljs-keyword">type</span><span class="hljs-string">&quot; : &quot;</span>keyword<span class="hljs-string">&quot;,</span><br><span class="hljs-string">            &quot;</span>index<span class="hljs-string">&quot; : false</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><p>使用 PUT 发送<a href="http://localhost:9200/user/_create/1001">http://localhost:9200/user/_create&#x2F;1001</a><br>添加一条数据<br>Body 携带 JSON</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;name&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;小米&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;sex&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;男的&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tel&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1111&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>type：类型，Elasticsearch 中支持的数据类型非常丰富，说几个关键的：<br> String 类型，又分两种：<br> text：可分词<br> keyword：不可分词，数据会作为完整字段进行匹配<br> Numerical：数值类型，分两类<br>基本数据类型：long、integer、short、byte、double、float、half_float<br>浮点数的高精度类型：scaled_float<br> Date：日期类型<br> Array：数组类型<br> Object：对象<br> index：是否索引，默认为 true，也就是说你不进行任何配置，所有字段都会被索引。<br> true：字段会被索引，则可以用来进行搜索<br>false：字段不会被索引，不能用来搜索<br>使用 GET 发送<a href="http://localhost:9200/user/_search">http://localhost:9200/user/_search</a></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;match&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;name&quot;</span> : &quot;小&quot;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FlmbFuIDaTKA55yefS5jWOMFlCu2.png"></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;match&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;sex&quot;</span> : &quot;男&quot;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FpO_H265akNhemkYxFB2clR1HYje.png"></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ada">&#123;<br>    <span class="hljs-string">&quot;query&quot;</span> : &#123;<br>        <span class="hljs-string">&quot;match&quot;</span> : &#123;<br>            <span class="hljs-string">&quot;tel&quot;</span> : &quot;1111&quot;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FnpmoUBRTpRw76tnQPEp_XtdYC3o.png"></p><h2 id="在-Java-项目中使用-ElasticSearch"><a href="#在-Java-项目中使用-ElasticSearch" class="headerlink" title="在 Java 项目中使用 ElasticSearch"></a>在 Java 项目中使用 ElasticSearch</h2><h3 id="ERROR-StatusLogger-No-log4j2-configuration-file-found-Using-default-configuration-logging-only-errors-to-the-console-Set-system-property-‘org-apache-logging-log4j-simplelog-StatusLogger-level’-to-TRACE-to-show-Log4j2-internal-initialization-logging"><a href="#ERROR-StatusLogger-No-log4j2-configuration-file-found-Using-default-configuration-logging-only-errors-to-the-console-Set-system-property-‘org-apache-logging-log4j-simplelog-StatusLogger-level’-to-TRACE-to-show-Log4j2-internal-initialization-logging" class="headerlink" title="ERROR StatusLogger No log4j2 configuration file found. Using default configuration: logging only errors to the console. Set system property ‘org.apache.logging.log4j.simplelog.StatusLogger.level’ to TRACE to show Log4j2 internal initialization logging."></a>ERROR StatusLogger No log4j2 configuration file found. Using default configuration: logging only errors to the console. Set system property ‘org.apache.logging.log4j.simplelog.StatusLogger.level’ to TRACE to show Log4j2 internal initialization logging.</h3><p>在 resource 目录下创建 log4j2.xml 文件<br><img src="http://cdn.xiamu.icu//FiR42Svqj5-RCGkbrORRZBiBp5T9.png"></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Configuration</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">Appenders</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Console</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">PatternLayout</span> <span class="hljs-attr">pattern</span>=<span class="hljs-string">&quot;%d %-5p [%t] %C</span></span></span><span class="hljs-template-variable">&#123;2&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string"> (%F:%L) - %m%n&quot;</span>/&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Console</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">RollingFile</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;RollingFile&quot;</span> <span class="hljs-attr">fileName</span>=<span class="hljs-string">&quot;logs/strutslog1.log&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">                     <span class="hljs-attr">filePattern</span>=<span class="hljs-string">&quot;logs/$$</span></span></span><span class="hljs-template-variable">&#123;date:yyyy-MM&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">/app-%d</span></span></span><span class="hljs-template-variable">&#123;MM-dd-yyyy&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">-%i.log.gz&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">PatternLayout</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">Pattern</span>&gt;</span>%d</span><span class="hljs-template-variable">&#123;MM-dd-yyyy&#125;</span><span class="language-xml"> %p %c</span><span class="hljs-template-variable">&#123;1.&#125;</span><span class="language-xml"> [%t] -%M-%L- %m%n<span class="hljs-tag">&lt;/<span class="hljs-name">Pattern</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">PatternLayout</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Policies</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">TimeBasedTriggeringPolicy</span> /&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">SizeBasedTriggeringPolicy</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;1 KB&quot;</span>/&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Policies</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">DefaultRolloverStrategy</span> <span class="hljs-attr">fileIndex</span>=<span class="hljs-string">&quot;max&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;2&quot;</span>/&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">RollingFile</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Appenders</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">Loggers</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.opensymphony.xwork2&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WAN&quot;</span>/&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.struts2&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;WAN&quot;</span>/&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Root</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;warn&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">AppenderRef</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Root</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Loggers</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">Configuration</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="连接-ES"><a href="#连接-ES" class="headerlink" title="连接 ES"></a>连接 ES</h3><p>创建一个 maven 项目<br><img src="http://cdn.xiamu.icu//FjtJntAl5gAKG9hL-g7DU0i5KSdG.png"><br>导入如下依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.elasticsearch<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>elasticsearch<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>7.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- elasticsearch 的客户端 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.elasticsearch.client<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>7.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- elasticsearch 依赖 2.x 的 log4j --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.8.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.8.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- junit 单元测试 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><p>测试类运行如下代码, 并没有报错, 说明代码没有错误</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ESTest_Client</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">// 创建ES客户端</span><br>        <span class="hljs-type">RestHighLevelClient</span> <span class="hljs-variable">esClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RestHighLevelClient</span>(<br>                RestClient.builder(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpHost</span>(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-number">9200</span>, <span class="hljs-string">&quot;http&quot;</span>))<br>        );<br>        <span class="hljs-comment">// 关闭ES客户端</span><br>        esClient.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="创建索引-1"><a href="#创建索引-1" class="headerlink" title="创建索引"></a>创建索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.CreateIndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.CreateIndexResponse;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ESTest_Index_Create</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">RestHighLevelClient</span> <span class="hljs-variable">esClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RestHighLevelClient</span>(<br>                RestClient.builder(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpHost</span>(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-number">9200</span>, <span class="hljs-string">&quot;http&quot;</span>))<br>        );<br><br>        <span class="hljs-comment">// 创建索引</span><br>        <span class="hljs-type">CreateIndexRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreateIndexRequest</span>(<span class="hljs-string">&quot;user&quot;</span>);<br>        <span class="hljs-type">CreateIndexResponse</span> <span class="hljs-variable">createIndexResponse</span> <span class="hljs-operator">=</span> esClient.indices().create(request, RequestOptions.DEFAULT);<br><br>        <span class="hljs-comment">// 响应状态</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">acknowledged</span> <span class="hljs-operator">=</span> createIndexResponse.isAcknowledged();<br>        System.out.println(<span class="hljs-string">&quot;索引操作: &quot;</span> + acknowledged);<br><br>        esClient.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Flh1Efs2Vjq4M6J8HsqY9K7f_zI4.png"></p><h3 id="查询索引-1"><a href="#查询索引-1" class="headerlink" title="查询索引"></a>查询索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.index.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.CreateIndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.CreateIndexResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.GetIndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.GetIndexResponse;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ESTest_Index_Search</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">RestHighLevelClient</span> <span class="hljs-variable">esClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RestHighLevelClient</span>(<br>                RestClient.builder(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpHost</span>(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-number">9200</span>, <span class="hljs-string">&quot;http&quot;</span>))<br>        );<br><br>        <span class="hljs-comment">// 查询索引</span><br>        <span class="hljs-type">GetIndexRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GetIndexRequest</span>(<span class="hljs-string">&quot;user&quot;</span>);<br>        <span class="hljs-type">GetIndexResponse</span> <span class="hljs-variable">getIndexResponse</span> <span class="hljs-operator">=</span> esClient.indices().get(request, RequestOptions.DEFAULT);<br><br>        <span class="hljs-comment">// 响应状态</span><br>        System.out.println(getIndexResponse.getAliases());<br>        System.out.println(getIndexResponse.getMappings());<br>        System.out.println(getIndexResponse.getSettings());<br><br>        esClient.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查询结果如下:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>&#123;<span class="hljs-keyword">user</span>=[]&#125;<br>&#123;<span class="hljs-keyword">user</span>=org.elasticsearch.<span class="hljs-keyword">cluster</span>.metadata.MappingMetadata@<span class="hljs-number">87817</span>eaa&#125;<br>&#123;<span class="hljs-keyword">user</span>=&#123;&quot;index.creation_date&quot;:&quot;1672228548499&quot;,&quot;index.number_of_replicas&quot;:&quot;1&quot;,&quot;index.number_of_shards&quot;:&quot;1&quot;,&quot;index.provided_name&quot;:&quot;user&quot;,&quot;index.uuid&quot;:&quot;JtqLrkGnT2ONWQ0JqfWY2A&quot;,&quot;index.version.created&quot;:&quot;7080099&quot;&#125;&#125;<br><br><br></code></pre></td></tr></table></figure><h3 id="删除索引-1"><a href="#删除索引-1" class="headerlink" title="删除索引"></a>删除索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.index.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.support.master.AcknowledgedResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.GetIndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.indices.GetIndexResponse;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ESTest_Index_Delete</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">RestHighLevelClient</span> <span class="hljs-variable">esClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RestHighLevelClient</span>(<br>                RestClient.builder(<span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpHost</span>(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-number">9200</span>, <span class="hljs-string">&quot;http&quot;</span>))<br>        );<br><br>        <span class="hljs-comment">// 删除索引</span><br>        <span class="hljs-type">DeleteIndexRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DeleteIndexRequest</span>(<span class="hljs-string">&quot;user&quot;</span>);<br>        <span class="hljs-type">AcknowledgedResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> esClient.indices().delete(request, RequestOptions.DEFAULT);<br><br>        <span class="hljs-comment">// 响应状态</span><br>        System.out.println(response.isAcknowledged());<br><br>        esClient.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<br><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">admin</span>.indices.<span class="hljs-keyword">delete</span>.DeleteIndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.support.master.AcknowledgedResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentType;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Index_Insert &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // 添加数据<br>        IndexRequest request = <span class="hljs-built_in">new</span> IndexRequest();<br>        request.<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1001&quot;);<br><br>        <span class="hljs-keyword">User</span> <span class="hljs-keyword">user</span> = <span class="hljs-built_in">new</span> <span class="hljs-keyword">User</span>();<br>        <span class="hljs-keyword">user</span>.setName(&quot;张三&quot;);<br>        <span class="hljs-keyword">user</span>.setAge(<span class="hljs-number">20</span>);<br>        <span class="hljs-keyword">user</span>.setSex(&quot;男&quot;);<br><br>        ObjectMapper mapper = <span class="hljs-built_in">new</span> ObjectMapper();<br>        String userJson = mapper.writeValueAsString(<span class="hljs-keyword">user</span>);<br>        request.source(userJson, XContentType.JSON);<br><br>        IndexResponse response = esClient.<span class="hljs-keyword">index</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getResult());<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="修改数据-1"><a href="#修改数据-1" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<br><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">update</span>.UpdateRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">update</span>.UpdateResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentType;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Index_Update &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // 修改数据<br>        UpdateRequest request = <span class="hljs-built_in">new</span> UpdateRequest();<br>        request.<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1001&quot;);<br><br>        request.doc(XContentType.JSON, &quot;sex&quot;, &quot;女&quot;);<br><br>        UpdateResponse <span class="hljs-keyword">update</span> = esClient.<span class="hljs-keyword">update</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(<span class="hljs-keyword">update</span>.getResult());<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查询数据-1"><a href="#查询数据-1" class="headerlink" title="查询数据"></a>查询数据</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">update</span>.UpdateRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">update</span>.UpdateResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentType;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Get &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // 查询数据<br>        GetRequest request = <span class="hljs-built_in">new</span> GetRequest();<br>        request.<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1001&quot;);<br>        GetResponse response = esClient.<span class="hljs-keyword">get</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getSourceAsString());<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="删除数据-1"><a href="#删除数据-1" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<br><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">delete</span>.DeleteRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">delete</span>.DeleteResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentType;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Delete &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // 删除数据<br>        DeleteRequest request = <span class="hljs-built_in">new</span> DeleteRequest();<br>        request.<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1001&quot;);<br><br>        DeleteResponse response = esClient.<span class="hljs-keyword">delete</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.toString());<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="批量添加"><a href="#批量添加" class="headerlink" title="批量添加"></a>批量添加</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<br><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.bulk.BulkRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.bulk.BulkResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentType;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Insert_Batch &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // 批量添加数据<br>        BulkRequest request = <span class="hljs-built_in">new</span> BulkRequest();<br><br>        request.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> IndexRequest().<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1001&quot;).source(XContentType.JSON, &quot;name&quot;, &quot;zhangsan&quot;));<br>        request.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> IndexRequest().<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1002&quot;).source(XContentType.JSON, &quot;name&quot;, &quot;lisi&quot;));<br>        request.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> IndexRequest().<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1003&quot;).source(XContentType.JSON, &quot;name&quot;, &quot;wangwu&quot;));<br><br>        BulkResponse response = esClient.bulk(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getItems());<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="批量删除"><a href="#批量删除" class="headerlink" title="批量删除"></a>批量删除</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.bulk.BulkRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.bulk.BulkResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">delete</span>.DeleteRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">index</span>.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.common.xcontent.XContentType;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Delete_Batch &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // 批量添加数据<br>        BulkRequest request = <span class="hljs-built_in">new</span> BulkRequest();<br><br>        request.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> DeleteRequest().<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1001&quot;));<br>        request.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> DeleteRequest().<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1002&quot;));<br>        request.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> DeleteRequest().<span class="hljs-keyword">index</span>(&quot;user&quot;).id(&quot;1003&quot;));<br><br>        BulkResponse response = esClient.bulk(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getItems());<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查询所有数据"><a href="#查询所有数据" class="headerlink" title="查询所有数据"></a>查询所有数据</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br><br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">1.</span>查询索引中全部的数据<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        request.source(<span class="hljs-built_in">new</span> SearchSourceBuilder().query(QueryBuilders.matchAllQuery()));<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="条件查询-1"><a href="#条件查询-1" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"> <span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br><br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">2.</span>条件查询<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        request.source(<span class="hljs-built_in">new</span> SearchSourceBuilder().query(QueryBuilders.termQuery(&quot;age&quot;, &quot;30&quot;)));<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br><br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">3.</span>分页查询<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder().query(QueryBuilders.matchAllQuery());<br>        builder.<span class="hljs-keyword">from</span>(<span class="hljs-number">0</span>);<br>        builder.size(<span class="hljs-number">2</span>);<br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查询排序"><a href="#查询排序" class="headerlink" title="查询排序"></a>查询排序</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.sort.SortOrder;<br><br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br><br>        // <span class="hljs-number">4.</span>查询排序<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder().query(QueryBuilders.matchAllQuery());<br>        builder.sort(&quot;age&quot;, SortOrder.<span class="hljs-keyword">DESC</span>);<br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="过滤字段"><a href="#过滤字段" class="headerlink" title="过滤字段"></a>过滤字段</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.sort.SortOrder;<br><br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">5.</span>过滤字段<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder().query(QueryBuilders.matchAllQuery());<br>        String[] includes = &#123;&#125;;<br>        String[] excludes = &#123;&quot;sex&quot;&#125;;<br>        <span class="hljs-comment">/*String[] includes = &#123;&quot;name&quot;&#125;;</span><br><span class="hljs-comment">        String[] excludes = &#123;&#125;;*/</span><br>        builder.fetchSource(includes, excludes);<br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.BoolQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.sort.SortOrder;<br><br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">6.</span>组合查询<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder().query(QueryBuilders.matchAllQuery());<br>        BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();<br>//        boolQueryBuilder.must(QueryBuilders.matchQuery(&quot;age&quot;, <span class="hljs-number">23</span>));<br>//        boolQueryBuilder.must(QueryBuilders.matchQuery(&quot;sex&quot;, &quot;男&quot;));<br>//        boolQueryBuilder.mustNot(QueryBuilders.matchQuery(&quot;sex&quot;, &quot;男&quot;));<br>        boolQueryBuilder.should(QueryBuilders.matchQuery(&quot;age&quot;, <span class="hljs-number">20</span>));<br>        boolQueryBuilder.should(QueryBuilders.matchQuery(&quot;age&quot;, <span class="hljs-number">23</span>));<br><br>        builder.query(boolQueryBuilder);<br><br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.BoolQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.RangeQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.sort.SortOrder;<br><br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">7.</span>范围查询<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder();<br>        RangeQueryBuilder rangeQuery = QueryBuilders.rangeQuery(&quot;age&quot;);<br><br>        rangeQuery.gte(<span class="hljs-number">20</span>);<br>        rangeQuery.lt(<span class="hljs-number">24</span>);<br><br>        builder.query(rangeQuery);<br><br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="高亮查询"><a href="#高亮查询" class="headerlink" title="高亮查询"></a>高亮查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"> <span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.common.unit.Fuzziness;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.BoolQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.RangeQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.TermQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.<span class="hljs-keyword">fetch</span>.subphase.highlight.HighlightBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.sort.SortOrder;<br><br> <span class="hljs-keyword">import</span> javax.swing.text.Highlighter;<br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">9.</span>高亮查询<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder();<br>        TermQueryBuilder termQueryBuilder =<br>                QueryBuilders.termQuery(&quot;name&quot;, &quot;zhangsan&quot;);<br><br>        HighlightBuilder highlightBuilder = <span class="hljs-built_in">new</span> HighlightBuilder();<br>        highlightBuilder.preTags(&quot;&lt;font color=&#x27;red&#x27;&gt;&quot;);<br>        highlightBuilder.postTags(&quot;&lt;font&gt;&quot;);<br>        highlightBuilder.field(&quot;name&quot;);<br><br>        builder.highlighter(highlightBuilder);<br>        builder.query(termQueryBuilder);<br><br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="聚合查询-1"><a href="#聚合查询-1" class="headerlink" title="聚合查询"></a>聚合查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.common.unit.Fuzziness;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.BoolQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.RangeQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.TermQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.aggregations.AggregationBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.aggregations.AggregationBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.<span class="hljs-keyword">fetch</span>.subphase.highlight.HighlightBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.sort.SortOrder;<br><br> <span class="hljs-keyword">import</span> javax.swing.text.Highlighter;<br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">10.</span>聚合查询<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder();<br>        AggregationBuilder aggregationBuilder = AggregationBuilders.max(&quot;maxAge&quot;).field(&quot;age&quot;);<br>        builder.aggregation(aggregationBuilder);<br><br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">get</span>.GetResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchRequest;<br> <span class="hljs-keyword">import</span> org.elasticsearch.action.<span class="hljs-keyword">search</span>.SearchResponse;<br> <span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br> <span class="hljs-keyword">import</span> org.elasticsearch.common.unit.Fuzziness;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.BoolQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.QueryBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.RangeQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">index</span>.query.TermQueryBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHit;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.SearchHits;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.aggregations.AggregationBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.aggregations.AggregationBuilders;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.builder.SearchSourceBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.<span class="hljs-keyword">fetch</span>.subphase.highlight.HighlightBuilder;<br> <span class="hljs-keyword">import</span> org.elasticsearch.<span class="hljs-keyword">search</span>.sort.SortOrder;<br><br> <span class="hljs-keyword">import</span> javax.swing.text.Highlighter;<br> <span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> ESTest_Doc_Query &#123;<br>    <span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) throws IOException &#123;<br>        RestHighLevelClient esClient = <span class="hljs-built_in">new</span> RestHighLevelClient(<br>                RestClient.builder(<span class="hljs-built_in">new</span> HttpHost(&quot;localhost&quot;, <span class="hljs-number">9200</span>, &quot;http&quot;))<br>        );<br><br>        // <span class="hljs-number">11.</span>分组查询<br>        SearchRequest request = <span class="hljs-built_in">new</span> SearchRequest();<br>        request.indices(&quot;user&quot;);<br><br>        SearchSourceBuilder builder = <span class="hljs-built_in">new</span> SearchSourceBuilder();<br>        AggregationBuilder aggregationBuilder = AggregationBuilders.terms(&quot;ageGroup&quot;).field(&quot;age&quot;);<br>        builder.aggregation(aggregationBuilder);<br><br>        request.source(builder);<br><br>        SearchResponse response = esClient.<span class="hljs-keyword">search</span>(request, RequestOptions.<span class="hljs-keyword">DEFAULT</span>);<br><br>        SearchHits hits = response.getHits();<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hits.getHits());<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(response.getTook());<br>        <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>            <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(hit.getSourceAsString());<br>        &#125;<br><br>        esClient.<span class="hljs-keyword">close</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="windows-搭建集群"><a href="#windows-搭建集群" class="headerlink" title="windows 搭建集群"></a>windows 搭建集群</h2><p><img src="http://cdn.xiamu.icu//FnKvpH7o-mqQ45uYOBJydPx5xkC0.png"><br>node-1001&#x2F;config&#x2F;elasticsearch.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ======================== Elasticsearch Configuration =========================</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> Elasticsearch comes with reasonable defaults for most settings.</span><br><span class="hljs-comment">#       Before you set out to tweak and tune the configuration, make sure you</span><br><span class="hljs-comment">#       understand what are you trying to accomplish and the consequences.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The primary way of configuring a node is via this file. This template lists</span><br><span class="hljs-comment"># the most important settings you may want to configure for a production cluster.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Please consult the documentation for further information on configuration options:</span><br><span class="hljs-comment"># https://www.elastic.co/guide/en/elasticsearch/reference/index.html</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Cluster -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use a descriptive name for your cluster:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">cluster.name:</span> <span class="hljs-string">my-application</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ------------------------------------ Node ------------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use a descriptive name for the node:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">node.name:</span> <span class="hljs-string">node-1001</span><br><span class="hljs-attr">node.master:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">node.data:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Add custom attributes to the node:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#node.attr.rack: r1</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ----------------------------------- Paths ------------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#path.data: /path/to/data</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Path to log files:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#path.logs: /path/to/logs</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ----------------------------------- Memory -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Lock the memory on startup:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#bootstrap.memory_lock: true</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Make sure that the heap size is set to about half the memory available</span><br><span class="hljs-comment"># on the system and that the owner of the process is allowed to use this</span><br><span class="hljs-comment"># limit.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Network -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">network.host:</span> <span class="hljs-string">localhost</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Set a custom port for HTTP:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">http.port:</span> <span class="hljs-number">1001</span><br><span class="hljs-attr">transport.tcp.port:</span> <span class="hljs-number">9301</span><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the network module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># --------------------------------- Discovery ----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Pass an initial list of hosts to perform discovery when this node is started:</span><br><span class="hljs-comment"># The default list of hosts is [&quot;127.0.0.1&quot;, &quot;[::1]&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#discovery.seed_hosts: [&quot;host1&quot;, &quot;host2&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Bootstrap the cluster using an initial set of master-eligible nodes:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#cluster.initial_master_nodes: [&quot;node-1&quot;, &quot;node-2&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the discovery and cluster formation module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Gateway -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Block initial recovery after a full cluster restart until N nodes are started:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#gateway.recover_after_nodes: 3</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the gateway module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Various -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Require explicit names when deleting indices:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#action.destructive_requires_name: true</span><br><span class="hljs-attr">http.cors.enabled:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">http.cors.allow-origin:</span> <span class="hljs-string">&quot;*&quot;</span><br><br><br></code></pre></td></tr></table></figure><p>node-1002&#x2F;config&#x2F;elasticsearch.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ======================== Elasticsearch Configuration =========================</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> Elasticsearch comes with reasonable defaults for most settings.</span><br><span class="hljs-comment">#       Before you set out to tweak and tune the configuration, make sure you</span><br><span class="hljs-comment">#       understand what are you trying to accomplish and the consequences.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The primary way of configuring a node is via this file. This template lists</span><br><span class="hljs-comment"># the most important settings you may want to configure for a production cluster.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Please consult the documentation for further information on configuration options:</span><br><span class="hljs-comment"># https://www.elastic.co/guide/en/elasticsearch/reference/index.html</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Cluster -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use a descriptive name for your cluster:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">cluster.name:</span> <span class="hljs-string">my-application</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ------------------------------------ Node ------------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use a descriptive name for the node:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">node.name:</span> <span class="hljs-string">node-1002</span><br><span class="hljs-attr">node.master:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">node.data:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Add custom attributes to the node:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#node.attr.rack: r1</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ----------------------------------- Paths ------------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#path.data: /path/to/data</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Path to log files:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#path.logs: /path/to/logs</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ----------------------------------- Memory -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Lock the memory on startup:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#bootstrap.memory_lock: true</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Make sure that the heap size is set to about half the memory available</span><br><span class="hljs-comment"># on the system and that the owner of the process is allowed to use this</span><br><span class="hljs-comment"># limit.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Network -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">network.host:</span> <span class="hljs-string">localhost</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Set a custom port for HTTP:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">http.port:</span> <span class="hljs-number">1002</span><br><span class="hljs-attr">transport.tcp.port:</span> <span class="hljs-number">9302</span><br><br><span class="hljs-attr">discovery.seed_hosts:</span> [<span class="hljs-string">&quot;localhost:9301&quot;</span>]<br><span class="hljs-attr">discovery.zen.fd.ping_timeout:</span> <span class="hljs-string">1m</span><br><span class="hljs-attr">discovery.zen.fd.ping_retries:</span> <span class="hljs-number">5</span><br><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the network module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># --------------------------------- Discovery ----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Pass an initial list of hosts to perform discovery when this node is started:</span><br><span class="hljs-comment"># The default list of hosts is [&quot;127.0.0.1&quot;, &quot;[::1]&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#discovery.seed_hosts: [&quot;host1&quot;, &quot;host2&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Bootstrap the cluster using an initial set of master-eligible nodes:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#cluster.initial_master_nodes: [&quot;node-1&quot;, &quot;node-2&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the discovery and cluster formation module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Gateway -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Block initial recovery after a full cluster restart until N nodes are started:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#gateway.recover_after_nodes: 3</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the gateway module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Various -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Require explicit names when deleting indices:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#action.destructive_requires_name: true</span><br><span class="hljs-attr">http.cors.enabled:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">http.cors.allow-origin:</span> <span class="hljs-string">&quot;*&quot;</span><br><br><br></code></pre></td></tr></table></figure><p>node-1003&#x2F;config&#x2F;elasticsearch.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ======================== Elasticsearch Configuration =========================</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> Elasticsearch comes with reasonable defaults for most settings.</span><br><span class="hljs-comment">#       Before you set out to tweak and tune the configuration, make sure you</span><br><span class="hljs-comment">#       understand what are you trying to accomplish and the consequences.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The primary way of configuring a node is via this file. This template lists</span><br><span class="hljs-comment"># the most important settings you may want to configure for a production cluster.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Please consult the documentation for further information on configuration options:</span><br><span class="hljs-comment"># https://www.elastic.co/guide/en/elasticsearch/reference/index.html</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Cluster -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use a descriptive name for your cluster:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">cluster.name:</span> <span class="hljs-string">my-application</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ------------------------------------ Node ------------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Use a descriptive name for the node:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">node.name:</span> <span class="hljs-string">node-1003</span><br><span class="hljs-attr">node.master:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">node.data:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Add custom attributes to the node:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#node.attr.rack: r1</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ----------------------------------- Paths ------------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#path.data: /path/to/data</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Path to log files:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#path.logs: /path/to/logs</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ----------------------------------- Memory -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Lock the memory on startup:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#bootstrap.memory_lock: true</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Make sure that the heap size is set to about half the memory available</span><br><span class="hljs-comment"># on the system and that the owner of the process is allowed to use this</span><br><span class="hljs-comment"># limit.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Network -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">network.host:</span> <span class="hljs-string">localhost</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Set a custom port for HTTP:</span><br><span class="hljs-comment">#</span><br><span class="hljs-attr">http.port:</span> <span class="hljs-number">1003</span><br><span class="hljs-attr">transport.tcp.port:</span> <span class="hljs-number">9303</span><br><br><span class="hljs-attr">discovery.seed_hosts:</span> [<span class="hljs-string">&quot;localhost:9301&quot;</span>, <span class="hljs-string">&quot;localhost:9302&quot;</span>]<br><span class="hljs-attr">discovery.zen.fd.ping_timeout:</span> <span class="hljs-string">1m</span><br><span class="hljs-attr">discovery.zen.fd.ping_retries:</span> <span class="hljs-number">5</span><br><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the network module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># --------------------------------- Discovery ----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Pass an initial list of hosts to perform discovery when this node is started:</span><br><span class="hljs-comment"># The default list of hosts is [&quot;127.0.0.1&quot;, &quot;[::1]&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#discovery.seed_hosts: [&quot;host1&quot;, &quot;host2&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Bootstrap the cluster using an initial set of master-eligible nodes:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#cluster.initial_master_nodes: [&quot;node-1&quot;, &quot;node-2&quot;]</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the discovery and cluster formation module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Gateway -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Block initial recovery after a full cluster restart until N nodes are started:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#gateway.recover_after_nodes: 3</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># For more information, consult the gateway module documentation.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># ---------------------------------- Various -----------------------------------</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Require explicit names when deleting indices:</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#action.destructive_requires_name: true</span><br><span class="hljs-attr">http.cors.enabled:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">http.cors.allow-origin:</span> <span class="hljs-string">&quot;*&quot;</span><br><br><br></code></pre></td></tr></table></figure><h2 id="linux-单点部署"><a href="#linux-单点部署" class="headerlink" title="linux 单点部署"></a>linux 单点部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@xiamu ~]<span class="hljs-comment"># cd /opt/es/</span><br>[root@xiamu es]<span class="hljs-comment"># ls</span><br>elasticsearch-7.8.0-linux-x86_64.tar.gz<br><span class="hljs-comment"># 上传es压缩包</span><br><br><span class="hljs-comment"># 解压es</span><br>[root@xiamu es]<span class="hljs-comment"># tar -zxvf elasticsearch-7.8.0-linux-x86_64.tar.gz</span><br><br><span class="hljs-comment"># 因为安全问题，Elasticsearch 不允许 root 用户直接运行，所以要创建新用户，在 root 用</span><br>户中创建新用户<br><span class="hljs-comment"># 新增 es 用户</span><br>[root@xiamu es]<span class="hljs-comment"># useradd es</span><br><span class="hljs-comment"># 为 es 用户设置密码</span><br>[root@xiamu es]<span class="hljs-comment"># passwd es</span><br><span class="hljs-comment"># 设置文件所有者</span><br>[root@xiamu es]<span class="hljs-comment"># chown -R es:es /opt/es/</span><br><br>userdel -r es <span class="hljs-comment">#如果错了，可以删除再加</span><br><br>修改/opt/module/es/config/elasticsearch.yml 文件<br><span class="hljs-comment"># 加入如下配置</span><br>cluster.name: elasticsearch<br>node.name: node-1<br>network.host: 0.0.0.0<br>http.port: 9200<br>cluster.initial_master_nodes: [<span class="hljs-string">&quot;node-1&quot;</span>]<br><br>[root@xiamu es]<span class="hljs-comment"># cd ./elasticsearch-7.8.0/</span><br>[root@xiamu elasticsearch-7.8.0]<span class="hljs-comment"># vim ./config/elasticsearch.yml</span><br><span class="hljs-comment"># 文件末尾加入如下配置</span><br>cluster.name: elasticsearch<br>node.name: node-1<br>network.host: 0.0.0.0<br>http.port: 9200<br>cluster.initial_master_nodes: [<span class="hljs-string">&quot;node-1&quot;</span>]<br><br>[root@xiamu elasticsearch-7.8.0]<span class="hljs-comment"># vim /etc/security/limits.conf</span><br><span class="hljs-comment"># 在文件末尾中增加下面内容</span><br><span class="hljs-comment"># 每个进程可以打开的文件数的限制</span><br>es soft nofile 65536<br>es hard nofile 65536<br><br>[root@xiamu elasticsearch-7.8.0]<span class="hljs-comment"># vim /etc/security/limits.d/20-nproc.conf</span><br><span class="hljs-comment"># 在文件末尾中增加下面内容</span><br><span class="hljs-comment"># 每个进程可以打开的文件数的限制</span><br>es soft nofile 65536<br>es hard nofile 65536<br><br><span class="hljs-comment"># 操作系统级别对每个用户创建的进程数的限制</span><br>* hard <span class="hljs-built_in">nproc</span> 4096<br><span class="hljs-comment"># 注：* 带表 Linux 所有用户名称</span><br><br>[root@xiamu elasticsearch-7.8.0]<span class="hljs-comment"># vim /etc/sysctl.conf</span><br><span class="hljs-comment"># 在文件中增加下面内容</span><br><span class="hljs-comment"># 一个进程可以拥有的 VMA(虚拟内存区域)的数量,默认值为 65536</span><br>vm.max_map_count=655360<br><br><span class="hljs-comment"># 重新加载</span><br>[root@xiamu elasticsearch-7.8.0]<span class="hljs-comment"># sysctl -p</span><br><br><span class="hljs-comment"># 切换用户</span><br>[root@xiamu ~]<span class="hljs-comment"># su es</span><br>[es@xiamu root]$ <span class="hljs-built_in">cd</span> /opt/es/elasticsearch-7.8.0<br><br><br></code></pre></td></tr></table></figure><h2 id="linux-集群部署"><a href="#linux-集群部署" class="headerlink" title="linux 集群部署"></a>linux 集群部署</h2><p>待更新…</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>ElasticSearch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VueElementUI</title>
    <link href="/Vue/VueElementUI/"/>
    <url>/Vue/VueElementUI/</url>
    
    <content type="html"><![CDATA[<h2 id="表单中存在输入框回车提交表单"><a href="#表单中存在输入框回车提交表单" class="headerlink" title="表单中存在输入框回车提交表单"></a>表单中存在输入框回车提交表单</h2><p>只需要在 el-form 中加上@keyup.enter.native&#x3D;”submit()”就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;el-form ref=&quot;form&quot; label-width=&quot;80px&quot; @keyup.enter.native=&quot;submit()&quot;&gt;<br>  &lt;el-form-item label=&quot;姓名&quot;&gt;&lt;/el-form-item&gt;<br>  &lt;el-form-item label=&quot;学号&quot;&gt;&lt;/el-form-item&gt;<br>  &lt;el-form-item label=&quot;性别&quot;&gt;&lt;/el-form-item&gt;<br>&lt;/el-form&gt;<br></code></pre></td></tr></table></figure><p>label-width&#x3D;”80px” 表单域标签的宽度，作为 Form 直接子元素的 form-item 会继承该值</p><h2 id="表单的自动填充"><a href="#表单的自动填充" class="headerlink" title="表单的自动填充"></a>表单的自动填充</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- autocomplete 属性规定表单是否应该启用自动填充功能 --&gt;<br>&lt;el-input autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;<br></code></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a><template scope="scope"></h2><p>通过 template 标签中的 scope 获取当前行的值, 并且也可以传递给函数调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;el-table-column type=&quot;&quot; label=&quot;序号&quot; width=&quot;200&quot;&gt;<br>  &lt;template scope=&quot;scope&quot;&gt;<br>    &#123;&#123; (current - 1) * limit + scope.$index + 1 &#125;&#125;<br>  &lt;/template&gt;<br>&lt;/el-table-column&gt;<br>&lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot; prop=&quot;id&quot;&gt;<br>  &lt;template scope=&quot;prop&quot;&gt;<br>    &lt;el-button<br>      type=&quot;primary&quot;<br>      icon=&quot;el-icon-edit&quot;<br>      size=&quot;mini&quot;<br>      @click=&quot;edit(prop.row.id)&quot;<br>    &gt;&lt;/el-button&gt;<br>    &lt;el-button<br>      type=&quot;danger&quot;<br>      icon=&quot;el-icon-delete&quot;<br>      size=&quot;mini&quot;<br>      @click=&quot;deleteById(prop.row.id)&quot;<br>    &gt;&lt;/el-button&gt;<br>  &lt;/template&gt;<br>&lt;/el-table-column&gt;<br></code></pre></td></tr></table></figure><h2 id="icon-的使用"><a href="#icon-的使用" class="headerlink" title="icon 的使用"></a>icon 的使用</h2><p>可以在组件中使用 class 属性, 或者直接在组件使用 icon 属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-edit&quot; size=&quot;mini&quot;&gt;&lt;/el-button&gt;<br>&lt;el-button type=&quot;danger&quot; class=&quot;el-icon-delete&quot; size=&quot;mini&quot;&gt;&lt;/el-button&gt;<br></code></pre></td></tr></table></figure><p>效果图:<br><img src="http://cdn.xiamu.icu//Fvi5e7swjf8hZg7ffVInyvcgSm7m.png"></p><h2 id="nextTick"><a href="#nextTick" class="headerlink" title="nextTick"></a>nextTick</h2><p>把回调推迟到页面的 DOM 渲染完成之后再执行</p><blockquote><p>Vue.nextTick( [callback, context] )<br>{Function} [callback] {Object} [context]<br>Defer the callback to be executed after the next DOM update cycle. Use it immediately after you’ve changed some data to wait for the DOM update.</p></blockquote><p>当前页面并没有显示 dialog<br><img src="http://cdn.xiamu.icu//Fq1pMX133pfOghFPTv4xSQ35yEH6.png"><br>点击添加按钮, 显示 dialog, 但是用户名没有光标自定放在上面的效果<br><img src="http://cdn.xiamu.icu//FqD2AchcEaMrPHhanjCdWwYQfmwW.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;el-dialog title=&quot;添加/修改&quot; :visible.sync=&quot;dialogFormVisible&quot;&gt;<br>  &lt;el-form label-width=&quot;80px&quot; @keyup.enter.native=&quot;saveOrUpdateUser&quot;&gt;<br>    &lt;el-form-item label=&quot;用户名&quot;&gt;<br>      &lt;el-input v-model=&quot;userObj.username&quot; ref=&quot;inputFirst&quot;&gt;&lt;/el-input&gt;<br>  &lt;/el-form&gt;<br>&lt;/el-dialog&gt;<br><br>addUser() &#123; this.userObj = &#123;&#125;; this.dialogFormVisible = true; //<br>当弹窗在页面渲染完成之后, 才会执行这里面的函数 this.$nextTick(() =&gt; &#123;<br>this.$refs.inputFirst.focus(); &#125;); &#125;,<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Frkbiuar8pBoJTvumU4Dj7WcGB-n.png"></p>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue-CLI</title>
    <link href="/Vue/Vue-CLI/"/>
    <url>/Vue/Vue-CLI/</url>
    
    <content type="html"><![CDATA[<h2 id="创建脚手架"><a href="#创建脚手架" class="headerlink" title="创建脚手架"></a>创建脚手架</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1.</span> 如出现下载缓慢请配置 npm 淘宝镜像：<br>npm config <span class="hljs-keyword">set</span> registry https:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>脚手架官网<a href="https://cli.vuejs.org/zh/">https://cli.vuejs.org/zh/</a><br>具体步骤:<br>第一步（仅第一次执行）：全局安装@vue&#x2F;cli。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">npm install <span class="hljs-operator">-</span>g <span class="hljs-variable">@vue</span><span class="hljs-operator">/</span>cli<br></code></pre></td></tr></table></figure><p>第二步：切换到你要创建项目的目录，然后使用命令创建项目</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">vue <span class="hljs-keyword">create</span> xxxx<br></code></pre></td></tr></table></figure><p>第三步：启动项目</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">npm run serve<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fm3qVRjLCTGc2B4gWx-Q4Gn6obIN.png"><br>访问<a href="http://localhost:8080/">http://localhost:8080/</a>, 可以看见脚手架为我们默认创建一个 HelloWorld 组件<br><img src="http://cdn.xiamu.icu//FuJydMREZN8xmlI3vLNNaufnQAY5.png"></p><p>脚手架文件结构</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">├── node_modules<br>├── public<br>│   ├── favicon.<span class="hljs-property">ico</span>: 页签图标<br>│   └── index.<span class="hljs-property">html</span>: 主页面<br>├── src<br>│   ├── <span class="hljs-attr">assets</span>: 存放静态资源<br>│   │   └── logo.<span class="hljs-property">png</span><br>│   │── <span class="hljs-attr">component</span>: 存放组件<br>│   │   └── <span class="hljs-title class_">HelloWorld</span>.<span class="hljs-property">vue</span><br>│   │── <span class="hljs-title class_">App</span>.<span class="hljs-property">vue</span>: 汇总所有组件<br>│   │── main.<span class="hljs-property">js</span>: 入口文件<br>├── .<span class="hljs-property">gitignore</span>: git版本管制忽略的配置<br>├── babel.<span class="hljs-property">config</span>.<span class="hljs-property">js</span>: babel的配置文件<br>├── package.<span class="hljs-property">json</span>: 应用包配置文件<br>├── <span class="hljs-variable constant_">README</span>.<span class="hljs-property">md</span>: 应用描述文件<br>├── package-lock.<span class="hljs-property">json</span>：包版本控制文件<br></code></pre></td></tr></table></figure><h2 id="脚手架运行项目的报错"><a href="#脚手架运行项目的报错" class="headerlink" title="脚手架运行项目的报错"></a>脚手架运行项目的报错</h2><p>xxx should always be multi-word vue&#x2F;multi-word-component-names 报错<br>修改 vue.config.js 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; defineConfig &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@vue/cli-service&quot;</span>);<br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">transpileDependencies</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">lintOnSave</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 关闭语法检查</span><br>&#125;);<br></code></pre></td></tr></table></figure><p>如果编写了代码, 左侧行数会出现一个红色小箭头, 这是 git 在记录<br><img src="http://cdn.xiamu.icu//FtYMeCzhXluCOq-ERGMnhB5_VQ29.png"><img src="http://cdn.xiamu.icu//FuVbh3VjUr6Ppg1MJk8G5eyZfeyo.png"><br>可以按 Ctrl+, 打开设置, 搜索 git:Enabled, 关闭 Git<br><img src="http://cdn.xiamu.icu//Flwk2uLUGWrpRA3WdYhnIVVNhVzW.png"></p><h2 id="部署自己的项目到脚手架"><a href="#部署自己的项目到脚手架" class="headerlink" title="部署自己的项目到脚手架"></a>部署自己的项目到脚手架</h2><p><img src="http://cdn.xiamu.icu//FqY1hF_NE47kSXNRtact-6zQc4vs.png"><br>School.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2&gt;学校名称: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>        &lt;button @click=&quot;showName&quot;&gt;点我显示名称&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    showName() &#123;<br>      alert(this.name);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2&gt;学生姓名: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生年龄: &#123;&#123; age &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Student&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;肉豆蔻&quot;,<br>      age: 18,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;    &lt;School&gt;&lt;/School&gt;     &lt;Student&gt;&lt;/Student&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>import School from &quot;./components/School.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Student,<br>    School,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* </span><br><span class="hljs-comment">该文件是整个项目的入口文件</span><br><span class="hljs-comment">*/</span><br><span class="hljs-comment">//引入Vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">//引入App组件, 它是所有组件的父组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-comment">//关闭Vue的生产提示</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">/* </span><br><span class="hljs-comment">关于不同版本的Vue：</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">1.vue.js与vue.runtime.xxx.js的区别：</span><br><span class="hljs-comment">(1).vue.js是完整版的Vue，包含：核心功能+模板解析器。</span><br><span class="hljs-comment">(2).vue.runtime.xxx.js是运行版的Vue，只包含：核心功能；没有模板解析器。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">2.因为vue.runtime.xxx.js没有模板解析器，所以不能使用template配置项，需要使用</span><br><span class="hljs-comment">render函数接收到的createElement函数去指定具体内容。</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">//创建vm</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-comment">//</span><br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br><br>  <span class="hljs-comment">// render(createElement) &#123;</span><br>  <span class="hljs-comment">//   return createElement(&#x27;h1&#x27;, &#x27;你好啊&#x27;)</span><br>  <span class="hljs-comment">// &#125;</span><br><br>  <span class="hljs-comment">// template: `</span><br>  <span class="hljs-comment">// &lt;h1&gt;你好啊&lt;/h1&gt;</span><br>  <span class="hljs-comment">// `,</span><br>  <span class="hljs-comment">// components: &#123;</span><br>  <span class="hljs-comment">//   app</span><br>  <span class="hljs-comment">// &#125;</span><br>&#125;);<br></code></pre></td></tr></table></figure><p>import Vue from ‘vue’中引入的是 vue 文件夹, 它是由 vue 文件夹中的 module 配置项来决定导入的是哪一个 vue.js<br>runtime.js 相比于 vue.js, 精简了模板解析器, 模板解析器也不会在 webpack 打包的时候被打包进去<br><img src="http://cdn.xiamu.icu//FlLO83rqx3lhQUEGaWTt9Wpj2GfA.png"></p><p>关于不同版本的 Vue</p><ol><li>vue.js 与 vue.runtime.xxx.js 的区别：<ol><li>vue.js 是完整版的 Vue，包含：核心功能 + 模板解析器。</li><li>vue.runtime.xxx.js 是运行版的 Vue，只包含：核心功能；没有模板解析器。</li></ol></li><li>因为 vue.runtime.xxx.js 没有模板解析器，所以不能使用 template 这个配置项，需要使用 render 函数接收到的 createElement 函数去指定具体内容。</li></ol><h2 id="render-函数"><a href="#render-函数" class="headerlink" title="render 函数"></a>render 函数</h2><p>使用 render 渲染函数就可以在 runtime.js 的环境中解析模板, template 在 runtime.js 的环境中没法解析模板, 因为 runtime 剔除了模板引擎</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// render: h =&gt; h(App),</span><br><br><span class="hljs-comment">// render(createElement) &#123;</span><br><span class="hljs-comment">//   return createElement(&#x27;h1&#x27;, &#x27;你好啊&#x27;)</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">// render: function(createElement) &#123;</span><br><span class="hljs-comment">//   return createElement(&#x27;h1&#x27;, &#x27;你好啊&#x27;)</span><br><span class="hljs-comment">// &#125;</span><br><br><span class="hljs-comment">// render:(createElement) =&gt; createElement(&#x27;h1&#x27;, &#x27;你好啊&#x27;)</span><br><br><span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">a</span>) =&gt;</span> <span class="hljs-title function_">a</span>(<span class="hljs-string">&quot;h1&quot;</span>, <span class="hljs-string">&quot;你好啊&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="修改默认配置-vue-config-js-配置文件"><a href="#修改默认配置-vue-config-js-配置文件" class="headerlink" title="修改默认配置(vue.config.js 配置文件)"></a>修改默认配置(vue.config.js 配置文件)</h2><p>vue.config.js<br>在 pages 选项中配置的 entry 可以指明 main.js 作为程序的入口, 当然可以设置成其他的, 一般保持默认既可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> &#123; defineConfig &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;@vue/cli-service&quot;</span>);<br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">pages</span>: &#123;<br>    <span class="hljs-attr">index</span>: &#123;<br>      <span class="hljs-comment">// 配置入口</span><br>      <span class="hljs-attr">entry</span>: <span class="hljs-string">&quot;src/main.js&quot;</span>,<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">transpileDependencies</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">lintOnSave</span>: <span class="hljs-literal">false</span>,<br>&#125;);<br></code></pre></td></tr></table></figure><ol><li>使用 vue inspect &gt; output.js 可以查看到 Vue 脚手架的默认配置。</li><li>使用 vue.config.js 可以对脚手架进行个性化定制，详情见：<a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol><h2 id="ref-属性"><a href="#ref-属性" class="headerlink" title="ref 属性"></a>ref 属性</h2><ol><li>被用来给元素或子组件注册引用信息（id 的替代者）</li><li>应用在 html 标签上获取的是真实 DOM 元素，应用在组件标签上是组件实例对象（vc）</li><li>使用方式：<ol><li>打标识：<h1 ref="xxx">…..</h1> 或 <School ref="xxx"></School></li><li>获取：this.$refs.xxx</li></ol></li></ol><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;school&quot;&gt;<br>       <br>    &lt;h2&gt;学校名称：&#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址：&#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷&quot;,<br>      address: &quot;北京·昌平&quot;,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>  .school&#123;<br>    background-color: gray;<br>  &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h1 v-text=&quot;msg&quot; ref=&quot;title&quot;&gt;&lt;/h1&gt;<br>        &lt;button ref=&quot;btn&quot; @click=&quot;showDOM&quot;&gt;点我输出上方的DOM元素&lt;/button&gt;    <br>    &lt;School ref=&quot;sch&quot; /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>//引入School组件<br>import School from &quot;./components/School&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123; School &#125;,<br>  data() &#123;<br>    return &#123;<br>      msg: &quot;欢迎学习Vue！&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    showDOM() &#123;<br>      console.log(this.$refs.title); //真实DOM元素<br>      console.log(this.$refs.btn); //真实DOM元素<br>      console.log(this.$refs.sch); //School组件的实例对象（vc）<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="props-配置"><a href="#props-配置" class="headerlink" title="props 配置"></a>props 配置</h2><ol><li>功能：让组件接收外部传过来的数据</li><li>传递数据：<code>&lt;Demo name=&quot;xxx&quot;/&gt;</code></li><li>接收数据：</li><li>第一种方式（只接收）：<code>props:[&#39;name&#39;]</code></li><li>第二种方式（限制类型）：<code>props:&#123;name:String&#125;</code></li><li>第三种方式（限制类型、限制必要性、指定默认值）：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">props</span>:&#123;<br><span class="hljs-attr">name</span>:&#123;<br><span class="hljs-attr">type</span>:<span class="hljs-title class_">String</span>, <span class="hljs-comment">//类型</span><br><span class="hljs-attr">required</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//必要性</span><br><span class="hljs-attr">default</span>:<span class="hljs-string">&#x27;老王&#x27;</span> <span class="hljs-comment">//默认值</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>备注：props 是只读的，Vue 底层会监测你对 props 的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制 props 的内容到 data 中一份，然后去修改 data 中的数据。</p></blockquote><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;<br>       <br>    &lt;h2&gt;学生姓名: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生性别: &#123;&#123; sex &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生年龄: &#123;&#123; MyAge + 1 &#125;&#125;&lt;/h2&gt;<br>        &lt;button @click=&quot;updateAge&quot;&gt;点我修改年龄&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Student&quot;,<br>  data() &#123;<br>    return &#123;<br>      msg: &quot;我是一个尚硅谷的学生&quot;,<br>      MyAge: this.age,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    updateAge() &#123;<br>      this.MyAge++;<br>    &#125;,<br>  &#125;, //简单声明接收 // props: [&#x27;name&#x27;, &#x27;sex&#x27;, &#x27;age&#x27;] //接收的同时对数据进行类型限制 // props: &#123; //   name: String, //   sex: String, //   age: Number // &#125; //接收的同时对数据：进行类型限制+默认值的指定+必要性的限制<br>  props: &#123;<br>    name: &#123;<br>      type: String, //name的类型是字符串<br>      required: true, //name是必要的<br>    &#125;,<br>    sex: &#123;<br>      type: String,<br>      default: &quot;男&quot;, //默认值<br>    &#125;,<br>    age: &#123;<br>      type: Number,<br>      default: 20,<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;    &lt;Student :age=&quot;18&quot; name=&quot;尚硅谷&quot; sex=&quot;男&quot; /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Student,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><h2 id="mixin-混入"><a href="#mixin-混入" class="headerlink" title="mixin 混入"></a>mixin 混入</h2><ol><li>功能：可以把多个组件共用的配置提取成一个混入对象</li><li>使用方式：<br>第一步定义混合：</li></ol><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nim">&#123;<br>    data()<span class="hljs-meta">&#123;....&#125;</span>,<br>    methods:<span class="hljs-meta">&#123;....&#125;</span><br>    ....<br>&#125;<br></code></pre></td></tr></table></figure><p>第二步使用混入：<br>全局混入：<code>Vue.mixin(xxx)</code><br>局部混入：<code>mixins:[&#39;xxx&#39;]</code><br>School.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2 @click=&quot;showName&quot;&gt;学校名称: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>// import &#123;mixin&#125; from &quot;../mixin&quot;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;, // mixins: [mixin]<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2 @click=&quot;showName&quot;&gt;学生姓名: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生性别: &#123;&#123; sex &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>// import &#123;mixin&#125; from &quot;../mixin&quot;<br>export default &#123;<br>  name: &quot;Student&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;张三&quot;,<br>      sex: &quot;男&quot;,<br>    &#125;;<br>  &#125;, // mixins: [mixin],<br>  mounted() &#123;<br>    // console.log(&quot;你好啊!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&quot;);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>        &lt;Student /&gt;    <br>    &lt;hr /&gt;<br>        &lt;School /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>import School from &quot;./components/School.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Student,<br>    School,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>mixin.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> mixin = &#123;<br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-title function_">showName</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>);<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// console.log(&#x27;你好啊！&#x27;)</span><br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> mixin2 = &#123;<br>  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">x</span>: <span class="hljs-number">999</span>,<br>      <span class="hljs-attr">y</span>: <span class="hljs-number">666</span>,<br>    &#125;;<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App&quot;</span>;<br><br><span class="hljs-keyword">import</span> &#123; mixin, mixin2 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./mixin&quot;</span>;<br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(mixin);<br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(mixin2);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ol><li>功能：用于增强 Vue</li><li>本质：包含 install 方法的一个对象，install 的第一个参数是 Vue，第二个以后的参数是插件使用者传递的数据。</li><li>定义插件：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript">对象.<span class="hljs-property">install</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">Vue, options</span>) &#123;<br>    <span class="hljs-comment">// 1. 添加全局过滤器</span><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(....)<br><br>    <span class="hljs-comment">// 2. 添加全局指令</span><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(....)<br><br>    <span class="hljs-comment">// 3. 配置全局混入(合)</span><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(....)<br><br>    <span class="hljs-comment">// 4. 添加实例方法</span><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$myMethod</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;...&#125;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$myProperty</span> = xxxx<br>&#125;<br></code></pre></td></tr></table></figure><ol start="4"><li>使用插件：<code>Vue.use()</code></li></ol><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2&gt;学生姓名: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生性别: &#123;&#123; sex &#125;&#125;&lt;/h2&gt;<br>            &lt;input type=&quot;text&quot; v-fbind:value=&quot;name&quot; /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Student&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;张三&quot;,<br>      sex: &quot;男&quot;,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>School.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2 @click=&quot;test&quot;&gt;学校名称: &#123;&#123; name | mySlice &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷atguigu&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    test() &#123;<br>      this.hello();<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>        &lt;Student /&gt;    <br>    &lt;hr /&gt;<br>        &lt;School /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>import School from &quot;./components/School.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Student,<br>    School,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> plugins <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./plugins&quot;</span>;<br><br><span class="hljs-comment">// 应用(使用)插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(plugins, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>&#125;);<br></code></pre></td></tr></table></figure><p>plugins.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">install</span>(<span class="hljs-params">Vue, x, y, z</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(x, y, z); <span class="hljs-comment">// 全局过滤器</span><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-string">&quot;mySlice&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) &#123;<br>      <span class="hljs-keyword">return</span> value.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>    &#125;); <span class="hljs-comment">//定义全局指令</span><br><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&quot;fbind&quot;</span>, &#123;<br>      <span class="hljs-comment">//指令与元素成功绑定时（一上来）</span><br>      <span class="hljs-title function_">bind</span>(<span class="hljs-params">element, binding</span>) &#123;<br>        element.<span class="hljs-property">value</span> = binding.<span class="hljs-property">value</span>;<br>      &#125;, <span class="hljs-comment">//指令所在元素被插入页面时</span><br>      <span class="hljs-title function_">inserted</span>(<span class="hljs-params">element, binding</span>) &#123;<br>        element.<span class="hljs-title function_">focus</span>();<br>      &#125;, <span class="hljs-comment">//指令所在的模板被重新解析时</span><br>      <span class="hljs-title function_">update</span>(<span class="hljs-params">element, binding</span>) &#123;<br>        element.<span class="hljs-property">value</span> = binding.<span class="hljs-property">value</span>;<br>      &#125;,<br>    &#125;); <span class="hljs-comment">//定义混入</span><br><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">mixin</span>(&#123;<br>      <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>          <span class="hljs-attr">x</span>: <span class="hljs-number">100</span>,<br>          <span class="hljs-attr">y</span>: <span class="hljs-number">200</span>,<br>        &#125;;<br>      &#125;,<br>    &#125;); <span class="hljs-comment">//给Vue原型上添加一个方法（vm和vc就都能用了）</span><br><br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">hello</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;你好啊&quot;</span>);<br>    &#125;;<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="scoped-样式"><a href="#scoped-样式" class="headerlink" title="scoped 样式"></a>scoped 样式</h2><ol><li>作用：让样式在局部生效，防止冲突。</li><li>写法：<code>&lt;style scoped&gt;</code></li></ol><p>School.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;demo&quot;&gt;<br>       <br>    &lt;h2 class=&quot;title&quot;&gt;学校名称: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷atguigu&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>  .demo &#123;<br>    background-color: lightpink;<br>  &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;demo&quot;&gt;<br>    &lt;h2 class=&quot;title&quot;&gt;学校名称: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>    &lt;h2 class=&quot;qwe&quot;&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷atguigu&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style lang=&quot;less&quot; scoped&gt;<br>.demo &#123;<br>  background-color: lightpink;<br>  .qwe &#123;<br>    font-size: 50px;<br>  &#125;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2 class=&quot;title&quot;&gt;标题&lt;/h2&gt;<br>        &lt;School /&gt;    <br>    &lt;hr /&gt;<br>        &lt;Student /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>import School from &quot;./components/School.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Student,<br>    School,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>  .title &#123;<br>    color: red;<br>  &#125;<br>&lt;/style&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>&#125;);<br></code></pre></td></tr></table></figure><p>在组件中的 style 标签中定义了 scoped, 会在使用的 class 类上加上随机的 id, 在选择器中配合 id 来选择, 用来解决 css 选择器重名的问题<br><img src="http://cdn.xiamu.icu//FhY45jbXhTpc14Igihiq6gAUlZ7h.png"><br>但是在 App.vue 组件中, 一般不用这个, 主要是 App 组件中写了样式, 就说明是很多组件都在使用的, 就不需要用 scoped 的</p><h3 id=""><a href="#" class="headerlink" title=""></a><style lang="less"></h3><p>Module not found: Error: Can’t resolve ‘less-loader’ in ‘E:\Code\Vue\vue_test’<br><img src="http://cdn.xiamu.icu//FsSKSQLOE9EoIiCnX4Bj4i9laztj.png"><br>PS E:\Code\Vue\vue_test&gt; npm i less-loader<br>只需要安装 less-loader 就行了<br>webpack 4 应该安装 less-loader7 版本的<br>PS E:\Code\Vue\vue_test&gt; npm i less-loader@7<br>webpack 5 可以安装 less-loader 最新版(11)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript">查看版本的最新版<br><span class="hljs-variable constant_">PS</span> <span class="hljs-attr">E</span>:\<span class="hljs-title class_">Code</span>\<span class="hljs-title class_">Vue</span>\vue_test&gt; npm view webpack versions<br>[<br>  <span class="hljs-string">&#x27;0.1.0&#x27;</span>,          <span class="hljs-string">&#x27;0.1.1&#x27;</span>,          <span class="hljs-string">&#x27;0.1.2&#x27;</span>,          <span class="hljs-string">&#x27;0.1.3&#x27;</span>,<br>  ...<br>  ...<br>  ...<br>  <span class="hljs-string">&#x27;5.73.0&#x27;</span>,         <span class="hljs-string">&#x27;5.74.0&#x27;</span>,         <span class="hljs-string">&#x27;5.75.0&#x27;</span><br>]<br><br><span class="hljs-variable constant_">PS</span> <span class="hljs-attr">E</span>:\<span class="hljs-title class_">Code</span>\<span class="hljs-title class_">Vue</span>\vue_test&gt; npm view less-loader versions<br>[<br>  <span class="hljs-string">&#x27;0.1.0&#x27;</span>,  <span class="hljs-string">&#x27;0.1.1&#x27;</span>,  <span class="hljs-string">&#x27;0.1.2&#x27;</span>,  <span class="hljs-string">&#x27;0.1.3&#x27;</span>,  <span class="hljs-string">&#x27;0.2.0&#x27;</span>,<br>  <span class="hljs-string">&#x27;0.2.1&#x27;</span>,  <span class="hljs-string">&#x27;0.2.2&#x27;</span>,  <span class="hljs-string">&#x27;0.5.0&#x27;</span>,  <span class="hljs-string">&#x27;0.5.1&#x27;</span>,  <span class="hljs-string">&#x27;0.6.0&#x27;</span>,<br>  <span class="hljs-string">&#x27;0.6.1&#x27;</span>,  <span class="hljs-string">&#x27;0.6.2&#x27;</span>,  <span class="hljs-string">&#x27;0.7.0&#x27;</span>,  <span class="hljs-string">&#x27;0.7.1&#x27;</span>,  <span class="hljs-string">&#x27;0.7.2&#x27;</span>,<br>  <span class="hljs-string">&#x27;0.7.3&#x27;</span>,  <span class="hljs-string">&#x27;0.7.4&#x27;</span>,  <span class="hljs-string">&#x27;0.7.5&#x27;</span>,  <span class="hljs-string">&#x27;0.7.6&#x27;</span>,  <span class="hljs-string">&#x27;0.7.7&#x27;</span>,<br>  <span class="hljs-string">&#x27;0.7.8&#x27;</span>,  <span class="hljs-string">&#x27;2.0.0&#x27;</span>,  <span class="hljs-string">&#x27;2.1.0&#x27;</span>,  <span class="hljs-string">&#x27;2.2.0&#x27;</span>,  <span class="hljs-string">&#x27;2.2.1&#x27;</span>,<br>  <span class="hljs-string">&#x27;2.2.2&#x27;</span>,  <span class="hljs-string">&#x27;2.2.3&#x27;</span>,  <span class="hljs-string">&#x27;3.0.0&#x27;</span>,  <span class="hljs-string">&#x27;4.0.0&#x27;</span>,  <span class="hljs-string">&#x27;4.0.1&#x27;</span>,<br>  <span class="hljs-string">&#x27;4.0.2&#x27;</span>,  <span class="hljs-string">&#x27;4.0.3&#x27;</span>,  <span class="hljs-string">&#x27;4.0.4&#x27;</span>,  <span class="hljs-string">&#x27;4.0.5&#x27;</span>,  <span class="hljs-string">&#x27;4.0.6&#x27;</span>,<br>  <span class="hljs-string">&#x27;4.1.0&#x27;</span>,  <span class="hljs-string">&#x27;5.0.0&#x27;</span>,  <span class="hljs-string">&#x27;6.0.0&#x27;</span>,  <span class="hljs-string">&#x27;6.1.0&#x27;</span>,  <span class="hljs-string">&#x27;6.1.1&#x27;</span>,<br>  <span class="hljs-string">&#x27;6.1.2&#x27;</span>,  <span class="hljs-string">&#x27;6.1.3&#x27;</span>,  <span class="hljs-string">&#x27;6.2.0&#x27;</span>,  <span class="hljs-string">&#x27;7.0.0&#x27;</span>,  <span class="hljs-string">&#x27;7.0.1&#x27;</span>,<br>  <span class="hljs-string">&#x27;7.0.2&#x27;</span>,  <span class="hljs-string">&#x27;7.1.0&#x27;</span>,  <span class="hljs-string">&#x27;7.2.0&#x27;</span>,  <span class="hljs-string">&#x27;7.2.1&#x27;</span>,  <span class="hljs-string">&#x27;7.3.0&#x27;</span>,<br>  <span class="hljs-string">&#x27;8.0.0&#x27;</span>,  <span class="hljs-string">&#x27;8.1.0&#x27;</span>,  <span class="hljs-string">&#x27;8.1.1&#x27;</span>,  <span class="hljs-string">&#x27;9.0.0&#x27;</span>,  <span class="hljs-string">&#x27;9.1.0&#x27;</span>,<br>  <span class="hljs-string">&#x27;10.0.0&#x27;</span>, <span class="hljs-string">&#x27;10.0.1&#x27;</span>, <span class="hljs-string">&#x27;10.1.0&#x27;</span>, <span class="hljs-string">&#x27;10.2.0&#x27;</span>, <span class="hljs-string">&#x27;11.0.0&#x27;</span>,<br>  <span class="hljs-string">&#x27;11.1.0&#x27;</span><br>]<br></code></pre></td></tr></table></figure><p>安装 nanoid 库 npm i nanoid</p><p>props 传进来的对象, 最好不要去做修改<br><img src="http://cdn.xiamu.icu//FtDe2HR5AVFDLWdciHti9CdSQTfg.png"></p><h2 id="WebStore"><a href="#WebStore" class="headerlink" title="WebStore"></a>WebStore</h2><ol><li>存储内容大小一般支持 5MB 左右（不同浏览器可能还不一样）</li><li>浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。</li><li>相关 API：</li><li><code>xxxxxStorage.setItem(&#39;key&#39;, &#39;value&#39;);</code><br>该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。</li><li><code>xxxxxStorage.getItem(&#39;person&#39;);</code><br>该方法接受一个键名作为参数，返回键名对应的值。</li><li><code>xxxxxStorage.removeItem(&#39;key&#39;);</code><br>该方法接受一个键名作为参数，并把该键名从存储中删除。</li><li><code>xxxxxStorage.clear()</code><br>该方法会清空存储中的所有数据。</li><li>备注：</li><li>SessionStorage 存储的内容会随着浏览器窗口关闭而消失。</li><li>LocalStorage 存储的内容，需要手动清除才会消失。</li><li><code>xxxxxStorage.getItem(xxx)</code>如果 xxx 对应的 value 获取不到，那么 getItem 的返回值是 null。</li><li><code>JSON.parse(null)</code>的结果依然是 null。</li></ol><p>localStore.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>localStore<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>localStore<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;saveData()&quot;</span>&gt;</span>点我保存一个数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;readData()&quot;</span>&gt;</span>点我读取一个数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;deleteData()&quot;</span>&gt;</span>点我删除一个数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;deleteAllData()&quot;</span>&gt;</span>点我清空所有数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> person = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">saveData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;msg1&quot;</span>, <span class="hljs-string">&quot;Hello&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;msg2&quot;</span>, <span class="hljs-number">123</span>);</span><br><span class="language-javascript">        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;msg3&quot;</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(person));</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">readData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg1&quot;</span>));</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg2&quot;</span>));</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg3&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(result));</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg4&quot;</span>));</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">deleteData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">&quot;msg1&quot;</span>);</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">deleteAllData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">clear</span>();</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>sessionStore.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>sessionStore<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>sessionStore<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;saveData()&quot;</span>&gt;</span>点我保存一个数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;readData()&quot;</span>&gt;</span>点我读取一个数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;deleteData()&quot;</span>&gt;</span>点我删除一个数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;deleteAllData()&quot;</span>&gt;</span>点我清空所有数据<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> person = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">saveData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        sessionStorage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;msg1&quot;</span>, <span class="hljs-string">&quot;Hello&quot;</span>);</span><br><span class="language-javascript">        sessionStorage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;msg2&quot;</span>, <span class="hljs-number">123</span>);</span><br><span class="language-javascript">        sessionStorage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;msg3&quot;</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(person));</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">readData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg1&quot;</span>));</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg2&quot;</span>));</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> result = sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg3&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(result));</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sessionStorage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;msg4&quot;</span>));</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">deleteData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        sessionStorage.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">&quot;msg1&quot;</span>);</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">deleteAllData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        sessionStorage.<span class="hljs-title function_">clear</span>();</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="TodoList-案例"><a href="#TodoList-案例" class="headerlink" title="TodoList_案例"></a>TodoList_案例</h2><ol><li>组件化编码流程：<br>(1).拆分静态组件：组件要按照功能点拆分，命名不要与 html 元素冲突。<br>(2).实现动态组件：考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用：<br>1).一个组件在用：放在组件自身即可。<br>2). 一些组件在用：放在他们共同的父组件上（状态提升）。<br>(3).实现交互：从绑定事件开始。</li><li>props 适用于：<br>(1).父组件 &#x3D;&#x3D;&gt; 子组件 通信<br>(2).子组件 &#x3D;&#x3D;&gt; 父组件 通信（要求父先给子一个函数）</li><li>使用 v-model 时要切记：v-model 绑定的值不能是 props 传过来的值，因为 props 是不可以修改的！</li><li>props 传过来的若是对象类型的值，修改对象中的属性时 Vue 不会报错，但不推荐这样做。</li></ol><p>MyHeader.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-header&quot;&gt;<br>       <br>    &lt;input<br>      type=&quot;text&quot;<br>      v-model=&quot;todoName&quot;<br>      @keyup.enter=&quot;add&quot;<br>      placeholder=&quot;请输入你的任务名称，按回车键确认&quot;<br>    /&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; nanoid &#125; from &quot;nanoid&quot;;<br>export default &#123;<br>  name: &quot;MyHeader&quot;,<br>  props: [&quot;addTodoObj&quot;],<br>  data() &#123;<br>    return &#123;<br>      todoName: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      if (!this.todoName) &#123;<br>        alert(&quot;请输入点什么吧&quot;);<br>        return;<br>      &#125;<br>      const todoObj = &#123; id: nanoid(), title: this.todoName, done: false &#125;; // console.log(todoObj);<br>      this.addTodoObj(todoObj);<br>      this.todoName = &quot;&quot;;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*header*/<br>.todo-header input &#123;<br>  width: 560px;<br>  height: 28px;<br>  font-size: 14px;<br>  border: 1px solid #ccc;<br>  border-radius: 4px;<br>  padding: 4px 7px;<br>&#125;<br><br><br>.todo-header input:focus &#123;<br>  outline: none;<br>  border-color: rgba(82, 168, 236, 0.8);<br>  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),<br>    0 0 8px rgba(82, 168, 236, 0.6);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyList.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;ul class=&quot;todo-main&quot;&gt;<br>       <br>    &lt;MyItem<br>      v-for=&quot;todoObj in todos&quot;<br>      :key=&quot;todoObj.id&quot;<br>      :todoObj=&quot;todoObj&quot;<br>      :checkTodo=&quot;checkTodo&quot;<br>      :deleteTodoObj=&quot;deleteTodoObj&quot;<br>    /&gt;<br>     <br>  &lt;/ul&gt;<br>&lt;/template&gt;<br><br>&lt;script scoped&gt;<br>import MyItem from &quot;./MyItem.vue&quot;;<br>export default &#123;<br>  name: &quot;MyList&quot;,<br>  components: &#123;<br>    MyItem,<br>  &#125;,<br>  props: [&quot;todos&quot;, &quot;checkTodo&quot;, &quot;deleteTodoObj&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*main*/<br>.todo-main &#123;<br>  margin-left: 0px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding: 0px;<br>&#125;<br><br><br>.todo-empty &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding-left: 5px;<br>  margin-top: 10px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyItem.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;li&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;input<br>        type=&quot;checkbox&quot;<br>        :checked=&quot;todoObj.done&quot;<br>        @change=&quot;handleCheck(todoObj.id)&quot;<br>      /&gt;<br>            &lt;span&gt;&#123;&#123; todoObj.title &#125;&#125;&lt;/span&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props --&gt;<br>       <br>    &lt;!-- &lt;input type=&quot;checkbox&quot; v-model=&quot;todoObj.done&quot;/&gt; --&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;handleDelete(todoObj.id)&quot;&gt;<br>      删除<br>    &lt;/button&gt;<br>     <br>  &lt;/li&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyItem&quot;,<br>  props: [&quot;todoObj&quot;, &quot;checkTodo&quot;, &quot;deleteTodoObj&quot;],<br>  data() &#123;<br>    return &#123;&#125;;<br>  &#125;,<br>  methods: &#123;<br>    handleCheck(id) &#123;<br>      this.checkTodo(id);<br>    &#125;,<br>    handleDelete(id) &#123;<br>      this.deleteTodoObj(id);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*item*/<br>li &#123;<br>  list-style: none;<br>  height: 36px;<br>  line-height: 36px;<br>  padding: 0 5px;<br>  border-bottom: 1px solid #ddd;<br>&#125;<br><br><br>li label &#123;<br>  float: left;<br>  cursor: pointer;<br>&#125;<br><br><br>li label li input &#123;<br>  vertical-align: middle;<br>  margin-right: 6px;<br>  position: relative;<br>  top: -1px;<br>&#125;<br><br><br>li button &#123;<br>  float: right;<br>  display: none;<br>  margin-top: 3px;<br>&#125;<br><br><br>li:before &#123;<br>  content: initial;<br>&#125;<br><br><br>li:last-child &#123;<br>  border-bottom: none;<br>&#125;<br><br><br>li:hover &#123;<br>    background-color: #ccc;<br>&#125;<br><br><br>li:hover button &#123;<br>    display: block;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyFoot.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-footer&quot; v-show=&quot;total&quot;&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;!-- &lt;input type=&quot;checkbox&quot; :checked=&quot;isAll&quot; @change=&quot;checkAll&quot; /&gt; --&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;isAll&quot; /&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;span&gt;<br>            &lt;span&gt;已完成&#123;&#123; calcTodoTotal &#125;&#125;&lt;/span&gt; / 全部&#123;&#123; total &#125;&#125;    <br>    &lt;/span&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;clearAll&quot;&gt;清除已完成任务&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyFooter&quot;,<br>  props: [&quot;todos&quot;, &quot;checkAllTodo&quot;, &quot;clearAllTodo&quot;],<br>  computed: &#123;<br>    // isAll() &#123;<br>    //   return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>    // &#125;,<br>    total() &#123;<br>      return this.todos.length;<br>    &#125;,<br>    calcTodoTotal() &#123;<br>      /*       let i = 0<br>      this.todos.forEach((todo) =&gt; &#123;<br>        if (todo.done === true) i++<br>      &#125;);<br>      return i */<br>      /*       return this.todos.reduce((pre, current) =&gt; &#123;<br>        // console.log(current.done);<br>        return pre + (current.done ? 1 : 0)<br>      &#125;, 0) */<br>      return this.todos.reduce((pre, todo) =&gt; pre + (todo.done ? 1 : 0), 0);<br>    &#125;,<br>    isAll: &#123;<br>      get() &#123;<br>        return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>      &#125;,<br>      set(value) &#123;<br>        this.checkAllTodo(value);<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  methods: &#123;<br>    checkAll(e) &#123;<br>      // console.log(e.target.checked);<br>      this.checkAllTodo(e.target.checked);<br>    &#125;,<br>    clearAll() &#123;<br>      this.clearAllTodo();<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*footer*/<br>.todo-footer &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  padding-left: 6px;<br>  margin-top: 5px;<br>&#125;<br><br><br>.todo-footer label &#123;<br>  display: inline-block;<br>  margin-right: 20px;<br>  cursor: pointer;<br>&#125;<br><br><br>.todo-footer label input &#123;<br>  position: relative;<br>  top: -1px;<br>  vertical-align: middle;<br>  margin-right: 5px;<br>&#125;<br><br><br>.todo-footer button &#123;<br>  float: right;<br>  margin-top: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div id=&quot;root&quot;&gt;<br>       <br>    &lt;div class=&quot;todo-container&quot;&gt;<br>           <br>      &lt;div class=&quot;todo-wrap&quot;&gt;<br>                &lt;MyHeader :addTodoObj=&quot;addTodoObj&quot; /&gt;        <br>        &lt;MyList<br>          :todos=&quot;todos&quot;<br>          :checkTodo=&quot;checkTodo&quot;<br>          :deleteTodoObj=&quot;deleteTodoObj&quot;<br>        /&gt;<br>               <br>        &lt;MyFooter<br>          :todos=&quot;todos&quot;<br>          :checkAllTodo=&quot;checkAllTodo&quot;<br>          :clearAllTodo=&quot;clearAllTodo&quot;<br>        /&gt;<br>             <br>      &lt;/div&gt;<br>         <br>    &lt;/div&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import MyHeader from &quot;./components/MyHeader.vue&quot;;<br>import MyList from &quot;./components/MyList.vue&quot;;<br>import MyFooter from &quot;./components/MyFooter.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    MyHeader,<br>    MyList,<br>    MyFooter,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [],<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    addTodoObj(todoObj) &#123;<br>      this.todos.unshift(todoObj);<br>    &#125;,<br>    checkTodo(id) &#123;<br>      this.todos.forEach((todoObj) =&gt; &#123;<br>        if (todoObj.id === id) &#123;<br>          todoObj.done = !todoObj.done; // console.log(todoObj.done);<br>        &#125;<br>      &#125;);<br>    &#125;,<br>    deleteTodoObj(id) &#123;<br>      if (confirm(&quot;是否确定删除&quot;)) &#123;<br>        this.todos = this.todos.filter((todo) =&gt; &#123;<br>          return todo.id !== id;<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    checkAllTodo(value) &#123;<br>      this.todos.forEach((todo) =&gt; &#123;<br>        todo.done = value;<br>      &#125;);<br>    &#125;,<br>    clearAllTodo() &#123;<br>      this.todos = this.todos.filter((todo) =&gt; &#123;<br>        return !todo.done;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>  watch: &#123;<br>    todos: &#123;<br>      deep: true,<br>      handler(value) &#123;<br>        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*base*/<br>body &#123;<br>  background: #fff;<br>&#125;<br><br><br>.btn &#123;<br>  display: inline-block;<br>  padding: 4px 12px;<br>  margin-bottom: 0;<br>  font-size: 14px;<br>  line-height: 20px;<br>  text-align: center;<br>  vertical-align: middle;<br>  cursor: pointer;<br>  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),<br>    0 1px 2px rgba(0, 0, 0, 0.05);<br>  border-radius: 4px;<br>&#125;<br><br><br>.btn-danger &#123;<br>  color: #fff;<br>  background-color: #da4f49;<br>  border: 1px solid #bd362f;<br>&#125;<br><br><br>.btn-danger:hover &#123;<br>  color: #fff;<br>  background-color: #bd362f;<br>&#125;<br><br><br>.btn:focus &#123;<br>  outline: none;<br>&#125;<br><br><br>.todo-container &#123;<br>  width: 600px;<br>  margin: 0 auto;<br>&#125;<br>.todo-container .todo-wrap &#123;<br>  padding: 10px;<br>  border: 1px solid #ddd;<br>  border-radius: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="组件的自定义事件"><a href="#组件的自定义事件" class="headerlink" title="组件的自定义事件"></a>组件的自定义事件</h2><ol><li>一种组件间通信的方式，适用于：<strong>子组件 &#x3D;&#x3D;&#x3D;&gt; 父组件</strong></li><li>使用场景：A 是父组件，B 是子组件，B 想给 A 传数据，那么就要在 A 中给 B 绑定自定义事件（事件的回调在 A 中）。</li><li>绑定自定义事件：</li><li>第一种方式，在父组件中：<code>&lt;Demo @atguigu=&quot;test&quot;/&gt;</code>   或 <code>&lt;Demo v-on:atguigu=&quot;test&quot;/&gt;</code></li><li>第二种方式，在父组件中：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">Demo</span> ref=<span class="hljs-string">&quot;demo&quot;</span>/&gt;<br>......<br><span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>)&#123;<br>   <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">xxx</span>.$on(<span class="hljs-string">&#x27;atguigu&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">test</span>)<br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>若想让自定义事件只能触发一次，可以使用<code>once</code>修饰符，或<code>$once</code>方法。</li><li>触发自定义事件：<code>this.$emit(&#39;atguigu&#39;,数据)</code></li><li>解绑自定义事件<code>this.$off(&#39;atguigu&#39;)</code></li><li>组件上也可以绑定原生 DOM 事件，需要使用<code>native</code>修饰符。</li><li>注意：通过<code>this.$refs.xxx.$on(&#39;atguigu&#39;,回调)</code>绑定自定义事件时，回调要么配置在 methods 中，要么用箭头函数，否则 this 指向会出问题！</li></ol><p>School.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;school&quot;&gt;<br>       <br>    &lt;h2&gt;学校名称: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>        &lt;button @click=&quot;sendSchoolName&quot;&gt;点我把学校名称发送给App&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  props: [&quot;getSchoolName&quot;],<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    sendSchoolName() &#123;<br>      this.getSchoolName(this.name);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style lang=&quot;less&quot; scoped&gt;<br>  .school &#123;<br>    background-color: lightpink;<br>    padding: 5px;<br>    margin-top: 30px;<br>  &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;student&quot;&gt;<br>       <br>    &lt;h2&gt;学生姓名: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生性别: &#123;&#123; sex &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;当前求和为: &#123;&#123; number &#125;&#125;&lt;/h2&gt;<br>        &lt;button @click=&quot;add&quot;&gt;点我number++&lt;/button&gt;    <br>    &lt;button @click=&quot;sendStudentName&quot;&gt;点我把学生名称发送给App&lt;/button&gt;    <br>    &lt;button @click=&quot;unbind&quot;&gt;解绑atguigu事件&lt;/button&gt;    <br>    &lt;button @click=&quot;death&quot;&gt;销毁当前Student组件的实例对象&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Student&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;张三&quot;,<br>      sex: &quot;男&quot;,<br>      number: 0,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      console.log(&quot;add回调被调用了&quot;);<br>      this.number++;<br>    &#125;,<br>    sendStudentName() &#123;<br>      this.$emit(&quot;atguigu&quot;, this.name, 666, 777, 888, 999); // this.$emit(&#x27;demo&#x27;) // this.$emit(&#x27;click&#x27;)<br>    &#125;,<br>    unbind() &#123;<br>      // this.$off(&#x27;atguigu&#x27;) // 解绑一个自定义事件<br>      // this.$off([&#x27;atguigu&#x27;, &#x27;demo&#x27;]) // 解绑多个自定义事件<br>      this.$off(); // 解绑所有的自定义事件<br>    &#125;,<br>    death() &#123;<br>      this.$destroy(); // 销毁了当前Student组件的实例对象, 销毁后所有Student实例的自定义事件全部不奏效 // 现在绑定的时间都会不奏效, 之前的原生的事件也不会奏效<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.student &#123;<br>  background-color: lightblue;<br>  padding: 5px;<br>  margin-top: 30px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;app&quot;&gt;<br>       <br>    &lt;h2&gt;&#123;&#123; msg &#125;&#125;, 学生姓名是: &#123;&#123; studentName &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;!-- 通过父组件给子组件传递函数类型的props实现: 子给父传递数据 --&gt;<br>        &lt;School :getSchoolName=&quot;getSchoolName&quot; /&gt;    <br>    &lt;hr /&gt;<br>       <br>    &lt;!-- 由于v-on在student组件标签上, <br>    所以是给Student这个组件实例对象VC绑定了一个事件, <br>    事件名字叫atguigu, 如果以后有人触发了atguigu事件, <br>    demo函数就会被调用 --&gt;<br>       <br>    &lt;!-- 通过父组件给子组件绑定一个自定义事件实现: 子给父传递数据(第一种写法, 使用@或v-on) --&gt;<br>       <br>    &lt;!-- &lt;Student v-on:atguigu=&quot;getStudentName&quot; @demo=&quot;m1&quot; /&gt; --&gt;<br><br>       <br>    &lt;!-- 通过父组件给子组件绑定一个自定义事件实现: 子给父传递数据(第二种写法, 使用ref) --&gt;<br>        &lt;Student ref=&quot;student&quot; @click.native=&quot;show&quot; /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>import School from &quot;./components/School.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  data() &#123;<br>    return &#123;<br>      msg: &quot;你好啊!&quot;,<br>      studentName: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  components: &#123;<br>    Student,<br>    School,<br>  &#125;,<br>  methods: &#123;<br>    show() &#123;<br>      alert(123);<br>    &#125;,<br>    getSchoolName(name) &#123;<br>      console.log(&quot;App收到了School的name&quot;, name);<br>    &#125;,<br>    getStudentName(name, ...params) &#123;<br>      console.log(&quot;getStudentName被调用了&quot;, name, params);<br>      this.studentName = name;<br>    &#125;,<br>    m1() &#123;<br>      console.log(&quot;demo事件被触发了！&quot;);<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;<br>    this.$refs.student.$on(&quot;atguigu&quot;, (name, params) =&gt; &#123;<br>      console.log(&quot;getStudentName被调用了&quot;, name, params);<br>      console.log(this);<br>      this.studentName = name;<br>    &#125;); // 绑定自定义事件 // this.$refs.student.$on(&quot;atguigu&quot;, this.getStudentName); // 绑定自定义事件 // this.$refs.student.$once(&quot;atguigu&quot;, this.getStudentName); // 绑定自定义事件(一次性) // 延迟三秒触发自定义事件 // setTimeout(() =&gt; &#123; //   this.$refs.student.$on(&quot;atguigu&quot;, this.getStudentName); // &#125;, 3000);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.app &#123;<br>  background-color: gray;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>), <span class="hljs-comment">// mounted() &#123; //     setTimeout(() =&gt; &#123; //         this.$destroy() //     &#125;, 3000) // &#125;,</span><br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="TodoList-自定义事件"><a href="#TodoList-自定义事件" class="headerlink" title="TodoList_自定义事件"></a>TodoList_自定义事件</h3><p>MyHeader.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-header&quot;&gt;<br>       <br>    &lt;input<br>      type=&quot;text&quot;<br>      v-model=&quot;todoName&quot;<br>      @keyup.enter=&quot;add&quot;<br>      placeholder=&quot;请输入你的任务名称，按回车键确认&quot;<br>    /&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; nanoid &#125; from &quot;nanoid&quot;;<br>export default &#123;<br>  name: &quot;MyHeader&quot;, // props: [&quot;addTodoObj&quot;],<br>  data() &#123;<br>    return &#123;<br>      todoName: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      if (!this.todoName) &#123;<br>        alert(&quot;请输入点什么吧&quot;);<br>        return;<br>      &#125;<br>      const todoObj = &#123; id: nanoid(), title: this.todoName, done: false &#125;; // console.log(todoObj); // this.addTodoObj(todoObj);<br>      this.$emit(&quot;addTodoObj&quot;, todoObj);<br>      this.todoName = &quot;&quot;;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*header*/<br>.todo-header input &#123;<br>  width: 560px;<br>  height: 28px;<br>  font-size: 14px;<br>  border: 1px solid #ccc;<br>  border-radius: 4px;<br>  padding: 4px 7px;<br>&#125;<br><br><br>.todo-header input:focus &#123;<br>  outline: none;<br>  border-color: rgba(82, 168, 236, 0.8);<br>  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),<br>    0 0 8px rgba(82, 168, 236, 0.6);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyList.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;ul class=&quot;todo-main&quot;&gt;<br>       <br>    &lt;MyItem<br>      v-for=&quot;todoObj in todos&quot;<br>      :key=&quot;todoObj.id&quot;<br>      :todoObj=&quot;todoObj&quot;<br>      :checkTodo=&quot;checkTodo&quot;<br>      :deleteTodoObj=&quot;deleteTodoObj&quot;<br>    /&gt;<br>     <br>  &lt;/ul&gt;<br>&lt;/template&gt;<br><br>&lt;script scoped&gt;<br>import MyItem from &quot;./MyItem.vue&quot;;<br>export default &#123;<br>  name: &quot;MyList&quot;,<br>  components: &#123;<br>    MyItem,<br>  &#125;,<br>  props: [&quot;todos&quot;, &quot;checkTodo&quot;, &quot;deleteTodoObj&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*main*/<br>.todo-main &#123;<br>  margin-left: 0px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding: 0px;<br>&#125;<br><br><br>.todo-empty &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding-left: 5px;<br>  margin-top: 10px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyItem.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;li&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;input<br>        type=&quot;checkbox&quot;<br>        :checked=&quot;todoObj.done&quot;<br>        @change=&quot;handleCheck(todoObj.id)&quot;<br>      /&gt;<br>            &lt;span&gt;&#123;&#123; todoObj.title &#125;&#125;&lt;/span&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props --&gt;<br>       <br>    &lt;!-- &lt;input type=&quot;checkbox&quot; v-model=&quot;todoObj.done&quot;/&gt; --&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;handleDelete(todoObj.id)&quot;&gt;<br>      删除<br>    &lt;/button&gt;<br>     <br>  &lt;/li&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyItem&quot;,<br>  props: [&quot;todoObj&quot;, &quot;checkTodo&quot;, &quot;deleteTodoObj&quot;],<br>  data() &#123;<br>    return &#123;&#125;;<br>  &#125;,<br>  methods: &#123;<br>    handleCheck(id) &#123;<br>      this.checkTodo(id);<br>    &#125;,<br>    handleDelete(id) &#123;<br>      this.deleteTodoObj(id);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*item*/<br>li &#123;<br>  list-style: none;<br>  height: 36px;<br>  line-height: 36px;<br>  padding: 0 5px;<br>  border-bottom: 1px solid #ddd;<br>&#125;<br><br><br>li label &#123;<br>  float: left;<br>  cursor: pointer;<br>&#125;<br><br><br>li label li input &#123;<br>  vertical-align: middle;<br>  margin-right: 6px;<br>  position: relative;<br>  top: -1px;<br>&#125;<br><br><br>li button &#123;<br>  float: right;<br>  display: none;<br>  margin-top: 3px;<br>&#125;<br><br><br>li:before &#123;<br>  content: initial;<br>&#125;<br><br><br>li:last-child &#123;<br>  border-bottom: none;<br>&#125;<br><br><br>li:hover &#123;<br>    background-color: #ccc;<br>&#125;<br><br><br>li:hover button &#123;<br>    display: block;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyFoot.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-footer&quot; v-show=&quot;total&quot;&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;!-- &lt;input type=&quot;checkbox&quot; :checked=&quot;isAll&quot; @change=&quot;checkAll&quot; /&gt; --&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;isAll&quot; /&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;span&gt;<br>            &lt;span&gt;已完成&#123;&#123; calcTodoTotal &#125;&#125;&lt;/span&gt; / 全部&#123;&#123; total &#125;&#125;    <br>    &lt;/span&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;clearAll&quot;&gt;清除已完成任务&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyFooter&quot;,<br>  props: [&quot;todos&quot;],<br>  computed: &#123;<br>    // isAll() &#123;<br>    //   return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>    // &#125;,<br>    total() &#123;<br>      return this.todos.length;<br>    &#125;,<br>    calcTodoTotal() &#123;<br>      /*       let i = 0<br>      this.todos.forEach((todo) =&gt; &#123;<br>        if (todo.done === true) i++<br>      &#125;);<br>      return i */<br>      /*       return this.todos.reduce((pre, current) =&gt; &#123;<br>        // console.log(current.done);<br>        return pre + (current.done ? 1 : 0)<br>      &#125;, 0) */<br>      return this.todos.reduce((pre, todo) =&gt; pre + (todo.done ? 1 : 0), 0);<br>    &#125;,<br>    isAll: &#123;<br>      get() &#123;<br>        return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>      &#125;,<br>      set(value) &#123;<br>        // this.checkAllTodo(value)<br>        this.$emit(&quot;checkAllTodo&quot;, value);<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  methods: &#123;<br>    checkAll(e) &#123;<br>      // console.log(e.target.checked);<br>      this.checkAllTodo(e.target.checked);<br>    &#125;,<br>    clearAll() &#123;<br>      // this.clearAllTodo()<br>      this.$emit(&quot;clearAllTodo&quot;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*footer*/<br>.todo-footer &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  padding-left: 6px;<br>  margin-top: 5px;<br>&#125;<br><br><br>.todo-footer label &#123;<br>  display: inline-block;<br>  margin-right: 20px;<br>  cursor: pointer;<br>&#125;<br><br><br>.todo-footer label input &#123;<br>  position: relative;<br>  top: -1px;<br>  vertical-align: middle;<br>  margin-right: 5px;<br>&#125;<br><br><br>.todo-footer button &#123;<br>  float: right;<br>  margin-top: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div id=&quot;root&quot;&gt;<br>       <br>    &lt;div class=&quot;todo-container&quot;&gt;<br>           <br>      &lt;div class=&quot;todo-wrap&quot;&gt;<br>                &lt;MyHeader @addTodoObj=&quot;addTodoObj&quot; /&gt;        <br>        &lt;MyList<br>          :todos=&quot;todos&quot;<br>          :checkTodo=&quot;checkTodo&quot;<br>          :deleteTodoObj=&quot;deleteTodoObj&quot;<br>        /&gt;<br>               <br>        &lt;MyFooter<br>          :todos=&quot;todos&quot;<br>          @checkAllTodo=&quot;checkAllTodo&quot;<br>          @clearAllTodo=&quot;clearAllTodo&quot;<br>        /&gt;<br>             <br>      &lt;/div&gt;<br>         <br>    &lt;/div&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import MyHeader from &quot;./components/MyHeader.vue&quot;;<br>import MyList from &quot;./components/MyList.vue&quot;;<br>import MyFooter from &quot;./components/MyFooter.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    MyHeader,<br>    MyList,<br>    MyFooter,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [],<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    addTodoObj(todoObj) &#123;<br>      this.todos.unshift(todoObj);<br>    &#125;,<br>    checkTodo(id) &#123;<br>      this.todos.forEach((todoObj) =&gt; &#123;<br>        if (todoObj.id === id) &#123;<br>          todoObj.done = !todoObj.done; // console.log(todoObj.done);<br>        &#125;<br>      &#125;);<br>    &#125;,<br>    deleteTodoObj(id) &#123;<br>      if (confirm(&quot;是否确定删除&quot;)) &#123;<br>        this.todos = this.todos.filter((todo) =&gt; &#123;<br>          return todo.id !== id;<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    checkAllTodo(value) &#123;<br>      this.todos.forEach((todo) =&gt; &#123;<br>        todo.done = value;<br>      &#125;);<br>    &#125;,<br>    clearAllTodo() &#123;<br>      this.todos = this.todos.filter((todo) =&gt; &#123;<br>        return !todo.done;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>  watch: &#123;<br>    todos: &#123;<br>      deep: true,<br>      handler(value) &#123;<br>        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*base*/<br>body &#123;<br>  background: #fff;<br>&#125;<br><br><br>.btn &#123;<br>  display: inline-block;<br>  padding: 4px 12px;<br>  margin-bottom: 0;<br>  font-size: 14px;<br>  line-height: 20px;<br>  text-align: center;<br>  vertical-align: middle;<br>  cursor: pointer;<br>  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),<br>    0 1px 2px rgba(0, 0, 0, 0.05);<br>  border-radius: 4px;<br>&#125;<br><br><br>.btn-danger &#123;<br>  color: #fff;<br>  background-color: #da4f49;<br>  border: 1px solid #bd362f;<br>&#125;<br><br><br>.btn-danger:hover &#123;<br>  color: #fff;<br>  background-color: #bd362f;<br>&#125;<br><br><br>.btn:focus &#123;<br>  outline: none;<br>&#125;<br><br><br>.todo-container &#123;<br>  width: 600px;<br>  margin: 0 auto;<br>&#125;<br>.todo-container .todo-wrap &#123;<br>  padding: 10px;<br>  border: 1px solid #ddd;<br>  border-radius: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="全局事件总线"><a href="#全局事件总线" class="headerlink" title="全局事件总线"></a>全局事件总线</h2><ol><li>一种组件间通信的方式，适用于任意组件间通信。</li><li>安装全局事件总线：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>......<br><span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span> <span class="hljs-comment">//安装全局事件总线，$bus就是当前应用的vm</span><br>&#125;,<br>    ......<br>&#125;)<br></code></pre></td></tr></table></figure><ol start="3"><li>使用事件总线：</li><li>接收数据：A 组件想接收数据，则在 A 组件中给$bus 绑定自定义事件，事件的回调留在 A 组件自身。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">methods</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-title function_">demo</span>(<span class="hljs-params">data</span>)&#123;......&#125;<br>&#125;<br>......<br><span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">$bus</span>.$on(<span class="hljs-string">&#x27;xxxx&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">demo</span>)<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>提供数据：<code>this.$bus.$emit(&#39;xxxx&#39;,数据)</code></li><li>最好在 beforeDestroy 钩子中，用$off 去解绑当前组件所用到的事件。</li></ol><p>全局事件总线: 任意组件间通信<br><img src="http://cdn.xiamu.icu//FufykFAdFQQAq1XdURkZCZTfMR4d.png"><br>School.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;school&quot;&gt;<br>       <br>    &lt;h2&gt;学校名称: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;,<br>  mounted() &#123;<br>    // console.log(&#x27;School&#x27;, this.x);<br>    this.$bus.$on(&quot;hello&quot;, (data) =&gt; &#123;<br>      console.log(&quot;我是School组件，收到了数据&quot;, data);<br>    &#125;);<br>  &#125;,<br>  beforeDestroy() &#123;<br>    this.$bus.$off(&quot;bus&quot;);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style lang=&quot;less&quot; scoped&gt;<br>.school &#123;<br>  background-color: lightpink;<br>  padding: 5px;<br>  margin-top: 30px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;student&quot;&gt;<br>       <br>    &lt;h2&gt;学生姓名: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生性别: &#123;&#123; sex &#125;&#125;&lt;/h2&gt;<br>        &lt;button @click=&quot;sendStudentName&quot;&gt;把学生名给School组件&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Student&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;张三&quot;,<br>      sex: &quot;男&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    sendStudentName() &#123;<br>      // console.log(&quot;Student&quot;, this.x);<br>      this.$bus.$emit(&quot;hello&quot;, this.name);<br>    &#125;,<br>  &#125;, // mounted() &#123; //   console.log(&quot;Student&quot;, this.x); //   this.x.$on(&#x27;hello&#x27;, (data) =&gt; &#123; //     console.log(&#x27;我是School组件, 收到了数据&#x27;, data); //   &#125;) // &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.student &#123;<br>  background-color: lightblue;<br>  padding: 5px;<br>  margin-top: 30px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;app&quot;&gt;<br>       <br>    &lt;h2&gt;&#123;&#123; msg &#125;&#125;&lt;/h2&gt;<br>        &lt;School /&gt;    <br>    &lt;hr /&gt;<br>        &lt;Student /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>import School from &quot;./components/School.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Student,<br>    School,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      msg: &quot;你好啊!&quot;,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.app &#123;<br>  background-color: gray;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">/* window.x = &#123;a: 1, b: 2&#125; */</span><br><br><span class="hljs-comment">/* Vue.prototype.x = &#123; a: 1, b: 2 &#125;</span><br><span class="hljs-comment">console.log(Vue.prototype); */</span><br><br><span class="hljs-comment">/* const Demo = Vue.extend(&#123;</span><br><span class="hljs-comment">    a: 1,</span><br><span class="hljs-comment">    b: 2</span><br><span class="hljs-comment">&#125;)</span><br><span class="hljs-comment">const d = new Demo()</span><br><span class="hljs-comment">Vue.prototype.x = d */</span><br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="TodoList-事件总线"><a href="#TodoList-事件总线" class="headerlink" title="TodoList_事件总线"></a>TodoList_事件总线</h3><p>MyHeader.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-header&quot;&gt;<br>       <br>    &lt;input<br>      type=&quot;text&quot;<br>      v-model=&quot;todoName&quot;<br>      @keyup.enter=&quot;add&quot;<br>      placeholder=&quot;请输入你的任务名称，按回车键确认&quot;<br>    /&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; nanoid &#125; from &quot;nanoid&quot;;<br>export default &#123;<br>  name: &quot;MyHeader&quot;, // props: [&quot;addTodoObj&quot;],<br>  data() &#123;<br>    return &#123;<br>      todoName: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      if (!this.todoName) &#123;<br>        alert(&quot;请输入点什么吧&quot;);<br>        return;<br>      &#125;<br>      const todoObj = &#123; id: nanoid(), title: this.todoName, done: false &#125;; // console.log(todoObj); // this.addTodoObj(todoObj);<br>      this.$emit(&quot;addTodoObj&quot;, todoObj);<br>      this.todoName = &quot;&quot;;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*header*/<br>.todo-header input &#123;<br>  width: 560px;<br>  height: 28px;<br>  font-size: 14px;<br>  border: 1px solid #ccc;<br>  border-radius: 4px;<br>  padding: 4px 7px;<br>&#125;<br><br><br>.todo-header input:focus &#123;<br>  outline: none;<br>  border-color: rgba(82, 168, 236, 0.8);<br>  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),<br>    0 0 8px rgba(82, 168, 236, 0.6);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyList.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;ul class=&quot;todo-main&quot;&gt;<br>       <br>    &lt;MyItem v-for=&quot;todoObj in todos&quot; :key=&quot;todoObj.id&quot; :todoObj=&quot;todoObj&quot; /&gt;<br>     <br>  &lt;/ul&gt;<br>&lt;/template&gt;<br><br>&lt;script scoped&gt;<br>import MyItem from &quot;./MyItem.vue&quot;;<br>export default &#123;<br>  name: &quot;MyList&quot;,<br>  components: &#123;<br>    MyItem,<br>  &#125;,<br>  props: [&quot;todos&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*main*/<br>.todo-main &#123;<br>  margin-left: 0px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding: 0px;<br>&#125;<br><br><br>.todo-empty &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding-left: 5px;<br>  margin-top: 10px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyItem.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;li&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;input<br>        type=&quot;checkbox&quot;<br>        :checked=&quot;todoObj.done&quot;<br>        @change=&quot;handleCheck(todoObj.id)&quot;<br>      /&gt;<br>            &lt;span&gt;&#123;&#123; todoObj.title &#125;&#125;&lt;/span&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props --&gt;<br>       <br>    &lt;!-- &lt;input type=&quot;checkbox&quot; v-model=&quot;todoObj.done&quot;/&gt; --&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;handleDelete(todoObj.id)&quot;&gt;<br>            删除    <br>    &lt;/button&gt;<br>     <br>  &lt;/li&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyItem&quot;,<br>  props: [&quot;todoObj&quot;],<br>  data() &#123;<br>    return &#123;&#125;;<br>  &#125;,<br>  methods: &#123;<br>    handleCheck(id) &#123;<br>      // this.checkTodo(id);<br>      this.$bus.$emit(&quot;checkTodo&quot;, id);<br>    &#125;,<br>    handleDelete(id) &#123;<br>      // this.deleteTodoObj(id);<br><br>      this.$bus.$emit(&quot;deleteTodoObj&quot;, id);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*item*/<br>li &#123;<br>  list-style: none;<br>  height: 36px;<br>  line-height: 36px;<br>  padding: 0 5px;<br>  border-bottom: 1px solid #ddd;<br>&#125;<br><br><br>li label &#123;<br>  float: left;<br>  cursor: pointer;<br>&#125;<br><br><br>li label li input &#123;<br>  vertical-align: middle;<br>  margin-right: 6px;<br>  position: relative;<br>  top: -1px;<br>&#125;<br><br><br>li button &#123;<br>  float: right;<br>  display: none;<br>  margin-top: 3px;<br>&#125;<br><br><br>li:before &#123;<br>  content: initial;<br>&#125;<br><br><br>li:last-child &#123;<br>  border-bottom: none;<br>&#125;<br><br><br>li:hover &#123;<br>  background-color: #ccc;<br>&#125;<br><br><br>li:hover button &#123;<br>  display: block;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyFoot.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-footer&quot; v-show=&quot;total&quot;&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;!-- &lt;input type=&quot;checkbox&quot; :checked=&quot;isAll&quot; @change=&quot;checkAll&quot; /&gt; --&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;isAll&quot; /&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;span&gt;<br>            &lt;span&gt;已完成&#123;&#123; calcTodoTotal &#125;&#125;&lt;/span&gt; / 全部&#123;&#123; total &#125;&#125;    <br>    &lt;/span&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;clearAll&quot;&gt;清除已完成任务&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyFooter&quot;,<br>  props: [&quot;todos&quot;],<br>  computed: &#123;<br>    // isAll() &#123;<br>    //   return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>    // &#125;,<br>    total() &#123;<br>      return this.todos.length;<br>    &#125;,<br>    calcTodoTotal() &#123;<br>      /*       let i = 0<br>      this.todos.forEach((todo) =&gt; &#123;<br>        if (todo.done === true) i++<br>      &#125;);<br>      return i */<br>      /*       return this.todos.reduce((pre, current) =&gt; &#123;<br>        // console.log(current.done);<br>        return pre + (current.done ? 1 : 0)<br>      &#125;, 0) */<br>      return this.todos.reduce((pre, todo) =&gt; pre + (todo.done ? 1 : 0), 0);<br>    &#125;,<br>    isAll: &#123;<br>      get() &#123;<br>        return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>      &#125;,<br>      set(value) &#123;<br>        // this.checkAllTodo(value)<br>        this.$emit(&quot;checkAllTodo&quot;, value);<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  methods: &#123;<br>    checkAll(e) &#123;<br>      // console.log(e.target.checked);<br>      this.checkAllTodo(e.target.checked);<br>    &#125;,<br>    clearAll() &#123;<br>      // this.clearAllTodo()<br>      this.$emit(&quot;clearAllTodo&quot;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*footer*/<br>.todo-footer &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  padding-left: 6px;<br>  margin-top: 5px;<br>&#125;<br><br><br>.todo-footer label &#123;<br>  display: inline-block;<br>  margin-right: 20px;<br>  cursor: pointer;<br>&#125;<br><br><br>.todo-footer label input &#123;<br>  position: relative;<br>  top: -1px;<br>  vertical-align: middle;<br>  margin-right: 5px;<br>&#125;<br><br><br>.todo-footer button &#123;<br>  float: right;<br>  margin-top: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div id=&quot;root&quot;&gt;<br>       <br>    &lt;div class=&quot;todo-container&quot;&gt;<br>           <br>      &lt;div class=&quot;todo-wrap&quot;&gt;<br>                &lt;MyHeader @addTodoObj=&quot;addTodoObj&quot; /&gt;        <br>        &lt;MyList :todos=&quot;todos&quot; /&gt;        <br>        &lt;MyFooter<br>          :todos=&quot;todos&quot;<br>          @checkAllTodo=&quot;checkAllTodo&quot;<br>          @clearAllTodo=&quot;clearAllTodo&quot;<br>        /&gt;<br>             <br>      &lt;/div&gt;<br>         <br>    &lt;/div&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import MyHeader from &quot;./components/MyHeader.vue&quot;;<br>import MyList from &quot;./components/MyList.vue&quot;;<br>import MyFooter from &quot;./components/MyFooter.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    MyHeader,<br>    MyList,<br>    MyFooter,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [],<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    addTodoObj(todoObj) &#123;<br>      this.todos.unshift(todoObj);<br>    &#125;,<br>    checkTodo(id) &#123;<br>      this.todos.forEach((todoObj) =&gt; &#123;<br>        if (todoObj.id === id) &#123;<br>          todoObj.done = !todoObj.done; // console.log(todoObj.done);<br>        &#125;<br>      &#125;);<br>    &#125;,<br>    deleteTodoObj(id) &#123;<br>      if (confirm(&quot;是否确定删除&quot;)) &#123;<br>        this.todos = this.todos.filter((todo) =&gt; &#123;<br>          return todo.id !== id;<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    checkAllTodo(value) &#123;<br>      this.todos.forEach((todo) =&gt; &#123;<br>        todo.done = value;<br>      &#125;);<br>    &#125;,<br>    clearAllTodo() &#123;<br>      this.todos = this.todos.filter((todo) =&gt; &#123;<br>        return !todo.done;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>  watch: &#123;<br>    todos: &#123;<br>      deep: true,<br>      handler(value) &#123;<br>        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;<br>    this.$bus.$on(&quot;checkTodo&quot;, this.checkTodo);<br>    this.$bus.$on(&quot;deleteTodoObj&quot;, this.deleteTodoObj);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*base*/<br>body &#123;<br>  background: #fff;<br>&#125;<br><br><br>.btn &#123;<br>  display: inline-block;<br>  padding: 4px 12px;<br>  margin-bottom: 0;<br>  font-size: 14px;<br>  line-height: 20px;<br>  text-align: center;<br>  vertical-align: middle;<br>  cursor: pointer;<br>  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),<br>    0 1px 2px rgba(0, 0, 0, 0.05);<br>  border-radius: 4px;<br>&#125;<br><br><br>.btn-danger &#123;<br>  color: #fff;<br>  background-color: #da4f49;<br>  border: 1px solid #bd362f;<br>&#125;<br><br><br>.btn-danger:hover &#123;<br>  color: #fff;<br>  background-color: #bd362f;<br>&#125;<br><br><br>.btn:focus &#123;<br>  outline: none;<br>&#125;<br><br><br>.todo-container &#123;<br>  width: 600px;<br>  margin: 0 auto;<br>&#125;<br>.todo-container .todo-wrap &#123;<br>  padding: 10px;<br>  border: 1px solid #ddd;<br>  border-radius: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="消息的订阅与发布"><a href="#消息的订阅与发布" class="headerlink" title="消息的订阅与发布"></a>消息的订阅与发布</h2><ol><li>一种组件间通信的方式，适用于任意组件间通信。</li><li>使用步骤：</li><li>安装 pubsub：<code>npm i pubsub-js</code></li><li>引入: <code>import pubsub from &#39;pubsub-js&#39;</code></li><li>接收数据：A 组件想接收数据，则在 A 组件中订阅消息，订阅的回调留在 A 组件自身。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">methods</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-title function_">demo</span>(<span class="hljs-params">data</span>)&#123;......&#125;<br>&#125;<br>......<br><span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">pid</span> = pubsub.<span class="hljs-title function_">subscribe</span>(<span class="hljs-string">&#x27;xxx&#x27;</span>,<span class="hljs-variable language_">this</span>.<span class="hljs-property">demo</span>) <span class="hljs-comment">//订阅消息</span><br>&#125;<br></code></pre></td></tr></table></figure><ol start="4"><li>提供数据：<code>pubsub.publish(&#39;xxx&#39;,数据)</code></li><li>最好在 beforeDestroy 钩子中，用<code>PubSub.unsubscribe(pid)</code>去取消订阅。</li></ol><p>报纸订阅与发布 1.订阅报纸: 住址 2.邮递员送报纸: 报纸<br>报纸订阅与发布 1.订阅消息: 消息名 2.发布消息: 消息内容<br><img src="http://cdn.xiamu.icu//FguaN3hLVDII1E688Nlk0u3z6boY.png"><br>安装 pubsub 库<br>PS E:\Code\Vue\vue_test&gt; npm i pubsub-js<br>added 1 package in 3s<br>School.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;school&quot;&gt;<br>       <br>    &lt;h2&gt;学校名称: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学校地址: &#123;&#123; address &#125;&#125;&lt;/h2&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>export default &#123;<br>  name: &quot;School&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;尚硅谷&quot;,<br>      address: &quot;北京&quot;,<br>    &#125;;<br>  &#125;,<br>  mounted() &#123;<br>    pubsub.subscribe(&quot;hello&quot;, function (msgName, data) &#123;<br>      console.log(&quot;有人发布了hello消息, hello下次的回调执行了&quot;, msgName, data);<br>    &#125;);<br>  &#125;,<br>  beforeDestroy() &#123;&#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style lang=&quot;less&quot; scoped&gt;<br>.school &#123;<br>  background-color: lightpink;<br>  padding: 5px;<br>  margin-top: 30px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>Student.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;student&quot;&gt;<br>       <br>    &lt;h2&gt;学生姓名: &#123;&#123; name &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;学生性别: &#123;&#123; sex &#125;&#125;&lt;/h2&gt;<br>        &lt;button @click=&quot;sendStudentName&quot;&gt;把学生名给School组件&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>export default &#123;<br>  name: &quot;Student&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;张三&quot;,<br>      sex: &quot;男&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    sendStudentName() &#123;<br>      pubsub.publish(&quot;hello&quot;, 666);<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;&#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.student &#123;<br>  background-color: lightblue;<br>  padding: 5px;<br>  margin-top: 30px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;app&quot;&gt;<br>       <br>    &lt;h2&gt;&#123;&#123; msg &#125;&#125;&lt;/h2&gt;<br>        &lt;School /&gt;     &lt;Student /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Student from &quot;./components/Student.vue&quot;;<br>import School from &quot;./components/School.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Student,<br>    School,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      msg: &quot;你好啊!&quot;,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.app &#123;<br>  background-color: gray;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="TodoList-pubsub"><a href="#TodoList-pubsub" class="headerlink" title="TodoList_pubsub"></a>TodoList_pubsub</h3><p>MyHeader.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-header&quot;&gt;<br>       <br>    &lt;input<br>      type=&quot;text&quot;<br>      v-model=&quot;todoName&quot;<br>      @keyup.enter=&quot;add&quot;<br>      placeholder=&quot;请输入你的任务名称，按回车键确认&quot;<br>    /&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; nanoid &#125; from &quot;nanoid&quot;;<br>export default &#123;<br>  name: &quot;MyHeader&quot;, // props: [&quot;addTodoObj&quot;],<br>  data() &#123;<br>    return &#123;<br>      todoName: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      if (!this.todoName) &#123;<br>        alert(&quot;请输入点什么吧&quot;);<br>        return;<br>      &#125;<br>      const todoObj = &#123; id: nanoid(), title: this.todoName, done: false &#125;; // console.log(todoObj); // this.addTodoObj(todoObj);<br>      this.$emit(&quot;addTodoObj&quot;, todoObj);<br>      this.todoName = &quot;&quot;;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*header*/<br>.todo-header input &#123;<br>  width: 560px;<br>  height: 28px;<br>  font-size: 14px;<br>  border: 1px solid #ccc;<br>  border-radius: 4px;<br>  padding: 4px 7px;<br>&#125;<br><br><br>.todo-header input:focus &#123;<br>  outline: none;<br>  border-color: rgba(82, 168, 236, 0.8);<br>  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),<br>    0 0 8px rgba(82, 168, 236, 0.6);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyList.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;ul class=&quot;todo-main&quot;&gt;<br>       <br>    &lt;MyItem v-for=&quot;todoObj in todos&quot; :key=&quot;todoObj.id&quot; :todoObj=&quot;todoObj&quot; /&gt;<br>     <br>  &lt;/ul&gt;<br>&lt;/template&gt;<br><br>&lt;script scoped&gt;<br>import MyItem from &quot;./MyItem.vue&quot;;<br>export default &#123;<br>  name: &quot;MyList&quot;,<br>  components: &#123;<br>    MyItem,<br>  &#125;,<br>  props: [&quot;todos&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*main*/<br>.todo-main &#123;<br>  margin-left: 0px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding: 0px;<br>&#125;<br><br><br>.todo-empty &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding-left: 5px;<br>  margin-top: 10px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyItem.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;li&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;input<br>        type=&quot;checkbox&quot;<br>        :checked=&quot;todoObj.done&quot;<br>        @change=&quot;handleCheck(todoObj.id)&quot;<br>      /&gt;<br>            &lt;span&gt;&#123;&#123; todoObj.title &#125;&#125;&lt;/span&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props --&gt;<br>       <br>    &lt;!-- &lt;input type=&quot;checkbox&quot; v-model=&quot;todoObj.done&quot;/&gt; --&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;handleDelete(todoObj.id)&quot;&gt;<br>            删除    <br>    &lt;/button&gt;<br>     <br>  &lt;/li&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>export default &#123;<br>  name: &quot;MyItem&quot;,<br>  props: [&quot;todoObj&quot;],<br>  data() &#123;<br>    return &#123;&#125;;<br>  &#125;,<br>  methods: &#123;<br>    handleCheck(id) &#123;<br>      // this.checkTodo(id);<br>      this.$bus.$emit(&quot;checkTodo&quot;, id);<br>    &#125;,<br>    handleDelete(id) &#123;<br>      // this.deleteTodoObj(id);<br>      // this.$bus.$emit(&quot;deleteTodoObj&quot;, id);<br>      pubsub.publish(&quot;deleteTodoObj&quot;, id);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*item*/<br>li &#123;<br>  list-style: none;<br>  height: 36px;<br>  line-height: 36px;<br>  padding: 0 5px;<br>  border-bottom: 1px solid #ddd;<br>&#125;<br><br><br>li label &#123;<br>  float: left;<br>  cursor: pointer;<br>&#125;<br><br><br>li label li input &#123;<br>  vertical-align: middle;<br>  margin-right: 6px;<br>  position: relative;<br>  top: -1px;<br>&#125;<br><br><br>li button &#123;<br>  float: right;<br>  display: none;<br>  margin-top: 3px;<br>&#125;<br><br><br>li:before &#123;<br>  content: initial;<br>&#125;<br><br><br>li:last-child &#123;<br>  border-bottom: none;<br>&#125;<br><br><br>li:hover &#123;<br>  background-color: #ccc;<br>&#125;<br><br><br>li:hover button &#123;<br>  display: block;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyFooter.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-footer&quot; v-show=&quot;total&quot;&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;!-- &lt;input type=&quot;checkbox&quot; :checked=&quot;isAll&quot; @change=&quot;checkAll&quot; /&gt; --&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;isAll&quot; /&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;span&gt;<br>            &lt;span&gt;已完成&#123;&#123; calcTodoTotal &#125;&#125;&lt;/span&gt; / 全部&#123;&#123; total &#125;&#125;    <br>    &lt;/span&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;clearAll&quot;&gt;清除已完成任务&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyFooter&quot;,<br>  props: [&quot;todos&quot;],<br>  computed: &#123;<br>    // isAll() &#123;<br>    //   return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>    // &#125;,<br>    total() &#123;<br>      return this.todos.length;<br>    &#125;,<br>    calcTodoTotal() &#123;<br>      /*       let i = 0<br>      this.todos.forEach((todo) =&gt; &#123;<br>        if (todo.done === true) i++<br>      &#125;);<br>      return i */<br>      /*       return this.todos.reduce((pre, current) =&gt; &#123;<br>        // console.log(current.done);<br>        return pre + (current.done ? 1 : 0)<br>      &#125;, 0) */<br>      return this.todos.reduce((pre, todo) =&gt; pre + (todo.done ? 1 : 0), 0);<br>    &#125;,<br>    isAll: &#123;<br>      get() &#123;<br>        return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>      &#125;,<br>      set(value) &#123;<br>        // this.checkAllTodo(value)<br>        this.$emit(&quot;checkAllTodo&quot;, value);<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  methods: &#123;<br>    checkAll(e) &#123;<br>      // console.log(e.target.checked);<br>      this.checkAllTodo(e.target.checked);<br>    &#125;,<br>    clearAll() &#123;<br>      // this.clearAllTodo()<br>      this.$emit(&quot;clearAllTodo&quot;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*footer*/<br>.todo-footer &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  padding-left: 6px;<br>  margin-top: 5px;<br>&#125;<br><br><br>.todo-footer label &#123;<br>  display: inline-block;<br>  margin-right: 20px;<br>  cursor: pointer;<br>&#125;<br><br><br>.todo-footer label input &#123;<br>  position: relative;<br>  top: -1px;<br>  vertical-align: middle;<br>  margin-right: 5px;<br>&#125;<br><br><br>.todo-footer button &#123;<br>  float: right;<br>  margin-top: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div id=&quot;root&quot;&gt;<br>       <br>    &lt;div class=&quot;todo-container&quot;&gt;<br>           <br>      &lt;div class=&quot;todo-wrap&quot;&gt;<br>                &lt;MyHeader @addTodoObj=&quot;addTodoObj&quot; /&gt;        <br>        &lt;MyList :todos=&quot;todos&quot; /&gt;        <br>        &lt;MyFooter<br>          :todos=&quot;todos&quot;<br>          @checkAllTodo=&quot;checkAllTodo&quot;<br>          @clearAllTodo=&quot;clearAllTodo&quot;<br>        /&gt;<br>             <br>      &lt;/div&gt;<br>         <br>    &lt;/div&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>import MyHeader from &quot;./components/MyHeader.vue&quot;;<br>import MyList from &quot;./components/MyList.vue&quot;;<br>import MyFooter from &quot;./components/MyFooter.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    MyHeader,<br>    MyList,<br>    MyFooter,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [],<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    addTodoObj(todoObj) &#123;<br>      this.todos.unshift(todoObj);<br>    &#125;,<br>    checkTodo(id) &#123;<br>      this.todos.forEach((todoObj) =&gt; &#123;<br>        if (todoObj.id === id) &#123;<br>          todoObj.done = !todoObj.done; // console.log(todoObj.done);<br>        &#125;<br>      &#125;);<br>    &#125;, // 下划线只是用来占位的, _表示订阅名<br>    deleteTodoObj(_, id) &#123;<br>      if (confirm(&quot;是否确定删除&quot;)) &#123;<br>        this.todos = this.todos.filter((todo) =&gt; &#123;<br>          return todo.id !== id;<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    checkAllTodo(value) &#123;<br>      this.todos.forEach((todo) =&gt; &#123;<br>        todo.done = value;<br>      &#125;);<br>    &#125;,<br>    clearAllTodo() &#123;<br>      this.todos = this.todos.filter((todo) =&gt; &#123;<br>        return !todo.done;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>  watch: &#123;<br>    todos: &#123;<br>      deep: true,<br>      handler(value) &#123;<br>        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;<br>    this.$bus.$on(&quot;checkTodo&quot;, this.checkTodo); // this.$bus.$on(&#x27;deleteTodoObj&#x27;, this.deleteTodoObj)<br>    this.pubId = pubsub.subscribe(&quot;deleteTodoObj&quot;, this.deleteTodoObj);<br>  &#125;,<br>  beforeDestroy() &#123;<br>    pubsub.unsubscribe(this.pubId);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*base*/<br>body &#123;<br>  background: #fff;<br>&#125;<br><br><br>.btn &#123;<br>  display: inline-block;<br>  padding: 4px 12px;<br>  margin-bottom: 0;<br>  font-size: 14px;<br>  line-height: 20px;<br>  text-align: center;<br>  vertical-align: middle;<br>  cursor: pointer;<br>  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),<br>    0 1px 2px rgba(0, 0, 0, 0.05);<br>  border-radius: 4px;<br>&#125;<br><br><br>.btn-danger &#123;<br>  color: #fff;<br>  background-color: #da4f49;<br>  border: 1px solid #bd362f;<br>&#125;<br><br><br>.btn-danger:hover &#123;<br>  color: #fff;<br>  background-color: #bd362f;<br>&#125;<br><br><br>.btn:focus &#123;<br>  outline: none;<br>&#125;<br><br><br>.todo-container &#123;<br>  width: 600px;<br>  margin: 0 auto;<br>&#125;<br>.todo-container .todo-wrap &#123;<br>  padding: 10px;<br>  border: 1px solid #ddd;<br>  border-radius: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="TodoList-nextTick"><a href="#TodoList-nextTick" class="headerlink" title="TodoList_nextTick"></a>TodoList_nextTick</h2><ol><li>语法：<code>this.$nextTick(回调函数)</code></li><li>作用：在下一次 DOM 更新结束后执行其指定的回调。</li><li>什么时候用：当改变数据后，要基于更新后的新 DOM 进行某些操作时，要在 nextTick 所指定的回调函数中执行。</li></ol><p>MyHeader.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-header&quot;&gt;<br>       <br>    &lt;input<br>      type=&quot;text&quot;<br>      v-model=&quot;todoName&quot;<br>      @keyup.enter=&quot;add&quot;<br>      placeholder=&quot;请输入你的任务名称，按回车键确认&quot;<br>    /&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; nanoid &#125; from &quot;nanoid&quot;;<br>export default &#123;<br>  name: &quot;MyHeader&quot;, // props: [&quot;addTodoObj&quot;],<br>  data() &#123;<br>    return &#123;<br>      todoName: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      if (!this.todoName) &#123;<br>        alert(&quot;请输入点什么吧&quot;);<br>        return;<br>      &#125;<br>      const todoObj = &#123; id: nanoid(), title: this.todoName, done: false &#125;; // console.log(todoObj); // this.addTodoObj(todoObj);<br>      this.$emit(&quot;addTodoObj&quot;, todoObj);<br>      this.todoName = &quot;&quot;;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*header*/<br>.todo-header input &#123;<br>  width: 560px;<br>  height: 28px;<br>  font-size: 14px;<br>  border: 1px solid #ccc;<br>  border-radius: 4px;<br>  padding: 4px 7px;<br>&#125;<br><br><br>.todo-header input:focus &#123;<br>  outline: none;<br>  border-color: rgba(82, 168, 236, 0.8);<br>  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),<br>    0 0 8px rgba(82, 168, 236, 0.6);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyList.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;ul class=&quot;todo-main&quot;&gt;<br>       <br>    &lt;MyItem v-for=&quot;todoObj in todos&quot; :key=&quot;todoObj.id&quot; :todoObj=&quot;todoObj&quot; /&gt;<br>     <br>  &lt;/ul&gt;<br>&lt;/template&gt;<br><br>&lt;script scoped&gt;<br>import MyItem from &quot;./MyItem.vue&quot;;<br>export default &#123;<br>  name: &quot;MyList&quot;,<br>  components: &#123;<br>    MyItem,<br>  &#125;,<br>  props: [&quot;todos&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*main*/<br>.todo-main &#123;<br>  margin-left: 0px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding: 0px;<br>&#125;<br><br><br>.todo-empty &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding-left: 5px;<br>  margin-top: 10px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyItem.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;li&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;input<br>        type=&quot;checkbox&quot;<br>        :checked=&quot;todoObj.done&quot;<br>        @change=&quot;handleCheck(todoObj.id)&quot;<br>      /&gt;<br>            &lt;span v-show=&quot;!todoObj.isEdit&quot;&gt;&#123;&#123; todoObj.title &#125;&#125;&lt;/span&gt;      <br>      &lt;input<br>        v-show=&quot;todoObj.isEdit&quot;<br>        type=&quot;text&quot;<br>        :value=&quot;todoObj.title&quot;<br>        @blur=&quot;handleBlur(todoObj, $event)&quot;<br>        ref=&quot;inputTitle&quot;<br>      /&gt;<br>         <br>    &lt;/label&gt;<br>       <br>    &lt;!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props --&gt;<br>       <br>    &lt;!-- &lt;input type=&quot;checkbox&quot; v-model=&quot;todoObj.done&quot;/&gt; --&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;handleDelete(todoObj.id)&quot;&gt;<br>            删除    <br>    &lt;/button&gt;<br>       <br>    &lt;button<br>      class=&quot;btn btn-edit&quot;<br>      @click=&quot;handleEdit(todoObj)&quot;<br>      v-show=&quot;!todoObj.isEdit&quot;<br>    &gt;<br>            编辑    <br>    &lt;/button&gt;<br>     <br>  &lt;/li&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>export default &#123;<br>  name: &quot;MyItem&quot;,<br>  props: [&quot;todoObj&quot;],<br>  data() &#123;<br>    return &#123;&#125;;<br>  &#125;,<br>  methods: &#123;<br>    handleCheck(id) &#123;<br>      // this.checkTodo(id);<br>      this.$bus.$emit(&quot;checkTodo&quot;, id);<br>    &#125;,<br>    handleDelete(id) &#123;<br>      // this.deleteTodoObj(id);<br>      // this.$bus.$emit(&quot;deleteTodoObj&quot;, id);<br>      pubsub.publish(&quot;deleteTodoObj&quot;, id);<br>    &#125;, //编辑<br>    handleEdit(todoObj) &#123;<br>      if (todoObj.hasOwnProperty(&quot;isEdit&quot;)) &#123;<br>        todoObj.isEdit = true;<br>      &#125; else &#123;<br>        this.$set(todoObj, &quot;isEdit&quot;, true);<br>      &#125; /* setTimeout(() =&gt; &#123; // 设置定时器<br>        this.$refs.inputTitle.focus();<br>      &#125;, 200); */ /* setTimeout(() =&gt; &#123; // 不正规写法(定时器里面不写时间)<br>        this.$refs.inputTitle.focus();<br>      &#125;); */<br><br>      this.$nextTick(function () &#123;<br>        this.$refs.inputTitle.focus();<br>      &#125;);<br>    &#125;, //失去焦点回调（真正执行修改逻辑）<br>    handleBlur(todoObj, e) &#123;<br>      todoObj.isEdit = false;<br>      if (!e.target.value.trim()) &#123;<br>        return alert(&quot;输入不能为空&quot;);<br>      &#125; // console.log(e.target.value);<br><br>      this.todoObj.title = e.target.value;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*item*/<br>li &#123;<br>  list-style: none;<br>  height: 36px;<br>  line-height: 36px;<br>  padding: 0 5px;<br>  border-bottom: 1px solid #ddd;<br>&#125;<br><br><br>li label &#123;<br>  float: left;<br>  cursor: pointer;<br>&#125;<br><br><br>li label li input &#123;<br>  vertical-align: middle;<br>  margin-right: 6px;<br>  position: relative;<br>  top: -1px;<br>&#125;<br><br><br>li button &#123;<br>  float: right;<br>  display: none;<br>  margin-top: 3px;<br>&#125;<br><br><br>li:before &#123;<br>  content: initial;<br>&#125;<br><br><br>li:last-child &#123;<br>  border-bottom: none;<br>&#125;<br><br><br>li:hover &#123;<br>  background-color: #ccc;<br>&#125;<br><br><br>li:hover button &#123;<br>  display: block;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyFooter.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-footer&quot; v-show=&quot;total&quot;&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;!-- &lt;input type=&quot;checkbox&quot; :checked=&quot;isAll&quot; @change=&quot;checkAll&quot; /&gt; --&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;isAll&quot; /&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;span&gt;<br>            &lt;span&gt;已完成&#123;&#123; calcTodoTotal &#125;&#125;&lt;/span&gt; / 全部&#123;&#123; total &#125;&#125;    <br>    &lt;/span&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;clearAll&quot;&gt;清除已完成任务&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyFooter&quot;,<br>  props: [&quot;todos&quot;],<br>  computed: &#123;<br>    // isAll() &#123;<br>    //   return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>    // &#125;,<br>    total() &#123;<br>      return this.todos.length;<br>    &#125;,<br>    calcTodoTotal() &#123;<br>      /*       let i = 0<br>      this.todos.forEach((todo) =&gt; &#123;<br>        if (todo.done === true) i++<br>      &#125;);<br>      return i */<br>      /*       return this.todos.reduce((pre, current) =&gt; &#123;<br>        // console.log(current.done);<br>        return pre + (current.done ? 1 : 0)<br>      &#125;, 0) */<br>      return this.todos.reduce((pre, todo) =&gt; pre + (todo.done ? 1 : 0), 0);<br>    &#125;,<br>    isAll: &#123;<br>      get() &#123;<br>        return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>      &#125;,<br>      set(value) &#123;<br>        // this.checkAllTodo(value)<br>        this.$emit(&quot;checkAllTodo&quot;, value);<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  methods: &#123;<br>    checkAll(e) &#123;<br>      // console.log(e.target.checked);<br>      this.checkAllTodo(e.target.checked);<br>    &#125;,<br>    clearAll() &#123;<br>      // this.clearAllTodo()<br>      this.$emit(&quot;clearAllTodo&quot;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*footer*/<br>.todo-footer &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  padding-left: 6px;<br>  margin-top: 5px;<br>&#125;<br><br><br>.todo-footer label &#123;<br>  display: inline-block;<br>  margin-right: 20px;<br>  cursor: pointer;<br>&#125;<br><br><br>.todo-footer label input &#123;<br>  position: relative;<br>  top: -1px;<br>  vertical-align: middle;<br>  margin-right: 5px;<br>&#125;<br><br><br>.todo-footer button &#123;<br>  float: right;<br>  margin-top: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div id=&quot;root&quot;&gt;<br>       <br>    &lt;div class=&quot;todo-container&quot;&gt;<br>           <br>      &lt;div class=&quot;todo-wrap&quot;&gt;<br>                &lt;MyHeader @addTodoObj=&quot;addTodoObj&quot; /&gt;        <br>        &lt;MyList :todos=&quot;todos&quot; /&gt;        <br>        &lt;MyFooter<br>          :todos=&quot;todos&quot;<br>          @checkAllTodo=&quot;checkAllTodo&quot;<br>          @clearAllTodo=&quot;clearAllTodo&quot;<br>        /&gt;<br>             <br>      &lt;/div&gt;<br>         <br>    &lt;/div&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>import MyHeader from &quot;./components/MyHeader.vue&quot;;<br>import MyList from &quot;./components/MyList.vue&quot;;<br>import MyFooter from &quot;./components/MyFooter.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    MyHeader,<br>    MyList,<br>    MyFooter,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [],<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    addTodoObj(todoObj) &#123;<br>      this.todos.unshift(todoObj);<br>    &#125;,<br>    checkTodo(id) &#123;<br>      this.todos.forEach((todoObj) =&gt; &#123;<br>        if (todoObj.id === id) &#123;<br>          todoObj.done = !todoObj.done; // console.log(todoObj.done);<br>        &#125;<br>      &#125;);<br>    &#125;, // 下划线只是用来占位的, _表示订阅名<br>    deleteTodoObj(_, id) &#123;<br>      if (confirm(&quot;是否确定删除&quot;)) &#123;<br>        this.todos = this.todos.filter((todo) =&gt; &#123;<br>          return todo.id !== id;<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    checkAllTodo(value) &#123;<br>      this.todos.forEach((todo) =&gt; &#123;<br>        todo.done = value;<br>      &#125;);<br>    &#125;,<br>    clearAllTodo() &#123;<br>      this.todos = this.todos.filter((todo) =&gt; &#123;<br>        return !todo.done;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>  watch: &#123;<br>    todos: &#123;<br>      deep: true,<br>      handler(value) &#123;<br>        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;<br>    this.$bus.$on(&quot;checkTodo&quot;, this.checkTodo); // this.$bus.$on(&#x27;deleteTodoObj&#x27;, this.deleteTodoObj)<br>    this.pubId = pubsub.subscribe(&quot;deleteTodoObj&quot;, this.deleteTodoObj);<br>  &#125;,<br>  beforeDestroy() &#123;<br>    pubsub.unsubscribe(this.pubId);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*base*/<br>body &#123;<br>  background: #fff;<br>&#125;<br><br><br>.btn &#123;<br>  display: inline-block;<br>  padding: 4px 12px;<br>  margin-bottom: 0;<br>  font-size: 14px;<br>  line-height: 20px;<br>  text-align: center;<br>  vertical-align: middle;<br>  cursor: pointer;<br>  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),<br>    0 1px 2px rgba(0, 0, 0, 0.05);<br>  border-radius: 4px;<br>&#125;<br><br><br>.btn-danger &#123;<br>  color: #fff;<br>  background-color: #da4f49;<br>  border: 1px solid #bd362f;<br>&#125;<br><br><br>.btn-edit &#123;<br>  color: #fff;<br>  background-color: skyblue;<br>  border: 1px solid rgb(103, 159, 180);<br>  margin-right: 5px;<br>&#125;<br><br><br>.btn-danger:hover &#123;<br>  color: #fff;<br>  background-color: #bd362f;<br>&#125;<br><br><br>.btn:focus &#123;<br>  outline: none;<br>&#125;<br><br><br>.todo-container &#123;<br>  width: 600px;<br>  margin: 0 auto;<br>&#125;<br>.todo-container .todo-wrap &#123;<br>  padding: 10px;<br>  border: 1px solid #ddd;<br>  border-radius: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><ol><li><p>作用：在插入、更新或移除 DOM 元素时，在合适的时候给元素添加样式类名。</p></li><li><p>图示：<img src="http://cdn.xiamu.icu//FiiuK6ZczbWD15-FuMyVCfrml0k7.com/app/a/100520146/5990c1dff7dc7a8fb3b34b4462bd0105"></p></li><li><p>写法：</p></li><li><p>准备好样式：</p><ul><li>元素进入的样式：<ol><li>v-enter：进入的起点</li><li>v-enter-active：进入过程中</li><li>v-enter-to：进入的终点</li></ol></li><li>元素离开的样式：<ol><li>v-leave：离开的起点</li><li>v-leave-active：离开过程中</li><li>v-leave-to：离开的终点</li></ol></li></ul></li><li><p>使用<code>&lt;transition&gt;</code>包裹要过度的元素，并配置 name 属性：</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;transition name=&quot;hello&quot;&gt;<br>&lt;h1 v-show=&quot;isShow&quot;&gt;你好啊！&lt;/h1&gt;<br>&lt;/transition&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>备注：若有多个元素需要过度，则需要使用：<code>&lt;transition-group&gt;</code>，且每个元素都要指定<code>key</code>值。</li></ol><p>集成第三方动画<br>$ npm install animate.css –save<br>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div id=&quot;root&quot;&gt;<br>       <br>    &lt;div class=&quot;todo-container&quot;&gt;<br>           <br>      &lt;div class=&quot;todo-wrap&quot;&gt;<br>                &lt;MyHeader @addTodoObj=&quot;addTodoObj&quot; /&gt;        <br>        &lt;MyList :todos=&quot;todos&quot; /&gt;        <br>        &lt;MyFooter<br>          :todos=&quot;todos&quot;<br>          @checkAllTodo=&quot;checkAllTodo&quot;<br>          @clearAllTodo=&quot;clearAllTodo&quot;<br>        /&gt;<br>             <br>      &lt;/div&gt;<br>         <br>    &lt;/div&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>import MyHeader from &quot;./components/MyHeader.vue&quot;;<br>import MyList from &quot;./components/MyList.vue&quot;;<br>import MyFooter from &quot;./components/MyFooter.vue&quot;;<br><br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    MyHeader,<br>    MyList,<br>    MyFooter,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      todos: JSON.parse(localStorage.getItem(&quot;todos&quot;)) || [],<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    addTodoObj(todoObj) &#123;<br>      this.todos.unshift(todoObj);<br>    &#125;,<br>    checkTodo(id) &#123;<br>      this.todos.forEach((todoObj) =&gt; &#123;<br>        if (todoObj.id === id) &#123;<br>          todoObj.done = !todoObj.done; // console.log(todoObj.done);<br>        &#125;<br>      &#125;);<br>    &#125;, // 下划线只是用来占位的, _表示订阅名<br>    deleteTodoObj(_, id) &#123;<br>      if (confirm(&quot;是否确定删除&quot;)) &#123;<br>        this.todos = this.todos.filter((todo) =&gt; &#123;<br>          return todo.id !== id;<br>        &#125;);<br>      &#125;<br>    &#125;,<br>    checkAllTodo(value) &#123;<br>      this.todos.forEach((todo) =&gt; &#123;<br>        todo.done = value;<br>      &#125;);<br>    &#125;,<br>    clearAllTodo() &#123;<br>      this.todos = this.todos.filter((todo) =&gt; &#123;<br>        return !todo.done;<br>      &#125;);<br>    &#125;,<br>  &#125;,<br>  watch: &#123;<br>    todos: &#123;<br>      deep: true,<br>      handler(value) &#123;<br>        localStorage.setItem(&quot;todos&quot;, JSON.stringify(value));<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;<br>    this.$bus.$on(&quot;checkTodo&quot;, this.checkTodo); // this.$bus.$on(&#x27;deleteTodoObj&#x27;, this.deleteTodoObj)<br>    this.pubId = pubsub.subscribe(&quot;deleteTodoObj&quot;, this.deleteTodoObj);<br>  &#125;,<br>  beforeDestroy() &#123;<br>    pubsub.unsubscribe(this.pubId);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*base*/<br>body &#123;<br>  background: #fff;<br>&#125;<br><br><br>.btn &#123;<br>  display: inline-block;<br>  padding: 4px 12px;<br>  margin-bottom: 0;<br>  font-size: 14px;<br>  line-height: 20px;<br>  text-align: center;<br>  vertical-align: middle;<br>  cursor: pointer;<br>  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),<br>    0 1px 2px rgba(0, 0, 0, 0.05);<br>  border-radius: 4px;<br>&#125;<br><br><br>.btn-danger &#123;<br>  color: #fff;<br>  background-color: #da4f49;<br>  border: 1px solid #bd362f;<br>&#125;<br><br><br>.btn-edit &#123;<br>  color: #fff;<br>  background-color: skyblue;<br>  border: 1px solid rgb(103, 159, 180);<br>  margin-right: 5px;<br>&#125;<br><br><br>.btn-danger:hover &#123;<br>  color: #fff;<br>  background-color: #bd362f;<br>&#125;<br><br><br>.btn:focus &#123;<br>  outline: none;<br>&#125;<br><br><br>.todo-container &#123;<br>  width: 600px;<br>  margin: 0 auto;<br>&#125;<br>.todo-container .todo-wrap &#123;<br>  padding: 10px;<br>  border: 1px solid #ddd;<br>  border-radius: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyHeader.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-header&quot;&gt;<br>       <br>    &lt;input<br>      type=&quot;text&quot;<br>      v-model=&quot;todoName&quot;<br>      @keyup.enter=&quot;add&quot;<br>      placeholder=&quot;请输入你的任务名称，按回车键确认&quot;<br>    /&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; nanoid &#125; from &quot;nanoid&quot;;<br>export default &#123;<br>  name: &quot;MyHeader&quot;, // props: [&quot;addTodoObj&quot;],<br>  data() &#123;<br>    return &#123;<br>      todoName: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      if (!this.todoName) &#123;<br>        alert(&quot;请输入点什么吧&quot;);<br>        return;<br>      &#125;<br>      const todoObj = &#123; id: nanoid(), title: this.todoName, done: false &#125;; // console.log(todoObj); // this.addTodoObj(todoObj);<br>      this.$emit(&quot;addTodoObj&quot;, todoObj);<br>      this.todoName = &quot;&quot;;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*header*/<br>.todo-header input &#123;<br>  width: 560px;<br>  height: 28px;<br>  font-size: 14px;<br>  border: 1px solid #ccc;<br>  border-radius: 4px;<br>  padding: 4px 7px;<br>&#125;<br><br><br>.todo-header input:focus &#123;<br>  outline: none;<br>  border-color: rgba(82, 168, 236, 0.8);<br>  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),<br>    0 0 8px rgba(82, 168, 236, 0.6);<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyList.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;ul class=&quot;todo-main&quot;&gt;<br>       <br>    &lt;!-- &lt;transition-group <br>    appear<br>    name=&quot;todo&quot;<br>    &gt; --&gt;<br>       <br>    &lt;transition-group<br>      appear<br>      name=&quot;animate__animated animate__bounce&quot;<br>      enter-active-class=&quot;animate__headShake&quot;<br>      leave-active-class=&quot;animate__bounceOut&quot;<br>    &gt;<br>           <br>      &lt;MyItem v-for=&quot;todoObj in todos&quot; :key=&quot;todoObj.id&quot; :todoObj=&quot;todoObj&quot; /&gt;  <br>       <br>    &lt;/transition-group&gt;<br>     <br>  &lt;/ul&gt;<br>&lt;/template&gt;<br><br>&lt;script scoped&gt;<br>import &quot;animate.css&quot;;<br>import MyItem from &quot;./MyItem.vue&quot;;<br>export default &#123;<br>  name: &quot;MyList&quot;,<br>  components: &#123;<br>    MyItem,<br>  &#125;,<br>  props: [&quot;todos&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>/*main*/<br>.todo-main &#123;<br>  margin-left: 0px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding: 0px;<br>&#125;<br><br><br>.todo-empty &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  border: 1px solid #ddd;<br>  border-radius: 2px;<br>  padding-left: 5px;<br>  margin-top: 10px;<br>&#125;<br><br><br>.todo-enter-active &#123;<br>  animation: atguigu 0.5s linear;<br>&#125;<br><br><br>.todo-leave-active &#123;<br>  animation: atguigu 0.5s linear reverse;<br>&#125;<br><br><br>@keyframes atguigu &#123;<br>  from &#123;<br>    transform: translateX(100%);<br>  &#125;<br>  to &#123;<br>    transform: translateX(0);<br>  &#125;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyItem.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;li&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;input<br>        type=&quot;checkbox&quot;<br>        :checked=&quot;todoObj.done&quot;<br>        @change=&quot;handleCheck(todoObj.id)&quot;<br>      /&gt;<br>            &lt;span v-show=&quot;!todoObj.isEdit&quot;&gt;&#123;&#123; todoObj.title &#125;&#125;&lt;/span&gt;      <br>      &lt;input<br>        v-show=&quot;todoObj.isEdit&quot;<br>        type=&quot;text&quot;<br>        :value=&quot;todoObj.title&quot;<br>        @blur=&quot;handleBlur(todoObj, $event)&quot;<br>        ref=&quot;inputTitle&quot;<br>      /&gt;<br>         <br>    &lt;/label&gt;<br>       <br>    &lt;!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props --&gt;<br>       <br>    &lt;!-- &lt;input type=&quot;checkbox&quot; v-model=&quot;todoObj.done&quot;/&gt; --&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;handleDelete(todoObj.id)&quot;&gt;<br>            删除    <br>    &lt;/button&gt;<br>       <br>    &lt;button<br>      class=&quot;btn btn-edit&quot;<br>      @click=&quot;handleEdit(todoObj)&quot;<br>      v-show=&quot;!todoObj.isEdit&quot;<br>    &gt;<br>            编辑    <br>    &lt;/button&gt;<br>     <br>  &lt;/li&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>export default &#123;<br>  name: &quot;MyItem&quot;,<br>  props: [&quot;todoObj&quot;],<br>  data() &#123;<br>    return &#123;&#125;;<br>  &#125;,<br>  methods: &#123;<br>    handleCheck(id) &#123;<br>      // this.checkTodo(id);<br>      this.$bus.$emit(&quot;checkTodo&quot;, id);<br>    &#125;,<br>    handleDelete(id) &#123;<br>      // this.deleteTodoObj(id);<br>      // this.$bus.$emit(&quot;deleteTodoObj&quot;, id);<br>      pubsub.publish(&quot;deleteTodoObj&quot;, id);<br>    &#125;, //编辑<br>    handleEdit(todoObj) &#123;<br>      if (todoObj.hasOwnProperty(&quot;isEdit&quot;)) &#123;<br>        todoObj.isEdit = true;<br>      &#125; else &#123;<br>        this.$set(todoObj, &quot;isEdit&quot;, true);<br>      &#125; /* setTimeout(() =&gt; &#123; // 设置定时器<br>        this.$refs.inputTitle.focus();<br>      &#125;, 200); */ /* setTimeout(() =&gt; &#123; // 不正规写法(定时器里面不写时间)<br>        this.$refs.inputTitle.focus();<br>      &#125;); */<br><br>      this.$nextTick(function () &#123;<br>        this.$refs.inputTitle.focus();<br>      &#125;);<br>    &#125;, //失去焦点回调（真正执行修改逻辑）<br>    handleBlur(todoObj, e) &#123;<br>      todoObj.isEdit = false;<br>      if (!e.target.value.trim()) &#123;<br>        return alert(&quot;输入不能为空&quot;);<br>      &#125; // console.log(e.target.value);<br><br>      this.todoObj.title = e.target.value;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*item*/<br>li &#123;<br>  list-style: none;<br>  height: 36px;<br>  line-height: 36px;<br>  padding: 0 5px;<br>  border-bottom: 1px solid #ddd;<br>&#125;<br><br><br>li label &#123;<br>  float: left;<br>  cursor: pointer;<br>&#125;<br><br><br>li label li input &#123;<br>  vertical-align: middle;<br>  margin-right: 6px;<br>  position: relative;<br>  top: -1px;<br>&#125;<br><br><br>li button &#123;<br>  float: right;<br>  display: none;<br>  margin-top: 3px;<br>&#125;<br><br><br>li:before &#123;<br>  content: initial;<br>&#125;<br><br><br>li:last-child &#123;<br>  border-bottom: none;<br>&#125;<br><br><br>li:hover &#123;<br>  background-color: #ccc;<br>&#125;<br><br><br>li:hover button &#123;<br>  display: block;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>MyFooter.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;todo-footer&quot; v-show=&quot;total&quot;&gt;<br>       <br>    &lt;label&gt;<br>           <br>      &lt;!-- &lt;input type=&quot;checkbox&quot; :checked=&quot;isAll&quot; @change=&quot;checkAll&quot; /&gt; --&gt;<br>            &lt;input type=&quot;checkbox&quot; v-model=&quot;isAll&quot; /&gt;    <br>    &lt;/label&gt;<br>       <br>    &lt;span&gt;<br>            &lt;span&gt;已完成&#123;&#123; calcTodoTotal &#125;&#125;&lt;/span&gt; / 全部&#123;&#123; total &#125;&#125;    <br>    &lt;/span&gt;<br>       <br>    &lt;button class=&quot;btn btn-danger&quot; @click=&quot;clearAll&quot;&gt;清除已完成任务&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;MyFooter&quot;,<br>  props: [&quot;todos&quot;],<br>  computed: &#123;<br>    // isAll() &#123;<br>    //   return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>    // &#125;,<br>    total() &#123;<br>      return this.todos.length;<br>    &#125;,<br>    calcTodoTotal() &#123;<br>      /*       let i = 0<br>      this.todos.forEach((todo) =&gt; &#123;<br>        if (todo.done === true) i++<br>      &#125;);<br>      return i */<br>      /*       return this.todos.reduce((pre, current) =&gt; &#123;<br>        // console.log(current.done);<br>        return pre + (current.done ? 1 : 0)<br>      &#125;, 0) */<br>      return this.todos.reduce((pre, todo) =&gt; pre + (todo.done ? 1 : 0), 0);<br>    &#125;,<br>    isAll: &#123;<br>      get() &#123;<br>        return this.total === this.calcTodoTotal &amp;&amp; this.total &gt; 0;<br>      &#125;,<br>      set(value) &#123;<br>        // this.checkAllTodo(value)<br>        this.$emit(&quot;checkAllTodo&quot;, value);<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  methods: &#123;<br>    checkAll(e) &#123;<br>      // console.log(e.target.checked);<br>      this.checkAllTodo(e.target.checked);<br>    &#125;,<br>    clearAll() &#123;<br>      // this.clearAllTodo()<br>      this.$emit(&quot;clearAllTodo&quot;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>/*footer*/<br>.todo-footer &#123;<br>  height: 40px;<br>  line-height: 40px;<br>  padding-left: 6px;<br>  margin-top: 5px;<br>&#125;<br><br><br>.todo-footer label &#123;<br>  display: inline-block;<br>  margin-right: 20px;<br>  cursor: pointer;<br>&#125;<br><br><br>.todo-footer label input &#123;<br>  position: relative;<br>  top: -1px;<br>  vertical-align: middle;<br>  margin-right: 5px;<br>&#125;<br><br><br>.todo-footer button &#123;<br>  float: right;<br>  margin-top: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h2 id="代理服务器"><a href="#代理服务器" class="headerlink" title="代理服务器"></a>代理服务器</h2><p>PS E:\Code\Vue\vue_test&gt; npm i axios</p><p><img src="http://cdn.xiamu.icu//FpFedqXkf05PvdyKsa_tftlNfyzr.png"><br>左边的 8080 是前端, 前端想跟 5000 后端要数据, 会产生跨域问题, 但是 8080 前端跟 8080 服务器是可以正常使用 AJAX 请求的, 8080 服务器跟 5000 服务器之间通信不会使用 AJAX 技术, 所以不存在所谓的跨域问题\</p><p>尽管 changeOrigin 设置 false 属性, F12 开发工具查看的 Referer 还是显示着 8080 端口的<br>这是因为浏览器只是将第一层请求显示给你（因为第一层请求是请求的本地服务器，域名、端口号和前端页面的域名、端口号都是一致的），第一层请求也就是发给代理服务器的请求，而修改 Host 的工作是代理服务器做的，浏览器当然不会显示 Host 已经被修改的状态！<br><img src="http://cdn.xiamu.icu//FlhA41QkGDGgmKyssO0l2T6u38MT.png"><br>但是服务器中记录本地的端口来源于 8080 端口, 而不是 5000, 说明 changeOrigin 设置 false 已经生效了<br><img src="http://cdn.xiamu.icu//FqNlH2I8WypRQW2XKLGxZWB4Frzk.png"></p><p>安装 vue-resource<br>E:\Code\Vue\vue_test&gt; npm i vue-resource</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><pre><code class="hljs">在vue.config.js中添加如下配置：</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">devServer</span>: &#123;<br>  <span class="hljs-attr">proxy</span>: <span class="hljs-string">&quot;http://localhost:5000&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>说明：</p><ol><li>优点：配置简单，请求资源时直接发给前端（8080）即可。</li><li>缺点：不能配置多个代理，不能灵活的控制请求是否走代理。</li><li>工作方式：若按照上述配置代理，当请求了前端不存在的资源时，那么该请求会转发给服务器 （优先匹配前端资源）</li></ol><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><pre><code class="hljs">编写vue.config.js配置具体代理规则：</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">devServer</span>: &#123;<br>    <span class="hljs-attr">proxy</span>: &#123;<br>      <span class="hljs-string">&quot;/api1&quot;</span>: &#123;<br>        <span class="hljs-comment">// 匹配所有以 &#x27;/api1&#x27;开头的请求路径</span><br>        <span class="hljs-attr">target</span>: <span class="hljs-string">&quot;http://localhost:5000&quot;</span>, <span class="hljs-comment">// 代理目标的基础路径</span><br>        <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">pathRewrite</span>: &#123; <span class="hljs-string">&quot;^/api1&quot;</span>: <span class="hljs-string">&quot;&quot;</span> &#125;,<br>      &#125;,<br>      <span class="hljs-string">&quot;/api2&quot;</span>: &#123;<br>        <span class="hljs-comment">// 匹配所有以 &#x27;/api2&#x27;开头的请求路径</span><br>        <span class="hljs-attr">target</span>: <span class="hljs-string">&quot;http://localhost:5001&quot;</span>, <span class="hljs-comment">// 代理目标的基础路径</span><br>        <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">pathRewrite</span>: &#123; <span class="hljs-string">&quot;^/api2&quot;</span>: <span class="hljs-string">&quot;&quot;</span> &#125;,<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>&#125;;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">   changeOrigin设置为true时，服务器收到的请求头中的host为：localhost:5000</span><br><span class="hljs-comment">   changeOrigin设置为false时，服务器收到的请求头中的host为：localhost:8080</span><br><span class="hljs-comment">   changeOrigin默认值为true</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><p>说明：</p><ol><li>优点：可以配置多个代理，且可以灵活的控制请求是否走代理。</li><li>缺点：配置略微繁琐，请求资源时必须加前缀。</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>        &lt;button @click=&quot;getStudents&quot;&gt;获取学生信息&lt;/button&gt;    <br>    &lt;button @click=&quot;getCars&quot;&gt;获取汽车信息&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import axios from &quot;axios&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  methods: &#123;<br>    getStudents() &#123;<br>      axios.get(&quot;http://localhost:8080/atguigu/students&quot;).then(<br>        (response) =&gt; &#123;<br>          console.log(response.data);<br>        &#125;,<br>        (error) =&gt; &#123;<br>          console.log(error.message);<br>        &#125;<br>      );<br>    &#125;,<br>    getCars() &#123;<br>      axios.get(&quot;http://localhost:8080/demo/cars&quot;).then(<br>        (response) =&gt; &#123;<br>          console.log(response.data);<br>        &#125;,<br>        (error) =&gt; &#123;<br>          console.log(error.message);<br>        &#125;<br>      );<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="github-搜索案例"><a href="#github-搜索案例" class="headerlink" title="github 搜索案例"></a>github 搜索案例</h2><h3 id="axios-实现"><a href="#axios-实现" class="headerlink" title="axios 实现"></a>axios 实现</h3><p>test.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">//编写一个javascript对象 ES6</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> user = &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小武&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span>,</span><br><span class="language-javascript">  &#125;; <span class="hljs-comment">//将JS对象转换为JSON对象</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> json = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(user);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(json);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==================&quot;</span>); <span class="hljs-comment">//将JSON对象转换为JS对象 // var obj = JSON.parse(json);</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> obj = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(json);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;    &lt;Search /&gt;     &lt;List /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Search from &quot;./components/Search&quot;;<br>import List from &quot;./components/List&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Search,<br>    List,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>Search.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;section class=&quot;jumbotron&quot;&gt;<br>       <br>    &lt;h3 class=&quot;jumbotron-heading&quot;&gt;Search Github Users&lt;/h3&gt;<br>       <br>    &lt;div&gt;<br>           <br>      &lt;input<br>        type=&quot;text&quot;<br>        placeholder=&quot;enter the name you search&quot;<br>        v-model=&quot;keyWord&quot;<br>      /&gt;<br>                    &lt;button @click=&quot;searchUsers&quot;&gt;Search&lt;/button&gt;    <br>    &lt;/div&gt;<br>     <br>  &lt;/section&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>import axios from &quot;axios&quot;;<br>export default &#123;<br>  name: &quot;Search&quot;,<br>  data() &#123;<br>    return &#123;<br>      keyWord: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    searchUsers() &#123;<br>      pubsub.publish(&quot;updateListData&quot;, &#123;<br>        isFirst: false,<br>        isLoading: true,<br>        errMsg: &quot;&quot;,<br>        users: [],<br>      &#125;); /*       this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>        isFirst: false,<br>        isLoading: true,<br>        errMsg: &quot;&quot;,<br>        users: [],<br>      &#125;); */<br>      axios.get(`https://api.github.com/search/users?q=$&#123;this.keyWord&#125;`).then(<br>        (response) =&gt; &#123;<br>          console.log(<br>            &quot;请求成功了&quot;,<br>            response.data.items<br>          ); /* this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: &quot;&quot;,<br>            users: response.data.items,<br>          &#125;); */<br>          pubsub.publish(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: &quot;&quot;,<br>            users: response.data.items,<br>          &#125;);<br>        &#125;,<br>        (error) =&gt; &#123;<br>          console.log(<br>            &quot;请求失败了&quot;,<br>            error.message<br>          ); /* this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: error.message,<br>            users: [],<br>          &#125;); */<br>          pubsub.publish(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: error.message,<br>            users: [],<br>          &#125;);<br>        &#125;<br>      );<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>List.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;section class=&quot;jumbotron&quot;&gt;<br>       <br>    &lt;h3 class=&quot;jumbotron-heading&quot;&gt;Search Github Users&lt;/h3&gt;<br>       <br>    &lt;div&gt;<br>           <br>      &lt;input<br>        type=&quot;text&quot;<br>        placeholder=&quot;enter the name you search&quot;<br>        v-model=&quot;keyWord&quot;<br>      /&gt;<br>                    &lt;button @click=&quot;searchUsers&quot;&gt;Search&lt;/button&gt;    <br>    &lt;/div&gt;<br>     <br>  &lt;/section&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>import axios from &quot;axios&quot;;<br>export default &#123;<br>  name: &quot;Search&quot;,<br>  data() &#123;<br>    return &#123;<br>      keyWord: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    searchUsers() &#123;<br>      pubsub.publish(&quot;updateListData&quot;, &#123;<br>        isFirst: false,<br>        isLoading: true,<br>        errMsg: &quot;&quot;,<br>        users: [],<br>      &#125;); /*       this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>        isFirst: false,<br>        isLoading: true,<br>        errMsg: &quot;&quot;,<br>        users: [],<br>      &#125;); */<br>      axios.get(`https://api.github.com/search/users?q=$&#123;this.keyWord&#125;`).then(<br>        (response) =&gt; &#123;<br>          console.log(<br>            &quot;请求成功了&quot;,<br>            response.data.items<br>          ); /* this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: &quot;&quot;,<br>            users: response.data.items,<br>          &#125;); */<br>          pubsub.publish(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: &quot;&quot;,<br>            users: response.data.items,<br>          &#125;);<br>        &#125;,<br>        (error) =&gt; &#123;<br>          console.log(<br>            &quot;请求失败了&quot;,<br>            error.message<br>          ); /* this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: error.message,<br>            users: [],<br>          &#125;); */<br>          pubsub.publish(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: error.message,<br>            users: [],<br>          &#125;);<br>        &#125;<br>      );<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="vue-resource-实现"><a href="#vue-resource-实现" class="headerlink" title="vue-resource 实现"></a>vue-resource 实现</h3><p>test.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">//编写一个javascript对象 ES6</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> user = &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;小武&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span>,</span><br><span class="language-javascript">  &#125;; <span class="hljs-comment">//将JS对象转换为JSON对象</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> json = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(user);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(json);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(user);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==================&quot;</span>); <span class="hljs-comment">//将JSON对象转换为JS对象 // var obj = JSON.parse(json);</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> obj = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(json);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;    &lt;Search /&gt;     &lt;List /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Search from &quot;./components/Search&quot;;<br>import List from &quot;./components/List&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Search,<br>    List,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>Search.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;section class=&quot;jumbotron&quot;&gt;<br>       <br>    &lt;h3 class=&quot;jumbotron-heading&quot;&gt;Search Github Users&lt;/h3&gt;<br>       <br>    &lt;div&gt;<br>           <br>      &lt;input<br>        type=&quot;text&quot;<br>        placeholder=&quot;enter the name you search&quot;<br>        v-model=&quot;keyWord&quot;<br>      /&gt;<br>                    &lt;button @click=&quot;searchUsers&quot;&gt;Search&lt;/button&gt;    <br>    &lt;/div&gt;<br>     <br>  &lt;/section&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>export default &#123;<br>  name: &quot;Search&quot;,<br>  data() &#123;<br>    return &#123;<br>      keyWord: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    searchUsers() &#123;<br>      console.log(this);<br>      pubsub.publish(&quot;updateListData&quot;, &#123;<br>        isFirst: false,<br>        isLoading: true,<br>        errMsg: &quot;&quot;,<br>        users: [],<br>      &#125;); /*       this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>        isFirst: false,<br>        isLoading: true,<br>        errMsg: &quot;&quot;,<br>        users: [],<br>      &#125;); */<br>      this.$http<br>        .get(`https://api.github.com/search/users?q=$&#123;this.keyWord&#125;`)<br>        .then(<br>          (response) =&gt; &#123;<br>            console.log(<br>              &quot;请求成功了&quot;,<br>              response.data.items<br>            ); /* this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: &quot;&quot;,<br>            users: response.data.items,<br>          &#125;); */<br>            pubsub.publish(&quot;updateListData&quot;, &#123;<br>              isLoading: false,<br>              errMsg: &quot;&quot;,<br>              users: response.data.items,<br>            &#125;);<br>          &#125;,<br>          (error) =&gt; &#123;<br>            console.log(<br>              &quot;请求失败了&quot;,<br>              error.message<br>            ); /* this.$bus.$emit(&quot;updateListData&quot;, &#123;<br>            isLoading: false,<br>            errMsg: error.message,<br>            users: [],<br>          &#125;); */<br>            pubsub.publish(&quot;updateListData&quot;, &#123;<br>              isLoading: false,<br>              errMsg: error.message,<br>              users: [],<br>            &#125;);<br>          &#125;<br>        );<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>List.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;row&quot;&gt;<br>       <br>    &lt;!-- 展示用户列表 --&gt;<br>       <br>    &lt;div<br>      v-show=&quot;info.users.length&quot;<br>      class=&quot;card&quot;<br>      v-for=&quot;user in info.users&quot;<br>      :key=&quot;user.login&quot;<br>    &gt;<br>           <br>      &lt;a :href=&quot;user.html_url&quot; target=&quot;_blank&quot;&gt;<br>                &lt;img :src=&quot;user.avatar_url&quot; style=&quot;width: 100px&quot; /&gt;      <br>      &lt;/a&gt;<br>           <br>      &lt;p class=&quot;card-text&quot;&gt;&#123;&#123; user.login &#125;&#125;&lt;/p&gt;<br>         <br>    &lt;/div&gt;<br>       <br>    &lt;!-- 展示欢迎词 --&gt;<br>       <br>    &lt;h1 v-show=&quot;info.isFirst&quot;&gt;欢迎使用!&lt;/h1&gt;<br>       <br>    &lt;!-- 展示加载中 --&gt;<br>       <br>    &lt;h1 v-show=&quot;info.isLoading&quot;&gt;加载中...&lt;/h1&gt;<br>       <br>    &lt;!-- 展示错误信息 --&gt;<br>       <br>    &lt;h1 v-show=&quot;info.errMsg&quot;&gt;&#123;&#123; info.errMsg &#125;&#125;&lt;/h1&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import pubsub from &quot;pubsub-js&quot;;<br>export default &#123;<br>  name: &quot;List&quot;,<br>  data() &#123;<br>    return &#123;<br>      info: &#123;<br>        isFirst: true,<br>        isLoading: false,<br>        errMsg: &quot;&quot;,<br>        users: [],<br>      &#125;,<br>    &#125;;<br>  &#125;,<br>  mounted() &#123;<br>    pubsub.subscribe(&quot;updateListData&quot;, (_, dataObj) =&gt; &#123;<br>      console.log(&quot;List收到了数据&quot;, dataObj);<br>      this.info = &#123; ...this.info, ...dataObj &#125;;<br>    &#125;); /* this.$bus.$on(&quot;updateListData&quot;, (dataObj) =&gt; &#123;<br>      // console.log(&quot;List收到了数据&quot;, users);<br>      this.info = &#123; ...this.info, ...dataObj &#125;;<br>    &#125;); */<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.album &#123;<br>  min-height: 50rem; /* Can be removed; just added for demo purposes */<br>  padding-top: 3rem;<br>  padding-bottom: 3rem;<br>  background-color: #f7f7f7;<br>&#125;<br><br><br>.card &#123;<br>  float: left;<br>  width: 33.333%;<br>  padding: 0.75rem;<br>  margin-bottom: 2rem;<br>  border: 1px solid #efefef;<br>  text-align: center;<br>&#125;<br><br><br>.card &gt; img &#123;<br>  margin-bottom: 0.75rem;<br>  border-radius: 100px;<br>&#125;<br><br><br>.card-text &#123;<br>  font-size: 85%;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><ol><li>作用：让父组件可以向子组件指定位置插入 html 结构，也是一种组件间通信的方式，适用于 <strong>父组件 &#x3D;&#x3D;&#x3D;&gt; 子组件</strong> 。</li><li>分类：默认插槽、具名插槽、作用域插槽</li><li>使用方式：</li><li>默认插槽：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">父组件中：<br>&lt;Category&gt;<br>           &lt;div&gt;html结构1&lt;/div&gt;<br>        &lt;/Category&gt;<br>子组件中：<br>&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;!-- 定义插槽 --&gt;<br>    &lt;slot&gt;插槽默认内容...&lt;/slot&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>具名插槽：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vue">父组件中：<br>&lt;Category&gt;<br>            &lt;template slot=&quot;center&quot;&gt;<br>              &lt;div&gt;html结构1&lt;/div&gt;<br>            &lt;/template&gt;<br><br>            &lt;template v-slot:footer&gt;<br>               &lt;div&gt;html结构2&lt;/div&gt;<br>            &lt;/template&gt;<br>        &lt;/Category&gt;<br>子组件中：<br>&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;!-- 定义插槽 --&gt;<br>    &lt;slot name=&quot;center&quot;&gt;插槽默认内容...&lt;/slot&gt;<br>    &lt;slot name=&quot;footer&quot;&gt;插槽默认内容...&lt;/slot&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><ol start="3"><li>作用域插槽：</li><li>理解：数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。（games 数据在 Category 组件中，但使用数据所遍历出来的结构由 App 组件决定）</li><li>具体编码：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs vue">父组件中：<br>&lt;Category&gt;<br>&lt;template scope=&quot;scopeData&quot;&gt;<br>&lt;!-- 生成的是ul列表 --&gt;<br>&lt;ul&gt;<br>&lt;li v-for=&quot;g in scopeData.games&quot; :key=&quot;g&quot;&gt;&#123;&#123;g&#125;&#125;&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;/template&gt;<br>&lt;/Category&gt;<br><br>&lt;Category&gt;<br>&lt;template slot-scope=&quot;scopeData&quot;&gt;<br>&lt;!-- 生成的是h4标题 --&gt;<br>&lt;h4 v-for=&quot;g in scopeData.games&quot; :key=&quot;g&quot;&gt;&#123;&#123;g&#125;&#125;&lt;/h4&gt;<br>&lt;/template&gt;<br>&lt;/Category&gt;<br>子组件中：<br>&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;slot :games=&quot;games&quot;&gt;&lt;/slot&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Category&quot;,<br>  props: [&quot;title&quot;],<br>  //数据在子组件自身<br>  data() &#123;<br>    return &#123;<br>      games: [&quot;红色警戒&quot;, &quot;穿越火线&quot;, &quot;劲舞团&quot;, &quot;超级玛丽&quot;],<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码:"></a>代码:</h3><h4 id="默认插槽"><a href="#默认插槽" class="headerlink" title="默认插槽"></a>默认插槽</h4><p>Category.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h3&gt;&#123;&#123; title &#125;&#125;分类&lt;/h3&gt;<br>       <br>    &lt;!-- 定义一个插槽(挖个坑, 等着组件的使用者进行填充) --&gt;<br>        &lt;slot&gt;我是一个默认值, 当使用者没有传递具体结构时, 我会出现&lt;/slot&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Category&quot;,<br>  props: [&quot;title&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.category &#123;<br>  background-color: skyblue;<br>  width: 200px;<br>  height: 300px;<br>&#125;<br>h3 &#123;<br>  text-align: center;<br>  background-color: orange;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;<br>       <br>    &lt;Category title=&quot;美食&quot;&gt;<br>            &lt;img src=&quot;./美食.jpg&quot; alt=&quot;&quot; /&gt;    <br>    &lt;/Category&gt;<br>       <br>    &lt;Category title=&quot;游戏&quot;&gt;<br>           <br>      &lt;ul&gt;<br>               <br>        &lt;li v-for=&quot;(g, index) in games&quot; :key=&quot;index&quot;&gt;&#123;&#123; g &#125;&#125;&lt;/li&gt;<br>             <br>      &lt;/ul&gt;<br>         <br>    &lt;/Category&gt;<br>       <br>    &lt;Category title=&quot;电影&quot;&gt;<br>           <br>      &lt;video<br>        controls<br>        src=&quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&quot;<br>      &gt;&lt;/video&gt;<br>         <br>    &lt;/Category&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Category from &quot;./components/Category&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Category,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      foods: [&quot;火锅&quot;, &quot;烧烤&quot;, &quot;小龙虾&quot;, &quot;牛排&quot;],<br>      games: [&quot;红色警戒&quot;, &quot;穿越火线&quot;, &quot;劲舞团&quot;, &quot;超级玛丽&quot;],<br>      films: [&quot;《教父》&quot;, &quot;《拆弹专家》&quot;, &quot;《你好，李焕英》&quot;, &quot;《尚硅谷》&quot;],<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.container &#123;<br>  display: flex;<br>  justify-content: space-around;<br>&#125;<br><br><br>img &#123;<br>  width: 100%;<br>&#125;<br>video &#123;<br>  width: 100%;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h4><p>Category.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h3&gt;&#123;&#123; title &#125;&#125;分类&lt;/h3&gt;<br>       <br>    &lt;!-- 定义一个插槽(挖个坑, 等着组件的使用者进行填充) --&gt;<br>       <br>    &lt;slot name=&quot;center&quot;<br>      &gt;我是一个默认值, 当使用者没有传递具体结构时, 我会出现1&lt;/slot<br>    &gt;<br>       <br>    &lt;slot name=&quot;footer&quot;<br>      &gt;我是一个默认值, 当使用者没有传递具体结构时, 我会出现2&lt;/slot<br>    &gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Category&quot;,<br>  props: [&quot;title&quot;],<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.category &#123;<br>  background-color: skyblue;<br>  width: 200px;<br>  height: 300px;<br>&#125;<br>h3 &#123;<br>  text-align: center;<br>  background-color: orange;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;<br>       <br>    &lt;Category title=&quot;美食&quot;&gt;<br>            &lt;img slot=&quot;center&quot; src=&quot;./美食.jpg&quot; alt=&quot;&quot; /&gt;      <br>      &lt;a slot=&quot;footer&quot; href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;更多美食&lt;/a&gt;<br>         <br>    &lt;/Category&gt;<br>       <br>    &lt;Category title=&quot;游戏&quot;&gt;<br>           <br>      &lt;ul slot=&quot;center&quot;&gt;<br>               <br>        &lt;li v-for=&quot;(g, index) in games&quot; :key=&quot;index&quot;&gt;&#123;&#123; g &#125;&#125;&lt;/li&gt;<br>             <br>      &lt;/ul&gt;<br>           <br>      &lt;div slot=&quot;footer&quot; class=&quot;foot&quot;&gt;<br>                &lt;a href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;单机游戏&lt;/a&gt;    <br>            &lt;a href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;网络游戏&lt;/a&gt;      <br>      &lt;/div&gt;<br>         <br>    &lt;/Category&gt;<br>       <br>    &lt;Category title=&quot;电影&quot;&gt;<br>           <br>      &lt;video<br>        slot=&quot;center&quot;<br>        controls<br>        src=&quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&quot;<br>      &gt;&lt;/video&gt;<br>           <br>      &lt;!-- &lt;template slot=&quot;footer&quot;&gt; --&gt;<br>           <br>      &lt;!-- 注意v-slot:footer只能放在template上 --&gt;<br>           <br>      &lt;template v-slot:footer&gt;<br>               <br>        &lt;div class=&quot;foot&quot;&gt;<br>                    &lt;a href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;经典&lt;/a&gt;    <br>                &lt;a href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;热门&lt;/a&gt;        <br>            &lt;a href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot;&gt;推荐&lt;/a&gt;        <br>        &lt;/div&gt;<br>               <br>        &lt;h4&gt;欢迎前来观影&lt;/h4&gt;<br>             <br>      &lt;/template&gt;<br>         <br>    &lt;/Category&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Category from &quot;./components/Category&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Category,<br>  &#125;,<br>  data() &#123;<br>    return &#123;<br>      foods: [&quot;火锅&quot;, &quot;烧烤&quot;, &quot;小龙虾&quot;, &quot;牛排&quot;],<br>      games: [&quot;红色警戒&quot;, &quot;穿越火线&quot;, &quot;劲舞团&quot;, &quot;超级玛丽&quot;],<br>      films: [&quot;《教父》&quot;, &quot;《拆弹专家》&quot;, &quot;《你好，李焕英》&quot;, &quot;《尚硅谷》&quot;],<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.container,<br>.foot &#123;<br>  display: flex;<br>  justify-content: space-around;<br>&#125;<br><br><br>img &#123;<br>  width: 100%;<br>&#125;<br>video &#123;<br>  width: 100%;<br>&#125;<br>h4 &#123;<br>  text-align: center;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h4><p>Category.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h3&gt;&#123;&#123; title &#125;&#125;分类&lt;/h3&gt;<br>       <br>    &lt;!-- 定义一个插槽(挖个坑, 等着组件的使用者进行填充) --&gt;<br>       <br>    &lt;slot :games=&quot;games&quot;<br>      &gt;我是一个默认值, 当使用者没有传递具体结构时, 我会出现1&lt;/slot<br>    &gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Category&quot;,<br>  props: [&quot;title&quot;],<br>  data() &#123;<br>    return &#123;<br>      games: [&quot;红色警戒&quot;, &quot;穿越火线&quot;, &quot;劲舞团&quot;, &quot;超级玛丽&quot;],<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.category &#123;<br>  background-color: skyblue;<br>  width: 200px;<br>  height: 300px;<br>&#125;<br>h3 &#123;<br>  text-align: center;<br>  background-color: orange;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;<br>       <br>    &lt;!-- 数据不在这个当前vue文件中, 而在别的组件中, 但是想要决定组件中的结构, 就要使用作用域插槽 --&gt;<br>       <br>    &lt;Category title=&quot;游戏&quot;&gt;<br>           <br>      &lt;template scope=&quot;atguigu&quot;&gt;<br>               <br>        &lt;ul&gt;<br>                   <br>          &lt;li v-for=&quot;(g, index) in atguigu.games&quot; :key=&quot;index&quot;&gt;&#123;&#123; g &#125;&#125;&lt;/li&gt;<br>                 <br>        &lt;/ul&gt;<br>             <br>      &lt;/template&gt;<br>         <br>    &lt;/Category&gt;<br><br>       <br>    &lt;Category title=&quot;游戏&quot;&gt;<br>           <br>      &lt;template scope=&quot;&#123;games&#125;&quot;&gt;<br>               <br>        &lt;ol&gt;<br>                   <br>          &lt;li style=&quot;color:red&quot; v-for=&quot;(g, index) in games&quot; :key=&quot;index&quot;&gt;<br>            &#123;&#123; g &#125;&#125;<br>          &lt;/li&gt;<br>                 <br>        &lt;/ol&gt;<br>             <br>      &lt;/template&gt;<br>         <br>    &lt;/Category&gt;<br><br>       <br>    &lt;Category title=&quot;游戏&quot;&gt;<br>           <br>      &lt;template slot-scope=&quot;&#123; games &#125;&quot;&gt;<br>               <br>        &lt;h4 v-for=&quot;(g, index) in games&quot; :key=&quot;index&quot;&gt;&#123;&#123; g &#125;&#125;&lt;/h4&gt;<br>             <br>      &lt;/template&gt;<br>         <br>    &lt;/Category&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Category from &quot;./components/Category&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Category,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.container,<br>.foot &#123;<br>  display: flex;<br>  justify-content: space-around;<br>&#125;<br><br><br>img &#123;<br>  width: 100%;<br>&#125;<br>video &#123;<br>  width: 100%;<br>&#125;<br>h4 &#123;<br>  text-align: center;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h2><p>多组件共享数据–全局事件总线实现<br><img src="http://cdn.xiamu.icu//FuMy4PDGENZU1TiC98Pdisx31xaq.png"><br>多组件共享数据–vuex 实现<br><img src="http://cdn.xiamu.icu//FhetOor1f-3xp5dvNrzcRnlKttJq.png"></p><p>安装 vuex<br>PS E:\Code\Vue\vue_test&gt; npm i vuex@3<br><strong>注意 vue2 中, 要用 vuex 的 3 版本</strong><br><strong>vue3 中, 要用 vuex 的 4 版本</strong></p><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><pre><code class="hljs">    在Vue中实现集中式状态（数据）管理的一个Vue插件，对vue应用中多个组件的共享状态进行集中式的管理（读/写），也是一种组件间通信的方式，且适用于任意组件间通信。</code></pre><h3 id="2-何时使用？"><a href="#2-何时使用？" class="headerlink" title="2.何时使用？"></a>2.何时使用？</h3><pre><code class="hljs">    多个组件需要共享数据时</code></pre><h3 id="3-搭建-vuex-环境"><a href="#3-搭建-vuex-环境" class="headerlink" title="3.搭建 vuex 环境"></a>3.搭建 vuex 环境</h3><ol><li>创建文件：<code>src/store/index.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//引入Vue核心库</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">//引入Vuex</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><span class="hljs-comment">//应用Vuex插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-comment">//准备actions对象——响应组件中用户的动作</span><br><span class="hljs-keyword">const</span> actions = &#123;&#125;;<br><span class="hljs-comment">//准备mutations对象——修改state中的数据</span><br><span class="hljs-keyword">const</span> mutations = &#123;&#125;;<br><span class="hljs-comment">//准备state对象——保存具体的数据</span><br><span class="hljs-keyword">const</span> state = &#123;&#125;;<br><br><span class="hljs-comment">//创建并暴露store</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>&#125;);<br></code></pre></td></tr></table></figure><ol start="2"><li>在<code>main.js</code>中创建 vm 时传入<code>store</code>配置项</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">......<br><span class="hljs-comment">//引入store</span><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./store&#x27;</span><br>......<br><br><span class="hljs-comment">//创建vm</span><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br><span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#app&#x27;</span>,<br><span class="hljs-attr">render</span>: <span class="hljs-function"><span class="hljs-params">h</span> =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>store<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="4-基本使用"><a href="#4-基本使用" class="headerlink" title="4.基本使用"></a>4.基本使用</h3><ol><li>初始化数据、配置<code>actions</code>、配置<code>mutations</code>，操作文件<code>store.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//引入Vue核心库</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">//引入Vuex</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><span class="hljs-comment">//引用Vuex</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-comment">//响应组件中加的动作</span><br>  <span class="hljs-title function_">jia</span>(<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-comment">// console.log(&#x27;actions中的jia被调用了&#x27;,miniStore,value)</span><br>    context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-comment">//执行加</span><br>  <span class="hljs-title function_">JIA</span>(<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-comment">// console.log(&#x27;mutations中的JIA被调用了&#x27;,state,value)</span><br>    state.<span class="hljs-property">sum</span> += value;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">//初始化数据</span><br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>,<br>&#125;;<br><br><span class="hljs-comment">//创建并暴露store</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>&#125;);<br></code></pre></td></tr></table></figure><ol start="2"><li>组件中读取 vuex 中的数据：<code>$store.state.sum</code></li><li>组件中修改 vuex 中的数据：<code>$store.dispatch(&#39;action中的方法名&#39;,数据)</code> 或 <code>$store.commit(&#39;mutations中的方法名&#39;,数据)</code><blockquote><p>备注：若没有网络请求或其他业务逻辑，组件中也可以越过 actions，即不写<code>dispatch</code>，直接编写<code>commit</code></p></blockquote></li></ol><h3 id="5-getters-的使用"><a href="#5-getters-的使用" class="headerlink" title="5.getters 的使用"></a>5.getters 的使用</h3><ol><li>概念：当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工。</li><li>在<code>store.js</code>中追加<code>getters</code>配置</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">......<br><br><span class="hljs-keyword">const</span> getters = &#123;<br><span class="hljs-title function_">bigSum</span>(<span class="hljs-params">state</span>)&#123;<br><span class="hljs-keyword">return</span> state.<span class="hljs-property">sum</span> * <span class="hljs-number">10</span><br>&#125;<br>&#125;<br><br><span class="hljs-comment">//创建并暴露store</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>......<br>getters<br>&#125;)<br></code></pre></td></tr></table></figure><ol start="3"><li>组件中读取数据：<code>$store.getters.bigSum</code></li></ol><h3 id="6-四个-map-方法的使用"><a href="#6-四个-map-方法的使用" class="headerlink" title="6.四个 map 方法的使用"></a>6.四个 map 方法的使用</h3><ol><li><strong>mapState 方法：</strong>用于帮助我们映射<code>state</code>中的数据为计算属性</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">computed</span>: &#123;<br>    <span class="hljs-comment">//借助mapState生成计算属性：sum、school、subject（对象写法）</span><br>     ...<span class="hljs-title function_">mapState</span>(&#123;<span class="hljs-attr">sum</span>:<span class="hljs-string">&#x27;sum&#x27;</span>,<span class="hljs-attr">school</span>:<span class="hljs-string">&#x27;school&#x27;</span>,<span class="hljs-attr">subject</span>:<span class="hljs-string">&#x27;subject&#x27;</span>&#125;),<br><br>    <span class="hljs-comment">//借助mapState生成计算属性：sum、school、subject（数组写法）</span><br>    ...<span class="hljs-title function_">mapState</span>([<span class="hljs-string">&#x27;sum&#x27;</span>,<span class="hljs-string">&#x27;school&#x27;</span>,<span class="hljs-string">&#x27;subject&#x27;</span>]),<br>&#125;,<br></code></pre></td></tr></table></figure><ol start="2"><li><strong>mapGetters 方法：</strong>用于帮助我们映射<code>getters</code>中的数据为计算属性</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">computed</span>: &#123;<br>    <span class="hljs-comment">//借助mapGetters生成计算属性：bigSum（对象写法）</span><br>    ...<span class="hljs-title function_">mapGetters</span>(&#123;<span class="hljs-attr">bigSum</span>:<span class="hljs-string">&#x27;bigSum&#x27;</span>&#125;),<br><br>    <span class="hljs-comment">//借助mapGetters生成计算属性：bigSum（数组写法）</span><br>    ...<span class="hljs-title function_">mapGetters</span>([<span class="hljs-string">&#x27;bigSum&#x27;</span>])<br>&#125;,<br></code></pre></td></tr></table></figure><ol start="3"><li><strong>mapActions 方法：</strong>用于帮助我们生成与<code>actions</code>对话的方法，即：包含<code>$store.dispatch(xxx)</code>的函数</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">methods</span>:&#123;<br>    <span class="hljs-comment">//靠mapActions生成：incrementOdd、incrementWait（对象形式）</span><br>    ...<span class="hljs-title function_">mapActions</span>(&#123;<span class="hljs-attr">incrementOdd</span>:<span class="hljs-string">&#x27;jiaOdd&#x27;</span>,<span class="hljs-attr">incrementWait</span>:<span class="hljs-string">&#x27;jiaWait&#x27;</span>&#125;)<br><br>    <span class="hljs-comment">//靠mapActions生成：incrementOdd、incrementWait（数组形式）</span><br>    ...<span class="hljs-title function_">mapActions</span>([<span class="hljs-string">&#x27;jiaOdd&#x27;</span>,<span class="hljs-string">&#x27;jiaWait&#x27;</span>])<br>&#125;<br></code></pre></td></tr></table></figure><ol start="4"><li><strong>mapMutations 方法：</strong>用于帮助我们生成与<code>mutations</code>对话的方法，即：包含<code>$store.commit(xxx)</code>的函数</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">methods</span>:&#123;<br>    <span class="hljs-comment">//靠mapActions生成：increment、decrement（对象形式）</span><br>    ...<span class="hljs-title function_">mapMutations</span>(&#123;<span class="hljs-attr">increment</span>:<span class="hljs-string">&#x27;JIA&#x27;</span>,<span class="hljs-attr">decrement</span>:<span class="hljs-string">&#x27;JIAN&#x27;</span>&#125;),<br><br>    <span class="hljs-comment">//靠mapMutations生成：JIA、JIAN（对象形式）</span><br>    ...<span class="hljs-title function_">mapMutations</span>([<span class="hljs-string">&#x27;JIA&#x27;</span>,<span class="hljs-string">&#x27;JIAN&#x27;</span>]),<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>备注：mapActions 与 mapMutations 使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。</p></blockquote><h3 id="7-模块化-命名空间"><a href="#7-模块化-命名空间" class="headerlink" title="7.模块化+命名空间"></a>7.模块化+命名空间</h3><ol><li>目的：让代码更好维护，让多种数据分类更加明确。</li><li>修改<code>store.js</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> countAbout = &#123;<br>  <span class="hljs-attr">namespaced</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">//开启命名空间</span><br>  <span class="hljs-attr">state</span>:&#123;<span class="hljs-attr">x</span>:<span class="hljs-number">1</span>&#125;,<br>  <span class="hljs-attr">mutations</span>: &#123; ... &#125;,<br>  <span class="hljs-attr">actions</span>: &#123; ... &#125;,<br>  <span class="hljs-attr">getters</span>: &#123;<br>    <span class="hljs-title function_">bigSum</span>(<span class="hljs-params">state</span>)&#123;<br>       <span class="hljs-keyword">return</span> state.<span class="hljs-property">sum</span> * <span class="hljs-number">10</span><br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> personAbout = &#123;<br>  <span class="hljs-attr">namespaced</span>:<span class="hljs-literal">true</span>,<span class="hljs-comment">//开启命名空间</span><br>  <span class="hljs-attr">state</span>:&#123; ... &#125;,<br>  <span class="hljs-attr">mutations</span>: &#123; ... &#125;,<br>  <span class="hljs-attr">actions</span>: &#123; ... &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> store = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  <span class="hljs-attr">modules</span>: &#123;<br>    countAbout,<br>    personAbout<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><ol start="3"><li>开启命名空间后，组件中读取 state 数据：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//方式一：自己直接读取</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-property">state</span>.<span class="hljs-property">personAbout</span>.<span class="hljs-property">list</span><br><span class="hljs-comment">//方式二：借助mapState读取：</span><br>...<span class="hljs-title function_">mapState</span>(<span class="hljs-string">&#x27;countAbout&#x27;</span>,[<span class="hljs-string">&#x27;sum&#x27;</span>,<span class="hljs-string">&#x27;school&#x27;</span>,<span class="hljs-string">&#x27;subject&#x27;</span>]),<br></code></pre></td></tr></table></figure><ol start="4"><li>开启命名空间后，组件中读取 getters 数据：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//方式一：自己直接读取</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-property">getters</span>[<span class="hljs-string">&#x27;personAbout/firstPersonName&#x27;</span>]<br><span class="hljs-comment">//方式二：借助mapGetters读取：</span><br>...<span class="hljs-title function_">mapGetters</span>(<span class="hljs-string">&#x27;countAbout&#x27;</span>,[<span class="hljs-string">&#x27;bigSum&#x27;</span>])<br></code></pre></td></tr></table></figure><ol start="5"><li>开启命名空间后，组件中调用 dispatch</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//方式一：自己直接dispatch</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-title function_">dispatch</span>(<span class="hljs-string">&#x27;personAbout/addPersonWang&#x27;</span>,person)<br><span class="hljs-comment">//方式二：借助mapActions：</span><br>...<span class="hljs-title function_">mapActions</span>(<span class="hljs-string">&#x27;countAbout&#x27;</span>,&#123;<span class="hljs-attr">incrementOdd</span>:<span class="hljs-string">&#x27;jiaOdd&#x27;</span>,<span class="hljs-attr">incrementWait</span>:<span class="hljs-string">&#x27;jiaWait&#x27;</span>&#125;)<br></code></pre></td></tr></table></figure><ol start="6"><li>开启命名空间后，组件中调用 commit</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//方式一：自己直接commit</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$store</span>.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&#x27;personAbout/ADD_PERSON&#x27;</span>,person)<br><span class="hljs-comment">//方式二：借助mapMutations：</span><br>...<span class="hljs-title function_">mapMutations</span>(<span class="hljs-string">&#x27;countAbout&#x27;</span>,&#123;<span class="hljs-attr">increment</span>:<span class="hljs-string">&#x27;JIA&#x27;</span>,<span class="hljs-attr">decrement</span>:<span class="hljs-string">&#x27;JIAN&#x27;</span>&#125;),<br></code></pre></td></tr></table></figure><h3 id="求和案例-纯-vue-版"><a href="#求和案例-纯-vue-版" class="headerlink" title="求和案例_纯 vue 版"></a>求和案例_纯 vue 版</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;    &lt;Count /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Count from &quot;./components/Count&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Count,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>Count.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h2&gt;当前求和为:&#123;&#123; sum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;select v-model.number=&quot;n&quot;&gt;<br>           <br>      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;<br>           <br>      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;<br>           <br>      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;<br>         <br>    &lt;/select&gt;<br>        &lt;button @click=&quot;increament&quot;&gt;+&lt;/button&gt;    <br>    &lt;button @click=&quot;decreament&quot;&gt;-&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentOdd&quot;&gt;当前求和为奇数再加&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentWait&quot;&gt;等一等再加&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Count&quot;,<br>  data() &#123;<br>    return &#123;<br>      n: 1,<br>      sum: 0,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    increament() &#123;<br>      this.sum = this.sum + this.n;<br>    &#125;,<br>    decreament() &#123;<br>      this.sum = this.sum - this.n;<br>    &#125;,<br>    increamentOdd() &#123;<br>      if (this.sum % 2) &#123;<br>        this.sum = this.sum + this.n;<br>      &#125;<br>    &#125;,<br>    increamentWait() &#123;<br>      setTimeout(() =&gt; &#123;<br>        this.sum = this.sum + this.n;<br>      &#125;, 500);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>button &#123;<br>  margin-left: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="求和案例-vuex-版"><a href="#求和案例-vuex-版" class="headerlink" title="求和案例_vuex 版"></a>求和案例_vuex 版</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入Vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">// 引入App</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-attr">store</span>: store,<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;    &lt;Count /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Count from &quot;./components/Count&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Count,<br>  &#125;,<br>  mounted() &#123;<br>    console.log(&quot;App&quot;, this);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>store&#x2F;index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 该文件用于创建Vuex中最为核心的store</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-comment">// 准备actions--用于响应组件中的动作</span><br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-comment">// jia:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jia被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIA&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-comment">// jian:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jian被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIAN&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-attr">jiaOdd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaOdd被调用了&quot;</span>, context, value);<br>    <span class="hljs-keyword">if</span> (context.<span class="hljs-property">state</span>.<span class="hljs-property">sum</span> % <span class="hljs-number">2</span>) &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">jiaWait</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaWait被调用了&quot;</span>, context, value);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;, <span class="hljs-number">500</span>);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备actmutations--用于操作数据</span><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-attr">JIA</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIA被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> + value;<br>  &#125;,<br>  <span class="hljs-attr">JIAN</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIAN被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> - value;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备state--用于存储数据</span><br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 当前的和</span><br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>&#125;);<br></code></pre></td></tr></table></figure><p>components&#x2F;Count.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 该文件用于创建Vuex中最为核心的store</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-comment">// 准备actions--用于响应组件中的动作</span><br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-comment">// jia:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jia被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIA&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-comment">// jian:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jian被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIAN&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-attr">jiaOdd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaOdd被调用了&quot;</span>, context, value);<br>    <span class="hljs-keyword">if</span> (context.<span class="hljs-property">state</span>.<span class="hljs-property">sum</span> % <span class="hljs-number">2</span>) &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">jiaWait</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaWait被调用了&quot;</span>, context, value);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;, <span class="hljs-number">500</span>);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备actmutations--用于操作数据</span><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-attr">JIA</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIA被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> + value;<br>  &#125;,<br>  <span class="hljs-attr">JIAN</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIAN被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> - value;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备state--用于存储数据</span><br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 当前的和</span><br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="求和案例-getters"><a href="#求和案例-getters" class="headerlink" title="求和案例_getters"></a>求和案例_getters</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入Vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">// 引入App</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-attr">store</span>: store,<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;    &lt;Count /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Count from &quot;./components/Count&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Count,<br>  &#125;,<br>  mounted() &#123;<br>    console.log(&quot;App&quot;, this);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>store&#x2F;index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 该文件用于创建Vuex中最为核心的store</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-comment">// 准备actions--用于响应组件中的动作</span><br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-comment">// jia:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jia被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIA&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-comment">// jian:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jian被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIAN&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-attr">jiaOdd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaOdd被调用了&quot;</span>, context, value);<br>    <span class="hljs-keyword">if</span> (context.<span class="hljs-property">state</span>.<span class="hljs-property">sum</span> % <span class="hljs-number">2</span>) &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">jiaWait</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaWait被调用了&quot;</span>, context, value);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;, <span class="hljs-number">500</span>);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备actmutations--用于操作数据</span><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-attr">JIA</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIA被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> + value;<br>  &#125;,<br>  <span class="hljs-attr">JIAN</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIAN被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> - value;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备state--用于存储数据</span><br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 当前的和</span><br>&#125;;<br><br><span class="hljs-comment">// 准备getters--用于将state中的数据进行加工</span><br><span class="hljs-keyword">const</span> getters = &#123;<br>  <span class="hljs-title function_">bigSum</span>(<span class="hljs-params">state</span>) &#123;<br>    <span class="hljs-keyword">return</span> state.<span class="hljs-property">sum</span> * <span class="hljs-number">10</span>;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>  getters,<br>&#125;);<br></code></pre></td></tr></table></figure><p>components&#x2F;Count.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h2&gt;当前求和为:&#123;&#123; $store.state.sum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;当前求和的10倍为:&#123;&#123; $store.getters.bigSum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;select v-model.number=&quot;n&quot;&gt;<br>           <br>      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;<br>           <br>      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;<br>           <br>      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;<br>         <br>    &lt;/select&gt;<br>        &lt;button @click=&quot;increament&quot;&gt;+&lt;/button&gt;    <br>    &lt;button @click=&quot;decreament&quot;&gt;-&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentOdd&quot;&gt;当前求和为奇数再加&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentWait&quot;&gt;等一等再加&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>export default &#123;<br>  name: &quot;Count&quot;,<br>  data() &#123;<br>    return &#123;<br>      n: 1,<br>    &#125;;<br>  &#125;,<br>  methods: &#123;<br>    increament() &#123;<br>      this.$store.commit(&quot;JIA&quot;, this.n);<br>    &#125;,<br>    decreament() &#123;<br>      this.$store.commit(&quot;JIAN&quot;, this.n);<br>    &#125;,<br>    increamentOdd() &#123;<br>      this.$store.dispatch(&quot;jiaOdd&quot;, this.n);<br>    &#125;,<br>    increamentWait() &#123;<br>      this.$store.dispatch(&quot;jiaWait&quot;, this.n);<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;<br>    console.log(&quot;Count&quot;, this);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>button &#123;<br>  margin-left: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="求和案例-mapState-与-mapGetters"><a href="#求和案例-mapState-与-mapGetters" class="headerlink" title="求和案例_mapState 与 mapGetters"></a>求和案例_mapState 与 mapGetters</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入Vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">// 引入App</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-attr">store</span>: store,<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;    &lt;Count /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Count from &quot;./components/Count&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Count,<br>  &#125;,<br>  mounted() &#123;<br>    // console.log(&#x27;App&#x27;, this)<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>store&#x2F;index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 该文件用于创建Vuex中最为核心的store</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-comment">// 准备actions--用于响应组件中的动作</span><br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-comment">// jia:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jia被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIA&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-comment">// jian:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jian被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIAN&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-attr">jiaOdd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaOdd被调用了&quot;</span>, context, value);<br>    <span class="hljs-keyword">if</span> (context.<span class="hljs-property">state</span>.<span class="hljs-property">sum</span> % <span class="hljs-number">2</span>) &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">jiaWait</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaWait被调用了&quot;</span>, context, value);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;, <span class="hljs-number">500</span>);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备actmutations--用于操作数据</span><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-attr">JIA</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIA被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> + value;<br>  &#125;,<br>  <span class="hljs-attr">JIAN</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIAN被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> - value;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备state--用于存储数据</span><br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 当前的和</span><br>  <span class="hljs-attr">school</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,<br>  <span class="hljs-attr">subject</span>: <span class="hljs-string">&quot;前端&quot;</span>,<br>&#125;;<br><br><span class="hljs-comment">// 准备getters--用于将state中的数据进行加工</span><br><span class="hljs-keyword">const</span> getters = &#123;<br>  <span class="hljs-title function_">bigSum</span>(<span class="hljs-params">state</span>) &#123;<br>    <span class="hljs-keyword">return</span> state.<span class="hljs-property">sum</span> * <span class="hljs-number">10</span>;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>  getters,<br>&#125;);<br></code></pre></td></tr></table></figure><p>components&#x2F;Count.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h2&gt;当前求和为:&#123;&#123; sum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;当前求和的10倍为:&#123;&#123; bigSum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;我在&#123;&#123; school &#125;&#125;, 学习&#123;&#123; subject &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;select v-model.number=&quot;n&quot;&gt;<br>           <br>      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;<br>           <br>      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;<br>           <br>      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;<br>         <br>    &lt;/select&gt;<br>        &lt;button @click=&quot;increament&quot;&gt;+&lt;/button&gt;    <br>    &lt;button @click=&quot;decreament&quot;&gt;-&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentOdd&quot;&gt;当前求和为奇数再加&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentWait&quot;&gt;等一等再加&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; mapState, mapGetters &#125; from &quot;vuex&quot;;<br>export default &#123;<br>  name: &quot;Count&quot;,<br>  data() &#123;<br>    return &#123;<br>      n: 1, //用户选择的数字<br>    &#125;;<br>  &#125;,<br>  computed: &#123;<br>    //靠程序员自己亲自去写计算属性<br>    /* sum() &#123;<br>      return this.$store.state.sum;<br>    &#125;,<br>    school() &#123;<br>      return this.$store.state.school;<br>    &#125;,<br>    subject() &#123;<br>      return this.$store.state.subject;<br>    &#125;, */<br><br>    //借助mapState生成计算属性，从state中读取数据。（对象写法）<br>    // ...mapState(&#123;sum: &#x27;sum&#x27;, school: &#x27;school&#x27;, subject: &#x27;subject&#x27;&#125;),<br><br>    //借助mapState生成计算属性，从state中读取数据。（数组写法）<br>    ...mapState([<br>      &quot;sum&quot;,<br>      &quot;school&quot;,<br>      &quot;subject&quot;,<br>    ]) /* ***************************************************** */ /* bigSum() &#123;<br>      return this.$store.getters.bigSum;<br>    &#125;, */, //借助mapGetters生成计算属性，从getters中读取数据。（对象写法） // ...mapGetters(&#123;&#x27;bigSum&#x27;: &#x27;bigSum&#x27;&#125;), //借助mapGetters生成计算属性，从getters中读取数据。（数组写法）<br><br>    ...mapGetters([&quot;bigSum&quot;]),<br>  &#125;,<br>  methods: &#123;<br>    increament() &#123;<br>      this.$store.commit(&quot;JIA&quot;, this.n);<br>    &#125;,<br>    decreament() &#123;<br>      this.$store.commit(&quot;JIAN&quot;, this.n);<br>    &#125;,<br>    increamentOdd() &#123;<br>      this.$store.dispatch(&quot;jiaOdd&quot;, this.n);<br>    &#125;,<br>    increamentWait() &#123;<br>      this.$store.dispatch(&quot;jiaWait&quot;, this.n);<br>    &#125;,<br>  &#125;,<br>  mounted() &#123;<br>    const x = mapState(&#123; sum: &quot;sum&quot;, school: &quot;school&quot;, subject: &quot;subject&quot; &#125;);<br>    console.log(x); // console.log(&quot;Count&quot;, this);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>button &#123;<br>  margin-left: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="求和案例-mapMutations-与-mapActions"><a href="#求和案例-mapMutations-与-mapActions" class="headerlink" title="求和案例_mapMutations 与 mapActions"></a>求和案例_mapMutations 与 mapActions</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入Vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">// 引入App</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-attr">store</span>: store,<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;    &lt;Count /&gt;  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Count from &quot;./components/Count&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Count,<br>  &#125;,<br>  mounted() &#123;<br>    // console.log(&#x27;App&#x27;, this)<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>store&#x2F;index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 该文件用于创建Vuex中最为核心的store</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-comment">// 准备actions--用于响应组件中的动作</span><br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-comment">// jia:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jia被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIA&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-comment">// jian:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jian被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIAN&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-attr">jiaOdd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaOdd被调用了&quot;</span>, context, value);<br>    <span class="hljs-keyword">if</span> (context.<span class="hljs-property">state</span>.<span class="hljs-property">sum</span> % <span class="hljs-number">2</span>) &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">jiaWait</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaWait被调用了&quot;</span>, context, value);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;, <span class="hljs-number">500</span>);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备actmutations--用于操作数据</span><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-attr">JIA</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIA被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> + value;<br>  &#125;,<br>  <span class="hljs-attr">JIAN</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIAN被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> - value;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备state--用于存储数据</span><br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 当前的和</span><br>  <span class="hljs-attr">school</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,<br>  <span class="hljs-attr">subject</span>: <span class="hljs-string">&quot;前端&quot;</span>,<br>&#125;;<br><br><span class="hljs-comment">// 准备getters--用于将state中的数据进行加工</span><br><span class="hljs-keyword">const</span> getters = &#123;<br>  <span class="hljs-title function_">bigSum</span>(<span class="hljs-params">state</span>) &#123;<br>    <span class="hljs-keyword">return</span> state.<span class="hljs-property">sum</span> * <span class="hljs-number">10</span>;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>  getters,<br>&#125;);<br></code></pre></td></tr></table></figure><p>components&#x2F;Count.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h2&gt;当前求和为:&#123;&#123; sum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;当前求和的10倍为:&#123;&#123; bigSum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;我在&#123;&#123; school &#125;&#125;, 学习&#123;&#123; subject &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;select v-model.number=&quot;n&quot;&gt;<br>           <br>      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;<br>           <br>      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;<br>           <br>      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;<br>         <br>    &lt;/select&gt;<br>        &lt;button @click=&quot;increament(n)&quot;&gt;+&lt;/button&gt;    <br>    &lt;button @click=&quot;decreament(n)&quot;&gt;-&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentOdd(n)&quot;&gt;当前求和为奇数再加&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentWait(n)&quot;&gt;等一等再加&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; mapState, mapGetters, mapMutations, mapActions &#125; from &quot;vuex&quot;;<br>export default &#123;<br>  name: &quot;Count&quot;,<br>  data() &#123;<br>    return &#123;<br>      n: 1, //用户选择的数字<br>    &#125;;<br>  &#125;,<br>  computed: &#123;<br>    //借助mapState生成计算属性，从state中读取数据。（对象写法）<br>    // ...mapState(&#123;sum: &#x27;sum&#x27;, school: &#x27;school&#x27;, subject: &#x27;subject&#x27;&#125;),<br><br>    //借助mapState生成计算属性，从state中读取数据。（数组写法）<br>    ...mapState([<br>      &quot;sum&quot;,<br>      &quot;school&quot;,<br>      &quot;subject&quot;,<br>    ]) /* ***************************************************** */, //借助mapGetters生成计算属性，从getters中读取数据。（对象写法） // ...mapGetters(&#123;&#x27;bigSum&#x27;: &#x27;bigSum&#x27;&#125;), //借助mapGetters生成计算属性，从getters中读取数据。（数组写法）<br><br>    ...mapGetters([&quot;bigSum&quot;]),<br>  &#125;,<br>  methods: &#123;<br>    //程序员亲自写方法<br>    /* increament() &#123;<br>      this.$store.commit(&quot;JIA&quot;, this.n);<br>    &#125;,<br>    decreament() &#123;<br>      this.$store.commit(&quot;JIAN&quot;, this.n);<br>    &#125;, */<br><br>    // 不推荐的写法<br>    /* increament() &#123;<br>      this.JIAJIA(this.n);<br>    &#125;,<br>    decreament() &#123;<br>      this.JIANJIAN(this.n);<br>    &#125;,<br>    ...mapMutations(&#123; JIAJIA: &quot;JIA&quot;, JIANJIAN: &quot;JIAN&quot; &#125;), */<br><br>    // 调用的时候需要传参, 不传参, 默认给的参数将会是鼠标点击事件<br>    //借助mapMutations生成对应的方法，方法中会调用commit去联系mutations(对象写法)<br>    ...mapMutations(&#123;<br>      increament: &quot;JIA&quot;,<br>      decreament: &quot;JIAN&quot;,<br>    &#125;) /* **************************************************************** */ /* increamentOdd() &#123; //借助mapMutations生成对应的方法，方法中会调用commit去联系mutations(数组写法) // ...mapMutations([&#x27;JIA&#x27;, &quot;JIAN&quot;]), //程序员亲自写方法<br>      this.$store.dispatch(&quot;jiaOdd&quot;, this.n);<br>    &#125;,<br>    increamentWait() &#123;<br>      this.$store.dispatch(&quot;jiaWait&quot;, this.n);<br>    &#125;, */, //借助mapActions生成对应的方法，方法中会调用dispatch去联系actions(对象写法)<br><br>    ...mapActions(&#123; increamentOdd: &quot;jiaOdd&quot;, increamentWait: &quot;jiaWait&quot; &#125;), //借助mapActions生成对应的方法，方法中会调用dispatch去联系actions(数组写法) // ...mapActions([&#x27;jiaOdd&#x27;, &#x27;jiaWait&#x27;]),<br>  &#125;,<br>  mounted() &#123;<br>    const x = mapState(&#123; sum: &quot;sum&quot;, school: &quot;school&quot;, subject: &quot;subject&quot; &#125;); // console.log(x);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>button &#123;<br>  margin-left: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="求和案例-多组件共享数据"><a href="#求和案例-多组件共享数据" class="headerlink" title="求和案例_多组件共享数据"></a>求和案例_多组件共享数据</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入Vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">// 引入App</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-attr">store</span>: store,<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;<br>        &lt;Count /&gt;    <br>    &lt;hr /&gt;<br>        &lt;Person /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Count from &quot;./components/Count&quot;;<br>import Person from &quot;./components/Person&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Count,<br>    Person,<br>  &#125;,<br>  mounted() &#123;<br>    // console.log(&#x27;App&#x27;, this)<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>store&#x2F;index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 该文件用于创建Vuex中最为核心的store</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-comment">// 准备actions--用于响应组件中的动作</span><br><span class="hljs-keyword">const</span> actions = &#123;<br>  <span class="hljs-comment">// jia:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jia被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIA&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-comment">// jian:function(context, value) &#123;</span><br>  <span class="hljs-comment">//     console.log(&quot;actions中的jian被调用了&quot;, context, value);</span><br>  <span class="hljs-comment">//     context.commit(&quot;JIAN&quot;, value)</span><br>  <span class="hljs-comment">// &#125;,</span><br>  <span class="hljs-attr">jiaOdd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaOdd被调用了&quot;</span>, context, value);<br>    <span class="hljs-keyword">if</span> (context.<span class="hljs-property">state</span>.<span class="hljs-property">sum</span> % <span class="hljs-number">2</span>) &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">jiaWait</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaWait被调用了&quot;</span>, context, value);<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>    &#125;, <span class="hljs-number">500</span>);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备actmutations--用于操作数据</span><br><span class="hljs-keyword">const</span> mutations = &#123;<br>  <span class="hljs-attr">JIA</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIA被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> + value;<br>  &#125;,<br>  <span class="hljs-attr">JIAN</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIAN被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> - value;<br>  &#125;,<br>  <span class="hljs-attr">ADD_PERSON</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的ADD_PERSON被调用了&quot;</span>, state, value);<br>    state.<span class="hljs-property">personList</span>.<span class="hljs-title function_">unshift</span>(value);<br>  &#125;,<br>&#125;;<br><br><span class="hljs-comment">// 准备state--用于存储数据</span><br><span class="hljs-keyword">const</span> state = &#123;<br>  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 当前的和</span><br>  <span class="hljs-attr">school</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,<br>  <span class="hljs-attr">subject</span>: <span class="hljs-string">&quot;前端&quot;</span>,<br>  <span class="hljs-attr">personList</span>: [&#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span> &#125;],<br>&#125;;<br><br><span class="hljs-comment">// 准备getters--用于将state中的数据进行加工</span><br><span class="hljs-keyword">const</span> getters = &#123;<br>  <span class="hljs-title function_">bigSum</span>(<span class="hljs-params">state</span>) &#123;<br>    <span class="hljs-keyword">return</span> state.<span class="hljs-property">sum</span> * <span class="hljs-number">10</span>;<br>  &#125;,<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  actions,<br>  mutations,<br>  state,<br>  getters,<br>&#125;);<br></code></pre></td></tr></table></figure><p>components&#x2F;Count.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h2&gt;当前求和为:&#123;&#123; sum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;当前求和的10倍为:&#123;&#123; bigSum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2&gt;我在&#123;&#123; school &#125;&#125;, 学习&#123;&#123; subject &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2 style=&quot;color:red&quot;&gt;Person组件的总人数是: &#123;&#123; personList.length &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;select v-model.number=&quot;n&quot;&gt;<br>           <br>      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;<br>           <br>      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;<br>           <br>      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;<br>         <br>    &lt;/select&gt;<br>        &lt;button @click=&quot;increament(n)&quot;&gt;+&lt;/button&gt;    <br>    &lt;button @click=&quot;decreament(n)&quot;&gt;-&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentOdd(n)&quot;&gt;当前求和为奇数再加&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentWait(n)&quot;&gt;等一等再加&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; mapState, mapGetters, mapMutations, mapActions &#125; from &quot;vuex&quot;;<br>export default &#123;<br>  name: &quot;Count&quot;,<br>  data() &#123;<br>    return &#123;<br>      n: 1, //用户选择的数字<br>    &#125;;<br>  &#125;,<br>  computed: &#123;<br>    //借助mapState生成计算属性，从state中读取数据。（对象写法）<br>    // ...mapState(&#123;sum: &#x27;sum&#x27;, school: &#x27;school&#x27;, subject: &#x27;subject&#x27;&#125;),<br><br>    //借助mapState生成计算属性，从state中读取数据。（数组写法）<br>    ...mapState([<br>      &quot;sum&quot;,<br>      &quot;school&quot;,<br>      &quot;subject&quot;,<br>      &quot;personList&quot;,<br>    ]) /* ***************************************************** */, //借助mapGetters生成计算属性，从getters中读取数据。（对象写法） // ...mapGetters(&#123;&#x27;bigSum&#x27;: &#x27;bigSum&#x27;&#125;), //借助mapGetters生成计算属性，从getters中读取数据。（数组写法）<br><br>    ...mapGetters([&quot;bigSum&quot;]),<br>  &#125;,<br>  methods: &#123;<br>    //借助mapMutations生成对应的方法，方法中会调用commit去联系mutations(对象写法)<br>    ...mapMutations(&#123; increament: &quot;JIA&quot;, decreament: &quot;JIAN&quot; &#125;), //借助mapMutations生成对应的方法，方法中会调用commit去联系mutations(数组写法) // ...mapMutations([&#x27;JIA&#x27;, &quot;JIAN&quot;]), //借助mapActions生成对应的方法，方法中会调用dispatch去联系actions(对象写法)<br><br>    ...mapActions(&#123; increamentOdd: &quot;jiaOdd&quot;, increamentWait: &quot;jiaWait&quot; &#125;), //借助mapActions生成对应的方法，方法中会调用dispatch去联系actions(数组写法) // ...mapActions([&#x27;jiaOdd&#x27;, &#x27;jiaWait&#x27;]),<br>  &#125;,<br>  mounted() &#123;<br>    const x = mapState(&#123; sum: &quot;sum&quot;, school: &quot;school&quot;, subject: &quot;subject&quot; &#125;); // console.log(x);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>button &#123;<br>  margin-left: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>components&#x2F;Person.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div&gt;<br>       <br>    &lt;h2&gt;人员列表&lt;/h2&gt;<br>       <br>    &lt;h2 style=&quot;color: red&quot;&gt;Count组件的求和为: &#123;&#123; sum &#125;&#125;&lt;/h2&gt;<br>        &lt;input type=&quot;text&quot; placeholder=&quot;请输入名字&quot; v-model=&quot;name&quot; /&gt;    <br>    &lt;button @click=&quot;add&quot;&gt;添加&lt;/button&gt;    <br>    &lt;ul&gt;<br>           <br>      &lt;li v-for=&quot;p in personList&quot; :key=&quot;p.id&quot;&gt;&#123;&#123; p.name &#125;&#125;&lt;/li&gt;<br>         <br>    &lt;/ul&gt;<br>     <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; nanoid &#125; from &quot;nanoid&quot;;<br>export default &#123;<br>  name: &quot;Person&quot;,<br>  data() &#123;<br>    return &#123;<br>      name: &quot;&quot;,<br>    &#125;;<br>  &#125;,<br>  computed: &#123;<br>    personList() &#123;<br>      return this.$store.state.personList;<br>    &#125;,<br>    sum() &#123;<br>      return this.$store.state.sum;<br>    &#125;,<br>  &#125;,<br>  methods: &#123;<br>    add() &#123;<br>      const personObj = &#123; id: nanoid(), name: this.name &#125;; // console.log(personObj);<br>      this.$store.commit(&quot;ADD_PERSON&quot;, personObj);<br>      this.name = &quot;&quot;;<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h3 id="求和案例-vuex-模块化编码"><a href="#求和案例-vuex-模块化编码" class="headerlink" title="求和案例_vuex 模块化编码"></a>求和案例_vuex 模块化编码</h3><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 引入Vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-comment">// 引入App</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-comment">// 引入插件</span><br><span class="hljs-keyword">import</span> vueResource <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-resource&quot;</span>;<br><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./store&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">// 使用插件</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(vueResource);<br><br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">render</span>: <span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">App</span>),<br>  <span class="hljs-attr">store</span>: store,<br>  <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">$bus</span> = <span class="hljs-variable language_">this</span>;<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;container&quot;&gt;<br>        &lt;Count /&gt;    <br>    &lt;hr /&gt;<br>        &lt;Person /&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import Count from &quot;./components/Count&quot;;<br>import Person from &quot;./components/Person&quot;;<br>export default &#123;<br>  name: &quot;App&quot;,<br>  components: &#123;<br>    Count,<br>    Person,<br>  &#125;,<br>  mounted() &#123;<br>    // console.log(&#x27;App&#x27;, this)<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>store&#x2F;index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 该文件用于创建Vuex中最为核心的store</span><br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vuex</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vuex&quot;</span>;<br><span class="hljs-keyword">import</span> countOptions <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./count&quot;</span>;<br><span class="hljs-keyword">import</span> personOptions <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./person&quot;</span>;<br><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vuex</span>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vuex</span>.<span class="hljs-title class_">Store</span>(&#123;<br>  <span class="hljs-attr">modules</span>: &#123;<br>    <span class="hljs-attr">countAbout</span>: countOptions,<br>    <span class="hljs-attr">personAbout</span>: personOptions,<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p>store&#x2F;count.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//求和相关的配置</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-attr">namespaced</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">actions</span>: &#123;<br>    <span class="hljs-attr">jiaOdd</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaOdd被调用了&quot;</span>, context, value);<br>      <span class="hljs-keyword">if</span> (context.<span class="hljs-property">state</span>.<span class="hljs-property">sum</span> % <span class="hljs-number">2</span>) &#123;<br>        context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>      &#125;<br>    &#125;,<br>    <span class="hljs-attr">jiaWait</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">context, value</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;actions中的jiaWait被调用了&quot;</span>, context, value);<br>      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;JIA&quot;</span>, value);<br>      &#125;, <span class="hljs-number">500</span>);<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">mutations</span>: &#123;<br>    <span class="hljs-attr">JIA</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIA被调用了&quot;</span>, state, value);<br>      state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> + value;<br>    &#125;,<br>    <span class="hljs-attr">JIAN</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的JIAN被调用了&quot;</span>, state, value);<br>      state.<span class="hljs-property">sum</span> = state.<span class="hljs-property">sum</span> - value;<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">state</span>: &#123;<br>    <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 当前的和</span><br>    <span class="hljs-attr">school</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,<br>    <span class="hljs-attr">subject</span>: <span class="hljs-string">&quot;前端&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">getters</span>: &#123;<br>    <span class="hljs-title function_">bigSum</span>(<span class="hljs-params">state</span>) &#123;<br>      <span class="hljs-keyword">return</span> state.<span class="hljs-property">sum</span> * <span class="hljs-number">10</span>;<br>    &#125;,<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><p>store&#x2F;person.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//人员管理相关的配置</span><br><span class="hljs-keyword">import</span> &#123; nanoid &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;nanoid&quot;</span>;<br><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;axios&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-attr">namespaced</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">actions</span>: &#123;<br>    <span class="hljs-title function_">addPersonWang</span>(<span class="hljs-params">context, value</span>) &#123;<br>      <span class="hljs-keyword">if</span> (value.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;王&quot;</span>) === <span class="hljs-number">0</span>) &#123;<br>        context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;ADD_PERSON&quot;</span>, value);<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;请添加一个姓王的人&quot;</span>);<br>      &#125;<br>    &#125;,<br>    <span class="hljs-title function_">addPersonServer</span>(<span class="hljs-params">context</span>) &#123;<br>      axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;https://api.uixsj.cn/hitokoto/get?type=social&quot;</span>).<span class="hljs-title function_">then</span>(<br>        <span class="hljs-function">(<span class="hljs-params">response</span>) =&gt;</span> &#123;<br>          context.<span class="hljs-title function_">commit</span>(<span class="hljs-string">&quot;ADD_PERSON&quot;</span>, &#123; <span class="hljs-attr">id</span>: <span class="hljs-title function_">nanoid</span>(), <span class="hljs-attr">name</span>: response.<span class="hljs-property">data</span> &#125;);<br>        &#125;,<br>        <span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>          <span class="hljs-title function_">alert</span>(error.<span class="hljs-property">message</span>);<br>        &#125;<br>      );<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">mutations</span>: &#123;<br>    <span class="hljs-attr">ADD_PERSON</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">state, value</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mutations中的ADD_PERSON被调用了&quot;</span>, state, value);<br>      state.<span class="hljs-property">personList</span>.<span class="hljs-title function_">unshift</span>(value);<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">state</span>: &#123;<br>    <span class="hljs-attr">personList</span>: [&#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span> &#125;],<br>  &#125;,<br>  <span class="hljs-attr">getters</span>: &#123;<br>    <span class="hljs-title function_">firstPersonName</span>(<span class="hljs-params">state</span>) &#123;<br>      <span class="hljs-keyword">return</span> state.<span class="hljs-property">personList</span>[<span class="hljs-number">0</span>].<span class="hljs-property">name</span>;<br>    &#125;,<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><p>components&#x2F;Count.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   <br>  &lt;div class=&quot;category&quot;&gt;<br>       <br>    &lt;h2&gt;当前求和为:&#123;&#123; sum &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;!-- &lt;h2&gt;当前求和的10倍为:&#123;&#123; bigSum &#125;&#125;&lt;/h2&gt; --&gt;<br>       <br>    &lt;h2&gt;我在&#123;&#123; school &#125;&#125;, 学习&#123;&#123; subject &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;h2 style=&quot;color:red&quot;&gt;Person组件的总人数是: &#123;&#123; personList.length &#125;&#125;&lt;/h2&gt;<br>       <br>    &lt;select v-model.number=&quot;n&quot;&gt;<br>           <br>      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;<br>           <br>      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;<br>           <br>      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;<br>         <br>    &lt;/select&gt;<br>        &lt;button @click=&quot;increament(n)&quot;&gt;+&lt;/button&gt;    <br>    &lt;button @click=&quot;decreament(n)&quot;&gt;-&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentOdd(n)&quot;&gt;当前求和为奇数再加&lt;/button&gt;    <br>    &lt;button @click=&quot;increamentWait(n)&quot;&gt;等一等再加&lt;/button&gt;  <br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; mapState, mapGetters, mapMutations, mapActions &#125; from &quot;vuex&quot;;<br>export default &#123;<br>  name: &quot;Count&quot;,<br>  data() &#123;<br>    return &#123;<br>      n: 1, //用户选择的数字<br>    &#125;;<br>  &#125;,<br>  computed: &#123;<br>    //借助mapState生成计算属性，从state中读取数据。（对象写法）<br>    // ...mapState(&#123;sum: &#x27;sum&#x27;, school: &#x27;school&#x27;, subject: &#x27;subject&#x27;&#125;),<br><br>    //借助mapState生成计算属性，从state中读取数据。（数组写法）<br>    ...mapState(&quot;countAbout&quot;, [&quot;sum&quot;, &quot;school&quot;, &quot;subject&quot;]),<br>    ...mapState(&quot;personAbout&quot;, [<br>      &quot;personList&quot;,<br>    ]) /* ***************************************************** */, //借助mapGetters生成计算属性，从getters中读取数据。（对象写法） // ...mapGetters(&#123;&#x27;bigSum&#x27;: &#x27;bigSum&#x27;&#125;), //借助mapGetters生成计算属性，从getters中读取数据。（数组写法） // ...mapGetters([&quot;bigSum&quot;]),<br>  &#125;,<br>  methods: &#123;<br>    //借助mapMutations生成对应的方法，方法中会调用commit去联系mutations(对象写法)<br>    ...mapMutations(&quot;countAbout&quot;, &#123; increament: &quot;JIA&quot;, decreament: &quot;JIAN&quot; &#125;), //借助mapMutations生成对应的方法，方法中会调用commit去联系mutations(数组写法) // ...mapMutations([&#x27;JIA&#x27;, &quot;JIAN&quot;]), //借助mapActions生成对应的方法，方法中会调用dispatch去联系actions(对象写法)<br><br>    ...mapActions(&quot;countAbout&quot;, &#123;<br>      increamentOdd: &quot;jiaOdd&quot;,<br>      increamentWait: &quot;jiaWait&quot;,<br>    &#125;), //借助mapActions生成对应的方法，方法中会调用dispatch去联系actions(数组写法) // ...mapActions([&#x27;jiaOdd&#x27;, &#x27;jiaWait&#x27;]),<br>  &#125;,<br>  mounted() &#123;<br>    // const x = mapState(&#123; sum: &quot;sum&quot;, school: &quot;school&quot;, subject: &quot;subject&quot; &#125;);<br>    console.log(this.$store);<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>button &#123;<br>  margin-left: 5px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><p>components&#x2F;Person.js</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p><img src="http://cdn.xiamu.icu//FiqIKtuzebXqZRSTvkn-aJAU8tMO.png"><br><img src="http://cdn.xiamu.icu//Fpge1Ng9VZ77iS201NfdfyUhxb-f.png"><br><img src="http://cdn.xiamu.icu//Fuv9vrT_ZH-JO_YVhWdP-thig-af.png"><br>引入 vue-router<br>vue 的一个插件库, 专门用来实现 SPA 应用</p><p>2022 年 2 月 7 日以后, vue-router 的默认版本, 为 4 版本<br>vue-router4 只能用在 vue3 中使用<br>vue-router3 才, 能用在 vue2 中<br>此时练习的环境是 vue2, 所以我们安装 vue-router3 版本<br>E:\Code\Vue\vue_test&gt; npm i vue-router@3</p><ol><li>理解： 一个路由（route）就是一组映射关系（key - value），多个路由需要路由器（router）进行管理。</li><li>前端路由：key 是路径，value 是组件。</li></ol><h3 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1.基本使用"></a>1.基本使用</h3><ol><li>安装 vue-router，命令：<code>npm i vue-router</code></li><li>应用插件：<code>Vue.use(VueRouter)</code></li><li>编写 router 配置项:</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//引入VueRouter</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueRouter</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-comment">//引入Luyou 组件</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">About</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../components/About&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Home</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../components/Home&quot;</span>;<br><br><span class="hljs-comment">//创建router实例对象，去管理一组一组的路由规则</span><br><span class="hljs-keyword">const</span> router = <span class="hljs-keyword">new</span> <span class="hljs-title class_">VueRouter</span>(&#123;<br>  <span class="hljs-attr">routes</span>: [<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/about&quot;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">About</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/home&quot;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">Home</span>,<br>    &#125;,<br>  ],<br>&#125;);<br><br><span class="hljs-comment">//暴露router</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router;<br></code></pre></td></tr></table></figure><ol start="4"><li>实现切换（active-class 可配置高亮样式）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;router-link active-class=&quot;active&quot; to=&quot;/about&quot;&gt;About&lt;/router-link&gt;<br></code></pre></td></tr></table></figure><ol start="5"><li>指定展示位置</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;router-view&gt;&lt;/router-view&gt;<br></code></pre></td></tr></table></figure><h3 id="2-几个注意点"><a href="#2-几个注意点" class="headerlink" title="2.几个注意点"></a>2.几个注意点</h3><ol><li>路由组件通常存放在<code>pages</code>文件夹，一般组件通常存放在<code>components</code>文件夹。</li><li>通过切换，“隐藏”了的路由组件，默认是被销毁掉的，需要的时候再去挂载。</li><li>每个组件都有自己的<code>$route</code>属性，里面存储着自己的路由信息。</li><li>整个应用只有一个 router，可以通过组件的<code>$router</code>属性获取到。</li></ol><h3 id="3-多级路由（多级路由）"><a href="#3-多级路由（多级路由）" class="headerlink" title="3.多级路由（多级路由）"></a>3.多级路由（多级路由）</h3><ol><li>配置路由规则，使用 children 配置项：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">routes</span>: [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/about&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">About</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/home&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Home</span>,<br>    <span class="hljs-attr">children</span>: [<br>      <span class="hljs-comment">//通过children配置子级路由</span><br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;news&quot;</span>, <span class="hljs-comment">//此处一定不要写：/news</span><br>        <span class="hljs-attr">component</span>: <span class="hljs-title class_">News</span>,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;message&quot;</span>, <span class="hljs-comment">//此处一定不要写：/message</span><br>        <span class="hljs-attr">component</span>: <span class="hljs-title class_">Message</span>,<br>      &#125;,<br>    ],<br>  &#125;,<br>];<br></code></pre></td></tr></table></figure><ol start="2"><li>跳转（要写完整路径）：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;router-link to=&quot;/home/news&quot;&gt;News&lt;/router-link&gt;<br></code></pre></td></tr></table></figure><h3 id="4-路由的-query-参数"><a href="#4-路由的-query-参数" class="headerlink" title="4.路由的 query 参数"></a>4.路由的 query 参数</h3><ol><li>传递参数</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 跳转并携带query参数，to的字符串写法 --&gt;<br>&lt;router-link :to=&quot;/home/message/detail?id=666&amp;title=你好&quot;&gt;跳转&lt;/router-link&gt;<br><br>&lt;!-- 跳转并携带query参数，to的对象写法 --&gt;<br>&lt;router-link<br>  :to=&quot;&#123;<br>    path: &#x27;/home/message/detail&#x27;,<br>    query: &#123;<br>      id: 666,<br>      title: &#x27;你好&#x27;,<br>    &#125;,<br>  &#125;&quot;<br>&gt;跳转&lt;/router-link&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>接收参数：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$route.<span class="hljs-property">query</span>.<span class="hljs-property">id</span>;<br>$route.<span class="hljs-property">query</span>.<span class="hljs-property">title</span>;<br></code></pre></td></tr></table></figure><h3 id="5-命名路由"><a href="#5-命名路由" class="headerlink" title="5.命名路由"></a>5.命名路由</h3><ol><li>作用：可以简化路由的跳转。</li><li>如何使用</li><li>给路由命名：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/demo&#x27;</span>,<br><span class="hljs-attr">component</span>:<span class="hljs-title class_">Demo</span>,<br><span class="hljs-attr">children</span>:[<br>&#123;<br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;test&#x27;</span>,<br><span class="hljs-attr">component</span>:<span class="hljs-title class_">Test</span>,<br><span class="hljs-attr">children</span>:[<br>&#123;<br>                      <span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;hello&#x27;</span> <span class="hljs-comment">//给路由命名</span><br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;welcome&#x27;</span>,<br><span class="hljs-attr">component</span>:<span class="hljs-title class_">Hello</span>,<br>&#125;<br>]<br>&#125;<br>]<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>简化跳转：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!--简化前，需要写完整的路径 --&gt;<br>&lt;router-link to=&quot;/demo/test/welcome&quot;&gt;跳转&lt;/router-link&gt;<br><br>&lt;!--简化后，直接通过名字跳转 --&gt;<br>&lt;router-link :to=&quot;&#123; name: &#x27;hello&#x27; &#125;&quot;&gt;跳转&lt;/router-link&gt;<br><br>&lt;!--简化写法配合传递参数 --&gt;<br>&lt;router-link<br>  :to=&quot;&#123;<br>    name: &#x27;hello&#x27;,<br>    query: &#123;<br>      id: 666,<br>      title: &#x27;你好&#x27;,<br>    &#125;,<br>  &#125;&quot;<br>&gt;跳转&lt;/router-link&gt;<br></code></pre></td></tr></table></figure><h3 id="6-路由的-params-参数"><a href="#6-路由的-params-参数" class="headerlink" title="6.路由的 params 参数"></a>6.路由的 params 参数</h3><ol><li>配置路由，声明接收 params 参数</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/home&#x27;</span>,<br><span class="hljs-attr">component</span>:<span class="hljs-title class_">Home</span>,<br><span class="hljs-attr">children</span>:[<br>&#123;<br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;news&#x27;</span>,<br><span class="hljs-attr">component</span>:<span class="hljs-title class_">News</span><br>&#125;,<br>&#123;<br><span class="hljs-attr">component</span>:<span class="hljs-title class_">Message</span>,<br><span class="hljs-attr">children</span>:[<br>&#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;xiangqing&#x27;</span>,<br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;detail/:id/:title&#x27;</span>, <span class="hljs-comment">//使用占位符声明接收params参数</span><br><span class="hljs-attr">component</span>:<span class="hljs-title class_">Detail</span><br>&#125;<br>]<br>&#125;<br>]<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>传递参数</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 跳转并携带params参数，to的字符串写法 --&gt;<br>&lt;router-link :to=&quot;/home/message/detail/666/你好&quot;&gt;跳转&lt;/router-link&gt;<br><br>&lt;!-- 跳转并携带params参数，to的对象写法 --&gt;<br>&lt;router-link<br>  :to=&quot;&#123;<br>    name: &#x27;xiangqing&#x27;,<br>    params: &#123;<br>      id: 666,<br>      title: &#x27;你好&#x27;,<br>    &#125;,<br>  &#125;&quot;<br>&gt;跳转&lt;/router-link&gt;<br></code></pre></td></tr></table></figure><ol start="3"><li>接收参数：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$route.<span class="hljs-property">params</span>.<span class="hljs-property">id</span>;<br>$route.<span class="hljs-property">params</span>.<span class="hljs-property">title</span>;<br></code></pre></td></tr></table></figure><h3 id="7-路由的-props-配置"><a href="#7-路由的-props-配置" class="headerlink" title="7.路由的 props 配置"></a>7.路由的 props 配置</h3><pre><code class="hljs">作用：让路由组件更方便的收到参数</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;xiangqing&#x27;</span>,<br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;detail/:id&#x27;</span>,<br><span class="hljs-attr">component</span>:<span class="hljs-title class_">Detail</span>,<br><br><span class="hljs-comment">//第一种写法：props值为对象，该对象中所有的key-value的组合最终都会通过props传给Detail组件</span><br><span class="hljs-comment">// props:&#123;a:900&#125;</span><br><br><span class="hljs-comment">//第二种写法：props值为布尔值，布尔值为true，则把路由收到的所有params参数通过props传给Detail组件</span><br><span class="hljs-comment">// props:true</span><br><br><span class="hljs-comment">//第三种写法：props值为函数，该函数返回的对象中每一组key-value都会通过props传给Detail组件</span><br><span class="hljs-title function_">props</span>(<span class="hljs-params">route</span>)&#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">id</span>:route.<span class="hljs-property">query</span>.<span class="hljs-property">id</span>,<br><span class="hljs-attr">title</span>:route.<span class="hljs-property">query</span>.<span class="hljs-property">title</span><br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-lt-router-link-gt-的-replace-属性"><a href="#8-lt-router-link-gt-的-replace-属性" class="headerlink" title="8.&lt;router-link&gt;的 replace 属性"></a>8.<code>&lt;router-link&gt;</code>的 replace 属性</h3><ol><li>作用：控制路由跳转时操作浏览器历史记录的模式</li><li>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>，<code>push</code>是追加历史记录，<code>replace</code>是替换当前记录。路由跳转时候默认为<code>push</code></li><li>如何开启<code>replace</code>模式：<code>&lt;router-link replace .......&gt;News&lt;/router-link&gt;</code></li></ol><h3 id="9-编程式路由导航"><a href="#9-编程式路由导航" class="headerlink" title="9.编程式路由导航"></a>9.编程式路由导航</h3><ol><li>作用：不借助<code>&lt;router-link&gt;</code>实现路由跳转，让路由跳转更加灵活</li><li>具体编码：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//$router的两个API</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">push</span>(&#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;xiangqing&quot;</span>,<br>  <span class="hljs-attr">params</span>: &#123;<br>    <span class="hljs-attr">id</span>: xxx,<br>    <span class="hljs-attr">title</span>: xxx,<br>  &#125;,<br>&#125;);<br><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">replace</span>(&#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;xiangqing&quot;</span>,<br>  <span class="hljs-attr">params</span>: &#123;<br>    <span class="hljs-attr">id</span>: xxx,<br>    <span class="hljs-attr">title</span>: xxx,<br>  &#125;,<br>&#125;);<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">forward</span>(); <span class="hljs-comment">//前进</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">back</span>(); <span class="hljs-comment">//后退</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">go</span>(); <span class="hljs-comment">//可前进也可后退</span><br></code></pre></td></tr></table></figure><h3 id="10-缓存路由组件"><a href="#10-缓存路由组件" class="headerlink" title="10.缓存路由组件"></a>10.缓存路由组件</h3><ol><li>作用：让不展示的路由组件保持挂载，不被销毁。</li><li>具体编码：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;keep-alive include=&quot;News&quot;&gt; <br>    &lt;router-view&gt;&lt;/router-view&gt;<br>&lt;/keep-alive&gt;<br></code></pre></td></tr></table></figure><h3 id="11-两个新的生命周期钩子"><a href="#11-两个新的生命周期钩子" class="headerlink" title="11.两个新的生命周期钩子"></a>11.两个新的生命周期钩子</h3><ol><li>作用：路由组件所独有的两个钩子，用于捕获路由组件的激活状态。</li><li>具体名字：<ol><li><code>activated</code>路由组件被激活时触发。</li><li><code>deactivated</code>路由组件失活时触发。</li></ol></li></ol><h3 id="12-路由守卫"><a href="#12-路由守卫" class="headerlink" title="12.路由守卫"></a>12.路由守卫</h3><ol><li>作用：对路由进行权限控制</li><li>分类：全局守卫、独享守卫、组件内守卫</li><li>全局守卫:</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//全局前置守卫：初始化时执行、每次路由切换前执行</span><br>router.<span class="hljs-title function_">beforeEach</span>(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;beforeEach&quot;</span>, to, <span class="hljs-keyword">from</span>);<br>  <span class="hljs-keyword">if</span> (to.<span class="hljs-property">meta</span>.<span class="hljs-property">isAuth</span>) &#123;<br>    <span class="hljs-comment">//判断当前路由是否需要进行权限控制</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;school&quot;</span>) === <span class="hljs-string">&quot;atguigu&quot;</span>) &#123;<br>      <span class="hljs-comment">//权限控制的具体规则</span><br>      <span class="hljs-title function_">next</span>(); <span class="hljs-comment">//放行</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;暂无权限查看&quot;</span>);<br>      <span class="hljs-comment">// next(&#123;name:&#x27;guanyu&#x27;&#125;)</span><br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_">next</span>(); <span class="hljs-comment">//放行</span><br>  &#125;<br>&#125;);<br><br><span class="hljs-comment">//全局后置守卫：初始化时执行、每次路由切换后执行</span><br>router.<span class="hljs-title function_">afterEach</span>(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span></span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;afterEach&quot;</span>, to, <span class="hljs-keyword">from</span>);<br>  <span class="hljs-keyword">if</span> (to.<span class="hljs-property">meta</span>.<span class="hljs-property">title</span>) &#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = to.<span class="hljs-property">meta</span>.<span class="hljs-property">title</span>; <span class="hljs-comment">//修改网页的title</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;vue_test&quot;</span>;<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><ol start="4"><li>独享守卫:</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">beforeEnter</span>(<span class="hljs-params">to,<span class="hljs-keyword">from</span>,next</span>)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;beforeEnter&#x27;</span>,to,<span class="hljs-keyword">from</span>)<br><span class="hljs-keyword">if</span>(to.<span class="hljs-property">meta</span>.<span class="hljs-property">isAuth</span>)&#123; <span class="hljs-comment">//判断当前路由是否需要进行权限控制</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;school&#x27;</span>) === <span class="hljs-string">&#x27;atguigu&#x27;</span>)&#123;<br><span class="hljs-title function_">next</span>()<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;暂无权限查看&#x27;</span>)<br><span class="hljs-comment">// next(&#123;name:&#x27;guanyu&#x27;&#125;)</span><br>&#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title function_">next</span>()<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="5"><li>组件内守卫：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//进入守卫：通过路由规则，进入该组件时被调用</span><br>beforeRouteEnter (to, <span class="hljs-keyword">from</span>, next) &#123;<br>&#125;,<br><span class="hljs-comment">//离开守卫：通过路由规则，离开该组件时被调用</span><br>beforeRouteLeave (to, <span class="hljs-keyword">from</span>, next) &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="13-路由器的两种工作模式"><a href="#13-路由器的两种工作模式" class="headerlink" title="13.路由器的两种工作模式"></a>13.路由器的两种工作模式</h3><p>部署项目<br>npm run build<br>npm init<br>npm i express</p><ol><li>对于一个 url 来说，什么是 hash 值？—— #及其后面的内容就是 hash 值。</li><li>hash 值不会包含在 HTTP 请求中，即：hash 值不会带给服务器。</li><li>hash 模式：</li><li>地址中永远带着#号，不美观 。</li><li>若以后将地址通过第三方手机 app 分享，若 app 校验严格，则地址会被标记为不合法。</li><li>兼容性较好。</li><li>history 模式：</li><li>地址干净，美观 。</li><li>兼容性和 hash 模式相比略差。</li><li>应用部署上线时需要后端人员支持，解决刷新页面服务端 404 的问题。</li></ol><h2 id="使用-element-ui"><a href="#使用-element-ui" class="headerlink" title="使用 element-ui"></a>使用 element-ui</h2><p>安装 element-ui<br>npm i element-ui</p><p>按需引入<br>npm install babel-plugin-component -D</p>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue</title>
    <link href="/Vue/Vue/"/>
    <url>/Vue/Vue/</url>
    
    <content type="html"><![CDATA[<h2 id="Vue-的安装"><a href="#Vue-的安装" class="headerlink" title="Vue 的安装"></a>Vue 的安装</h2><p>在 vue 的官网中下载 vue.js</p><p><img src="http://cdn.xiamu.icu//FhuE6W_YvUVHibqT1C_ygV8-_3V-.png"><br>vue.js 一般使用在开发环境中, vue.min.js 一般使用在生产环境中</p><p>然后创建一个.html 文件, 在页面上运行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>初始Vue<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在页面上打开 F12, 发现有两条提示<br><img src="http://cdn.xiamu.icu//FsB3iPVSUh479sTmNgwbLxcwmsWu.png"><br>第一个提示, 需要我们下载一个 Vue 的拓展来开发<br><a href="https://devtools.vuejs.org/guide/installation.html">https://devtools.vuejs.org/guide/installation.html</a>下载地址<br><img src="http://cdn.xiamu.icu//FozDFSHXvOICedenvKUr84W9qpCm.png"><br>下载完成之后会在右上角显示<br><img src="http://cdn.xiamu.icu//FnstYDzNp9eHg5jRjk1hz8wbTsIj.png"><br>第二个提示, 则是我们需要在生产环境中使用 vue.min.js<br>这代码编写的过程中, 我们可以关闭这个提示<br><img src="http://cdn.xiamu.icu//FkAoPi0wKkId4x0vdOf3RTIguozX.png"><br>Vue.config.productionTip&#x3D;false</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>再回过头看控制台, 警告就消失了<br><img src="http://cdn.xiamu.icu//Fs8wwre-faG7khW8kPe0l3IaojR6.png"></p><h2 id="初识-Vue"><a href="#初识-Vue" class="headerlink" title="初识 Vue"></a>初识 Vue</h2><p>容器跟组件只能一对一</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-template-variable">&#123;&#123;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>叫插值语法, 插值表达式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>初始Vue<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">初识Vue：</span><br><span class="hljs-comment">1.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</span><br><span class="hljs-comment">2.root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；</span><br><span class="hljs-comment">3.root容器里的代码被称为【Vue模板】；</span><br><span class="hljs-comment">4.Vue实例和容器是一一对应的；</span><br><span class="hljs-comment">5.真实开发中只有一个Vue实例，并且会配合着组件一起使用；</span><br><span class="hljs-comment">6.&#123;&#123;xxx&#125;&#125;中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；</span><br><span class="hljs-comment">7.一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新；</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">注意区分：js表达式 和 js代码(语句)</span><br><span class="hljs-comment">1.表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：</span><br><span class="hljs-comment">(1). a</span><br><span class="hljs-comment">(2). a+b</span><br><span class="hljs-comment">(3). demo(1)</span><br><span class="hljs-comment">(4). x === y ? &#x27;a&#x27; : &#x27;b&#x27;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">2.js代码(语句)</span><br><span class="hljs-comment">(1). if()&#123;&#125;</span><br><span class="hljs-comment">(2). for()&#123;&#125;</span><br><span class="hljs-comment">--&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello, &#123;&#123;name&#125;&#125;, &#123;&#123;address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 阻止 vue 在启动时生成生产提示</span></span><br><span class="language-javascript">      <span class="hljs-comment">// 创建Vue实例</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> x = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>, <span class="hljs-comment">// el用于指定当前实例为哪个容器服务, 值通过为css选择器字符串</span></span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// data中用于存储数据, 数据el所指定的容器去试用, 值我们暂时写写成一个对象</span></span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>v-bind 可以简写 :</p><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">Vue模板语法有2大类：</span><br><span class="hljs-comment">1.插值语法：</span><br><span class="hljs-comment">功能：用于解析标签体内容。</span><br><span class="hljs-comment">写法：&#123;&#123;xxx&#125;&#125;，xxx是js表达式，且可以直接读取到data中的所有属性。</span><br><span class="hljs-comment">2.指令语法：</span><br><span class="hljs-comment">功能：用于解析标签（包括：标签属性、标签体内容、绑定事件.....）。</span><br><span class="hljs-comment">举例：v-bind:href=&quot;xxx&quot; 或  简写为 :href=&quot;xxx&quot;，xxx同样要写js表达式，</span><br><span class="hljs-comment"> 且可以直接读取到data中的所有属性。</span><br><span class="hljs-comment">备注：Vue中有很多的指令，且形式都是：v-????，此处我们只是拿v-bind举个例子。</span><br><span class="hljs-comment"> --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-bind:href</span>=<span class="hljs-string">&quot;school.url&quot;</span> <span class="hljs-attr">x</span>=<span class="hljs-string">&quot;hello&quot;</span>&gt;</span>去尚硅谷<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">:href</span>=<span class="hljs-string">&quot;school.url.toUpperCase()&quot;</span> <span class="hljs-attr">x</span>=<span class="hljs-string">&quot;hello&quot;</span>&gt;</span>去尚硅谷<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;jack&quot;</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">school</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;http://www.atguigu.com&quot;</span>,</span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            Vue中有2种数据绑定的方式：</span><br><span class="hljs-comment">                    1.单向绑定(v-bind)：数据只能从data流向页面。</span><br><span class="hljs-comment">                    2.双向绑定(v-model)：数据不仅能从data流向页面，还可以从页面流向data。</span><br><span class="hljs-comment">                        备注：</span><br><span class="hljs-comment">                                1.双向绑定一般都应用在表单类元素上（如：input、select等）</span><br><span class="hljs-comment">                                2.v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值。</span><br><span class="hljs-comment">         --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 单向数据绑定: &lt;input type=&quot;text&quot; v-bind:value=&quot;name&quot;&gt;&lt;br&gt;</span><br><span class="hljs-comment">        双向数据绑定: &lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;&gt; --&gt;</span><br><br>  单向数据绑定: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;name&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>  双向数据绑定: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span> /&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- 如下代码是错误的, 因为v-model只能应用在表单类(输入类元素上) --&gt;</span><br>  <span class="hljs-comment">&lt;!-- &lt;h2 v-model:x=&quot;name&quot;&gt;你好啊&lt;/h2&gt; --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FkN-VKccqn98LfjSOAGho-PKzueW.png"></p><h2 id="el-与-data-的两种写法"><a href="#el-与-data-的两种写法" class="headerlink" title="el 与 data 的两种写法"></a>el 与 data 的两种写法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">data与el的2种写法</span><br><span class="hljs-comment">1.el有2种写法</span><br><span class="hljs-comment">(1).new Vue时候配置el属性。</span><br><span class="hljs-comment">(2).先创建Vue实例，随后再通过vm.$mount(&#x27;#root&#x27;)指定el的值。</span><br><span class="hljs-comment">2.data有2种写法</span><br><span class="hljs-comment">(1).对象式</span><br><span class="hljs-comment">(2).函数式</span><br><span class="hljs-comment">如何选择：目前哪种写法都可以，以后学习到组件时，data必须使用函数式，否则会报错。</span><br><span class="hljs-comment">3.一个重要的原则：</span><br><span class="hljs-comment">由Vue管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不再是Vue实例了。</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>你好, &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">// el的两种写法</span></span><br><span class="language-javascript">  <span class="hljs-keyword">const</span> v = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-comment">// el: &#x27;#root&#x27;, // 第一种写法</span></span><br><span class="language-javascript">    <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(v);</span><br><span class="language-javascript">  v.$mount(<span class="hljs-string">&quot;#root&quot;</span>); <span class="hljs-comment">// 第二种写法</span></span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">// data的两种写法</span></span><br><span class="language-javascript">  <span class="hljs-comment">//data的第一种写法: 对象式</span></span><br><span class="language-javascript">  <span class="hljs-comment">/*         new Vue(&#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    el: &#x27;#root&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                    data: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        name: &#x27;尚硅谷&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                &#125;) */</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-comment">//data的第二种写法: 函数式</span></span><br><span class="language-javascript">  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">data</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">      &#125;;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="理解-MVVM"><a href="#理解-MVVM" class="headerlink" title="理解 MVVM"></a>理解 MVVM</h2><h3 id="编写代码片段"><a href="#编写代码片段" class="headerlink" title="编写代码片段"></a>编写代码片段</h3><p><img src="http://cdn.xiamu.icu//Fmrh-jif1Oct4SsBaXevvqdboLM3.png"><br><img src="http://cdn.xiamu.icu//ForNNCn9gFKlgtoGVxt3OwjVoIug.png"><br>复制如下代码保存</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;Print to console&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;scope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;html, javascript, typescript&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;prefix&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;v1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;body&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;new Vue(&#123;&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;    el: &#x27;#root&#x27;,&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;    data: &#123;&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;        $1&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;    &#125;&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;&#125;)&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;生成一个Vue实例&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>在页面中只需要输入 v1, 就可以快速创建一个 Vue 实例, 非常的方便<br><img src="http://cdn.xiamu.icu//Fk8T9TE0eA0hyqhRubaMfzzGBRn_.png"><br><img src="http://cdn.xiamu.icu//FkpARlNJIeoPEhcehZgyx2CVOSV9.png"></p><h3 id="MVVM-模型"><a href="#MVVM-模型" class="headerlink" title="MVVM 模型"></a>MVVM 模型</h3><ol><li>M：模型(Model) ：对应 data 中的数据</li><li>V：视图(View) ：模板</li><li>VM：视图模型(ViewModel) ： Vue 实例对象</li></ol><p><img src="http://cdn.xiamu.icu//FrH780-IlvcSQ07Szb4VrEeiYJeL.png"><br>MVVM 模型就是把一些乱七八糟的数据和一堆乱七八糟的 DOM 结构在中间使用 VM 连接<br><img src="http://cdn.xiamu.icu//Fh0F7zDEzwnYD3ecu6o2jpOAWRhA.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            MVVM模型</span><br><span class="hljs-comment">                        1. M：模型(Model) ：data中的数据</span><br><span class="hljs-comment">                        2. V：视图(View) ：模板代码</span><br><span class="hljs-comment">                        3. VM：视图模型(ViewModel)：Vue实例</span><br><span class="hljs-comment">            观察发现：</span><br><span class="hljs-comment">                        1.data中所有的属性，最后都出现在了vm身上。</span><br><span class="hljs-comment">                        2.vm身上所有的属性 及 Vue原型上所有属性，在Vue模板中都可以直接使用。</span><br><span class="hljs-comment">        --&gt;</span><br></code></pre></td></tr></table></figure><h2 id="回顾-Object-defineProperty-方法"><a href="#回顾-Object-defineProperty-方法" class="headerlink" title="回顾 Object.defineProperty 方法"></a>回顾 Object.defineProperty 方法</h2><h3 id="enumerable"><a href="#enumerable" class="headerlink" title="enumerable"></a>enumerable</h3><p>此时这种写法是可以遍历 person 的属性的<br><img src="http://cdn.xiamu.icu//FtX0tgWd8uzb9cUW8J4MfgavMiya.png"><br><img src="http://cdn.xiamu.icu//FrXA8Fuq8qGMBTPkqInoZSFTIAsa.png"><br><img src="http://cdn.xiamu.icu//FgKVbzn25iQnN7Xh35OZsb9i9BGN.png"><br>从上可以观察到 Object.defineProperty 定义的属性, 默认是不能被遍历的<br>只有设置了 enumerable: true 才能被遍历</p><h3 id="writable"><a href="#writable" class="headerlink" title="writable"></a>writable</h3><p><img src="http://cdn.xiamu.icu//FjjGZnZ3OGWCli-wJmX6Vk3gzWaK.png"><br><img src="http://cdn.xiamu.icu//Fm4rhC52nQ_CkFeshhKPbIiw7OV2.png"><br><img src="http://cdn.xiamu.icu//Fo_cGboLeidmD7mUWL3s-Fhim2gQ.png"><br>从上面可以观察到 Object.defineProperty 定义的属性, 默认是不能修改的<br>只有设置了  writable: true, 才能被修改</p><p><img src="http://cdn.xiamu.icu//FidL1vdJvYpkmBCyGrQT82nUA3LN.png"><br><img src="http://cdn.xiamu.icu//FqmfosKwNZauwOzbEAT28FsI4FSE.png"><br><img src="http://cdn.xiamu.icu//FoscBO3dZI55tcMQt5rJ9RdPfnU5.png"><br>从上面可以观察到 Object.defineProperty 定义的属性, 默认是不能删除的<br>只有设置了  configurable: true 才能被删除</p><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">1.Vue中的数据代理：</span><br><span class="hljs-comment">通过vm对象来代理data对象中属性的操作（读/写）</span><br><span class="hljs-comment">2.Vue中数据代理的好处：</span><br><span class="hljs-comment">更加方便的操作data中的数据</span><br><span class="hljs-comment">3.基本原理：</span><br><span class="hljs-comment">通过Object.defineProperty()把data对象中所有属性添加到vm上。</span><br><span class="hljs-comment">为每一个添加到vm上的属性，都指定一个getter/setter。</span><br><span class="hljs-comment">在getter/setter内部去操作（读/写）data中对应的属性。</span><br><span class="hljs-comment">--&gt;</span><br><br><span class="hljs-comment">&lt;!-- 数据代理: 通过一个对象代理对另一个对象中属性的操作 (读/写) --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">let</span> obj = &#123; <span class="hljs-attr">x</span>: <span class="hljs-number">100</span> &#125;;</span><br><span class="language-javascript">  <span class="hljs-keyword">let</span> obj2 = &#123; <span class="hljs-attr">y</span>: <span class="hljs-number">200</span> &#125;;</span><br><span class="language-javascript">  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(obj2, <span class="hljs-string">&quot;x&quot;</span>, &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-keyword">return</span> obj.<span class="hljs-property">x</span>;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>) &#123;</span><br><span class="language-javascript">      obj.<span class="hljs-property">x</span> = value;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FlGlmxKnTsYowLjHqx2x6w8Tg5Pg.png"><br>修改了 obj2.x 的值, obj.x 值也随之发生了变化</p><p><img src="http://cdn.xiamu.icu//FpGm4QqLJHKKg6ZK1Qr0I1HiZWgf.png"></p><p>vm 中使用了 Object.defineProperty 代理了_data 的属性<br>_data.name 中有 data 的值<br><img src="http://cdn.xiamu.icu//FuSX3UYZcaTceN6qhdgso5BwKnp5.png"></p><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><p>事件的基本使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                事件的基本使用：</span><br><span class="hljs-comment">                            1.使用v-on:xxx 或 @xxx 绑定事件，其中xxx是事件名；</span><br><span class="hljs-comment">                            2.事件的回调需要配置在methods对象中，最终会在vm上；</span><br><span class="hljs-comment">                            3.methods中配置的函数，不要用箭头函数！否则this就不是vm了；</span><br><span class="hljs-comment">                            4.methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；</span><br><span class="hljs-comment">                            5.@click=&quot;demo&quot; 和 @click=&quot;demo($event)&quot; 效果一致，但后者可以传参；</span><br><span class="hljs-comment">    --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">&quot;showInfo1&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo2(66, $event)&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">    <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">    <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">      <span class="hljs-title function_">showInfo1</span>(<span class="hljs-params">event</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(event.<span class="hljs-property">target</span>.<span class="hljs-property">innerText</span>);</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>); <span class="hljs-comment">// 此处的this是vm对象</span></span><br><span class="language-javascript">        <span class="hljs-comment">// alert(&#x27;同学您好!&#x27;);</span></span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">      <span class="hljs-title function_">showInfo2</span>(<span class="hljs-params">number, a</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a);</span><br><span class="language-javascript">        <span class="hljs-comment">// console.log(event.target.innerText);</span></span><br><span class="language-javascript">        <span class="hljs-comment">// console.log(this); // 此处的this是vm对象</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(number);</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;同学您好!!&quot;</span>);</span><br><span class="language-javascript">      &#125;,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>事件修饰符</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>事件修饰符<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">              * &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.demo1</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: skyblue;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.box1</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: skyblue;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.box2</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: orange;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.list</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: peru;</span><br><span class="language-css">                  <span class="hljs-attribute">overflow</span>: auto;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">              &#125;</span><br><span class="language-css">         </span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                Vue中的事件修饰符：</span><br><span class="hljs-comment">                        1.prevent：阻止默认事件（常用）；</span><br><span class="hljs-comment">                        2.stop：阻止事件冒泡（常用）；</span><br><span class="hljs-comment">                        3.once：事件只触发一次（常用）；</span><br><span class="hljs-comment">                        4.capture：使用事件的捕获模式；</span><br><span class="hljs-comment">                        5.self：只有event.target是当前操作的元素时才触发事件；</span><br><span class="hljs-comment">                        6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 阻止默认事件（常用）； --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;showInfo&quot;</span></span><br><span class="hljs-tag">        &gt;</span>点我提示信息&lt;/a<br>      &gt;<br><br>             <br>      <span class="hljs-comment">&lt;!-- 阻止事件冒泡（常用）； --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo1&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>           <br>        <span class="hljs-comment">&lt;!-- 修饰符可以连续写 --&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span> @<span class="hljs-attr">click.prevent.stop</span>=<span class="hljs-string">&quot;showInfo&quot;</span></span><br><span class="hljs-tag">          &gt;</span>点我提示信息&lt;/a<br>        &gt;<br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 触发过一次之后就不会再触发了 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 事件只触发一次（常用）； --&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 使用事件的捕获模式； --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box1&quot;</span> @<span class="hljs-attr">click.capture</span>=<span class="hljs-string">&quot;showMsg(1)&quot;</span>&gt;</span><br>                    div1            <br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box2&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsg(2)&quot;</span>&gt;</span><br>                          div2            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件； --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo1&quot;</span> @<span class="hljs-attr">click.self</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕； --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> @<span class="hljs-attr">wheel.passive</span>=<span class="hljs-string">&quot;demo&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- scroll用这个事件之后就可以不用添加passive修饰符 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- wheel事件会在函数调用完之后, 滚动条才会发生变化 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 给wheel加上passive之后, 即使函数还没执行完, 滚动条依旧会滚动 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> @<span class="hljs-attr">scroll</span>=<span class="hljs-string">&quot;demo&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">event</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// event.preventDefault();</span></span><br><span class="language-javascript">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;同学你好! &quot;</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">showMsg</span>(<span class="hljs-params">msg</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(msg);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">demo</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100000</span>; i++) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;#&quot;</span>);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>键盘事件<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">1.Vue中常用的按键别名：</span><br><span class="hljs-comment">回车 =&gt; enter</span><br><span class="hljs-comment">删除 =&gt; delete (捕获“删除”和“退格”键)</span><br><span class="hljs-comment">退出 =&gt; esc</span><br><span class="hljs-comment">空格 =&gt; space</span><br><span class="hljs-comment">换行 =&gt; tab (特殊，必须配合keydown去使用)</span><br><span class="hljs-comment">上 =&gt; up</span><br><span class="hljs-comment">下 =&gt; down</span><br><span class="hljs-comment">左 =&gt; left</span><br><span class="hljs-comment">右 =&gt; right</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">2.Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名）</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">3.系统修饰键（用法特殊）：ctrl、alt、shift、meta</span><br><span class="hljs-comment">(1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。</span><br><span class="hljs-comment">(2).配合keydown使用：正常触发事件。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">4.也可以使用keyCode去指定具体的按键（不推荐）</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">5.Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名</span><br><span class="hljs-comment">--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- &lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keyup.caps-lock=&quot;showInfo&quot;&gt; --&gt;</span><br>        <span class="hljs-comment">&lt;!-- &lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keydown.tab=&quot;showInfo&quot;&gt; --&gt;</span><br>        <span class="hljs-comment">&lt;!-- &lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keydown.ctrl=&quot;showInfo&quot;&gt; --&gt;</span><br>        <span class="hljs-comment">&lt;!-- &lt;input type=&quot;text&quot; placeholder=&quot;按下回车提示输入&quot; @keydown.huiche=&quot;showInfo&quot;&gt; --&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 只允许按下CtrlY的时候触发事件 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;按下回车提示输入&quot;</span> @<span class="hljs-attr">keydown.ctrl.y</span>=<span class="hljs-string">&quot;showInfo&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span> <span class="hljs-comment">// 阻止 vue 在启动时生成生产提示</span></span><br><span class="language-javascript">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">keyCodes</span>.<span class="hljs-property">huiche</span> = <span class="hljs-number">13</span>  <span class="hljs-comment">// 定义了一个别名按键</span></span><br><span class="language-javascript">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;尚硅谷&#x27;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">showInfo</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">key</span>, e.<span class="hljs-property">keyCode</span>);</span><br><span class="language-javascript">                    <span class="hljs-comment">// console.log(e.target.value);</span></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><p>姓名案例_插值语法实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>姓名案例_插值语法实现<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>              姓: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;firstName&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>         全名:<br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;firstName.slice(0, 3)&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 阻止 vue 在启动时生成生产提示</span></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">firstName</span>: <span class="hljs-string">&quot;张&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">lastName</span>: <span class="hljs-string">&quot;三&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>姓名案例_methods 实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>姓名案例_methods实现<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>              姓: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>        <br>      <span class="hljs-comment">&lt;!-- 插值语法调用方法需要加() --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定事件的方法可加括号, 也可不加括号 --&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 阻止 vue 在启动时生成生产提示</span></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">firstName</span>: <span class="hljs-string">&quot;张&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">lastName</span>: <span class="hljs-string">&quot;三&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">fullName</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// alert(1)</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&quot;-&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>姓名案例_计算属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>姓名案例_计算属性<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            计算属性：</span><br><span class="hljs-comment">                    1.定义：要用的属性不存在，要通过已有属性计算得来。</span><br><span class="hljs-comment">                    2.原理：底层借助了Objcet.defineproperty方法提供的getter和setter。</span><br><span class="hljs-comment">                    3.get函数什么时候执行？</span><br><span class="hljs-comment">                                (1).初次读取时会执行一次。</span><br><span class="hljs-comment">                                (2).当依赖的数据发生改变时会被再次调用。</span><br><span class="hljs-comment">                    4.优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</span><br><span class="hljs-comment">                    5.备注：</span><br><span class="hljs-comment">                            1.计算属性最终会出现在vm上，直接读取使用即可。</span><br><span class="hljs-comment">                            2.如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</span><br><span class="hljs-comment">    --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>              姓: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>        <br>      <span class="hljs-comment">&lt;!-- fullName里面的get函数只会被调用一次, 因为这里面有缓存机制 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 如果在methods中定义的函数中存在get函数, 且调用的是methods里面函数的get, 会被调用多次 --&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 阻止 vue 在启动时生成生产提示</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">firstName</span>: <span class="hljs-string">&quot;张&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">lastName</span>: <span class="hljs-string">&quot;三&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 计算属性, 以后计算出来的属性, 不在_data</span></span><br><span class="language-javascript">          <span class="hljs-attr">fullName</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// get 有什么作用? 当有人读取fullName时, get就会被调用, 且返回值就作为fullName的值</span></span><br><span class="language-javascript">            <span class="hljs-comment">// get 什么时候被调用?</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 1. 初次读取fullName时</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 2. 所依赖的数据发生变化时</span></span><br><span class="language-javascript">            <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;get被调用了&quot;</span>); <span class="hljs-comment">// console.log(this); // 此处的this是vm</span></span><br><span class="language-javascript">              <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&quot;-&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span>;</span><br><span class="language-javascript">            &#125;, <span class="hljs-comment">// set什么时候被调用? // 当fullName被修改时</span></span><br><span class="language-javascript">            <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;set&quot;</span>, value);</span><br><span class="language-javascript">              <span class="hljs-keyword">const</span> arr = value.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;-&quot;</span>);</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr[<span class="hljs-number">0</span>]);</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr[<span class="hljs-number">1</span>]);</span><br><span class="language-javascript">              <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> = arr[<span class="hljs-number">0</span>];</span><br><span class="language-javascript">              <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span> = arr[<span class="hljs-number">1</span>];</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>姓名案例_计算属性简写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>姓名案例_计算属性简写<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>              姓: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 阻止 vue 在启动时生成生产提示</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">firstName</span>: <span class="hljs-string">&quot;张&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">lastName</span>: <span class="hljs-string">&quot;三&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 完整写法</span></span><br><span class="language-javascript">          <span class="hljs-comment">/*                 fullName: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    get() &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        console.log(&#x27;get被调用了&#x27;);</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        return this.firstName + &#x27;-&#x27; + this.lastName</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    set(value) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        console.log(&#x27;set&#x27;, value);</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        const arr = value.split(&#x27;-&#x27;);</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        console.log(arr[0]);</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        console.log(arr[1]);</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        this.firstName = arr[0];</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        this.lastName = arr[1];</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                &#125; */</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 简写写法</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 只考虑读取, 不考虑修改的时候才能使用简写的方式</span></span><br><span class="language-javascript">          <span class="hljs-title function_">fullName</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;get被调用了&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&quot;-&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="监视属性"><a href="#监视属性" class="headerlink" title="监视属性"></a>监视属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>天气案例<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定事件的时候: @xxx=&quot;yyy&quot; yyy可以写一些简单的语句 --&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;isHot = !isHot&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-comment">&lt;!-- &lt;button @click=&quot;changeWeather&quot;&gt;切换天气&lt;/button&gt; --&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&quot;炎热&quot;</span> : <span class="hljs-string">&quot;凉爽&quot;</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>天气案例_监视属性<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                监视属性watch：</span><br><span class="hljs-comment">                    1.当被监视的属性变化时, 回调函数自动调用, 进行相关操作</span><br><span class="hljs-comment">                    2.监视的属性必须存在，才能进行监视！！</span><br><span class="hljs-comment">                    3.监视的两种写法：</span><br><span class="hljs-comment">                            (1).new Vue时传入watch配置</span><br><span class="hljs-comment">                            (2).通过vm.$watch监视</span><br><span class="hljs-comment">    --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定事件的时候: @xxx=&quot;yyy&quot; yyy可以写一些简单的语句 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;button @click=&quot;isHot = !isHot&quot;&gt;切换天气&lt;/button&gt; --&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&quot;炎热&quot;</span> : <span class="hljs-string">&quot;凉爽&quot;</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125; <span class="hljs-comment">/*             watch: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                            isHot: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                immediate:true, // 初始化时让handler调用一次</span></span><br><span class="hljs-comment"><span class="language-javascript">                                // handler 什么时候调用? isHot发生改变时</span></span><br><span class="hljs-comment"><span class="language-javascript">                                handler(newValue, oldValue) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue);</span></span><br><span class="hljs-comment"><span class="language-javascript">                                &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                            &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        &#125; */</span>,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">      vm.$watch(<span class="hljs-string">&quot;isHot&quot;</span>, &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 初始化时让handler调用一次 // handler 什么时候调用? isHot发生改变时</span></span><br><span class="language-javascript">        <span class="hljs-title function_">handler</span>(<span class="hljs-params">newValue, oldValue</span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isHot被修改了&quot;</span>, newValue, oldValue);</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>天气案例_深度监视<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            深度监视：</span><br><span class="hljs-comment">                    (1).Vue中的watch默认不监测对象内部值的改变（一层）。</span><br><span class="hljs-comment">                    (2).配置deep:true可以监测对象内部值改变（多层）。</span><br><span class="hljs-comment">            备注：</span><br><span class="hljs-comment">                    (1).Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以！</span><br><span class="hljs-comment">                    (2).使用watch时根据数据的具体结构，决定是否采用深度监视。</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>a的值是: &#123;&#123;numbers.a&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.a++&quot;</span>&gt;</span>点我a++<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>b的值是: &#123;&#123;numbers.b&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers.b++&quot;</span>&gt;</span>点我b++<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;numbers = &#123;a:666,b:999&#125;&quot;</span>&gt;</span>点我替换numbers<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">numbers</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">b</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&quot;炎热&quot;</span> : <span class="hljs-string">&quot;凉爽&quot;</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">isHot</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// immediate: true, // 初始化时让handler调用一次</span></span><br><span class="language-javascript">            <span class="hljs-comment">// handler 什么时候调用? isHot发生改变时</span></span><br><span class="language-javascript">            <span class="hljs-title function_">handler</span>(<span class="hljs-params">newValue, oldValue</span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isHot被修改了&quot;</span>, newValue, oldValue);</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">          &#125;, <span class="hljs-comment">// 监视多级结构中某个属性的变化 // 监视多级结构中所有属性的变化</span></span><br><span class="language-javascript">          <span class="hljs-comment">/*                 &#x27;numbers.a&#x27;: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    handler(newValue, oldValue) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        console.log(&#x27;numbers被修改了&#x27;, newValue, oldValue);</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                &#125;, */</span></span><br><span class="language-javascript">          <span class="hljs-attr">numbers</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">            <span class="hljs-title function_">handler</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;numbers被修改了&quot;</span>);</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>天气案例_监视属性_简写<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">isHot</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">changeWeather</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">info</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">isHot</span> ? <span class="hljs-string">&quot;炎热&quot;</span> : <span class="hljs-string">&quot;凉爽&quot;</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// 正常写法</span></span><br><span class="language-javascript">          <span class="hljs-comment">/*                 isHot: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    // immediate: true, // 初始化时让handler调用一次</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    // handler 什么时候调用? isHot发生改变时</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    // deep: true,</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    handler(newValue, oldValue) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                        console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue);</span></span><br><span class="hljs-comment"><span class="language-javascript">                                    &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                                &#125;, */</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 简写</span></span><br><span class="language-javascript">          <span class="hljs-comment">// 没有deep, immediate的时候就可以简写</span></span><br><span class="language-javascript">          <span class="hljs-comment">// isHot(newValue, oldValue) &#123;</span></span><br><span class="language-javascript">          <span class="hljs-comment">//     console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue);</span></span><br><span class="language-javascript">          <span class="hljs-comment">// &#125;</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">// 正常的写法 // vm.$watch(&#x27;isHot&#x27;, &#123; //     // immediate: true, // 初始化时让handler调用一次 //     // handler 什么时候调用? isHot发生改变时 //     // deep: true, //     handler(newValue, oldValue) &#123; //         console.log(&#x27;isHot被修改了&#x27;, newValue, oldValue); //     &#125; // &#125;) // 简写方式</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      vm.$watch(<span class="hljs-string">&quot;isHot&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">newValue, oldValue</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;isHot被修改了&quot;</span>, newValue, oldValue);</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>两个重要的小原则： 1.所被 Vue 管理的函数，最好写成普通函数，这样 this 的指向才是 vm 或 组件实例对象。 2.所有不被 Vue 所管理的函数（定时器的回调函数、ajax 的回调函数等、Promise 的回调函数），最好写成箭头函数，这样 this 的指向才是 vm 或 组件实例对象。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>姓名案例_watch实现<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            computed和watch之间的区别：</span><br><span class="hljs-comment">                    1.computed能完成的功能，watch都可以完成。</span><br><span class="hljs-comment">                    2.watch能完成的功能，computed不一定能完成，例如：watch可以进行异步操作。</span><br><span class="hljs-comment">            两个重要的小原则：</span><br><span class="hljs-comment">                        1.所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm 或 组件实例对象。</span><br><span class="hljs-comment">                        2.所有不被Vue所管理的函数（定时器的回调函数、ajax的回调函数等、Promise的回调函数），最好写成箭头函数，</span><br><span class="hljs-comment">                            这样this的指向才是vm 或 组件实例对象。</span><br><span class="hljs-comment">    --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>              姓: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;firstName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              名: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;lastName&quot;</span> /&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>              全名: <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 阻止 vue 在启动时生成生产提示</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">firstName</span>: <span class="hljs-string">&quot;张&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">lastName</span>: <span class="hljs-string">&quot;三&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">fullName</span>: <span class="hljs-string">&quot;张-三&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">firstName</span>(<span class="hljs-params">val</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">this</span>.<span class="hljs-property">fullName</span> = val + <span class="hljs-string">&quot;-&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span>;</span><br><span class="language-javascript">            &#125;, <span class="hljs-number">1000</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">lastName</span>(<span class="hljs-params">val</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">fullName</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> + <span class="hljs-string">&quot;-&quot;</span> + val;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>绑定样式<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.basic</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.happy</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">border</span>: <span class="hljs-number">4px</span> solid red;</span><br><span class="language-css">                  ;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.644</span>);</span><br><span class="language-css">                  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-number">30deg</span>, yellow, pink, orange, yellow);</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.sad</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">border</span>: <span class="hljs-number">4px</span> dashed <span class="hljs-built_in">rgb</span>(<span class="hljs-number">2</span>, <span class="hljs-number">197</span>, <span class="hljs-number">2</span>);</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: gray;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.normal</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: skyblue;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.atguigu1</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: yellowgreen;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.atguigu2</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">                  <span class="hljs-attribute">text-shadow</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span> <span class="hljs-number">10px</span> red;</span><br><span class="language-css">              &#125;</span><br><span class="language-css"></span><br><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.atguigu3</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">20px</span>;</span><br><span class="language-css">              &#125;</span><br><span class="language-css">         </span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>               <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            绑定样式：</span><br><span class="hljs-comment">                    1. class样式</span><br><span class="hljs-comment">                                写法:class=&quot;xxx&quot; xxx可以是字符串、对象、数组。</span><br><span class="hljs-comment">                                        字符串写法适用于：类名不确定，要动态获取。</span><br><span class="hljs-comment">                                        对象写法适用于：要绑定多个样式，个数不确定，名字也不确定。</span><br><span class="hljs-comment">                                        数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</span><br><span class="hljs-comment">                    2. style样式</span><br><span class="hljs-comment">                                :style=&quot;&#123;fontSize: xxx&#125;&quot;其中xxx是动态值。</span><br><span class="hljs-comment">                                :style=&quot;[a,b]&quot;其中a、b是样式对象。</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定class样式 -- 字符串写法, 适用于: 样式的类名不确定, 需要动态指定 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;mood&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定class样式 -- 数组写法, 适用于: 要绑定的样式个数不确定, 名字也不确定 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定class样式 -- 对象写法, 适用于: 要绑定的样式个数确定, 名字也确定, 但要动态决定用不用 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;&#123;atguigu1: true, atguigu2: true&#125;&quot;</span>&gt;</span><br>        &#123;&#123;name&#125;&#125;<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;fontSize: fsize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定style样式 -- 对象写法 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 绑定style样式 -- 数组写法 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 数据写法很少 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;[styleObj, styleObj2]&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;basic&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">mood</span>: <span class="hljs-string">&quot;normal&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">classArr</span>: [<span class="hljs-string">&quot;atguigu1&quot;</span>, <span class="hljs-string">&quot;atguigu2&quot;</span>, <span class="hljs-string">&quot;atguigu3&quot;</span>],</span><br><span class="language-javascript">          <span class="hljs-attr">classObj</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">atguigu1</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">atguigu2</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-attr">fsize</span>: <span class="hljs-number">40</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">styleObj</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&quot;40px&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;red&quot;</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-attr">styleObj2</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&quot;orange&quot;</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-attr">styleArr</span>: [</span><br><span class="language-javascript">            &#123;</span><br><span class="language-javascript">              <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&quot;40px&quot;</span>,</span><br><span class="language-javascript">              <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;blue&quot;</span>,</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            &#123;</span><br><span class="language-javascript">              <span class="hljs-attr">backgroundColor</span>: <span class="hljs-string">&quot;gray&quot;</span>,</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">changeMood</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">/*    console.log(parseInt(Math.random()*3));</span></span><br><span class="hljs-comment"><span class="language-javascript">                       let rand = parseInt(Math.random()*3)</span></span><br><span class="hljs-comment"><span class="language-javascript">                       if (rand == 0) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                           this.mood = &#x27;happy&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                       &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                       if (rand == 1) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                           this.mood = &#x27;sad&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                       &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                       if (rand == 2) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                           this.mood = &#x27;normal&#x27;</span></span><br><span class="hljs-comment"><span class="language-javascript">                       &#125; */</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> arr = [<span class="hljs-string">&quot;happy&quot;</span>, <span class="hljs-string">&quot;sad&quot;</span>, <span class="hljs-string">&quot;normal&quot;</span>];</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> index = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">3</span>);</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">mood</span> = arr[index];</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>条件渲染<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                条件渲染：</span><br><span class="hljs-comment">                            1.v-if</span><br><span class="hljs-comment">                                        写法：</span><br><span class="hljs-comment">                                                (1).v-if=&quot;表达式&quot; </span><br><span class="hljs-comment">                                                (2).v-else-if=&quot;表达式&quot;</span><br><span class="hljs-comment">                                                (3).v-else=&quot;表达式&quot;</span><br><span class="hljs-comment">                                        适用于：切换频率较低的场景。</span><br><span class="hljs-comment">                                        特点：不展示的DOM元素直接被移除。</span><br><span class="hljs-comment">                                        注意：v-if可以和:v-else-if、v-else一起使用，但要求结构不能被“打断”。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                            2.v-show</span><br><span class="hljs-comment">                                        写法：v-show=&quot;表达式&quot;</span><br><span class="hljs-comment">                                        适用于：切换频率较高的场景。</span><br><span class="hljs-comment">                                        特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</span><br><span class="hljs-comment">                                </span><br><span class="hljs-comment">                            3.备注：使用v-if的时，元素可能无法获取到，而使用v-show一定可以获取到。</span><br><span class="hljs-comment">         --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-comment">&lt;!-- 使用v-show做条件渲染 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;h2 v-show=&quot;true&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;h2 v-show=&quot;a&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;h2 v-show=&quot;1 === 3&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 使用v-show做条件渲染  --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;h2 v-if=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- v-else和v-else-if --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 中间的div不允许被打断 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;div v-if=&quot;n === 1&quot;&gt;Angular&lt;/div&gt; --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;div v-else-if=&quot;n === 2&quot;&gt;React&lt;/div&gt; --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;div v-else-if=&quot;n === 3&quot;&gt;Vue&lt;/div&gt; --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- &lt;div v-else&gt;哈哈&lt;/div&gt; --&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- v-if和template的配合使用 --&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- template标签内部只能跟v-if一起配合使用, 不能跟v-show --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;n === 1&quot;</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>你好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>尚硅谷<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">a</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">n</span>: <span class="hljs-number">0</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><p>基本列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>基本列表<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                v-for指令:</span><br><span class="hljs-comment">                        1.用于展示列表数据</span><br><span class="hljs-comment">                        2.语法：v-for=&quot;(item, index) in xxx&quot; :key=&quot;yyy&quot;</span><br><span class="hljs-comment">                        3.可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表(遍历数组)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- 两个参数也可以不加小括号(), 但是最好养成一个好的习惯 --&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- &lt;li v-for=&quot;person,index in persons&quot; :key=&quot;index&quot;&gt;&lt;/li&gt; --&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- 也可以使用of来遍历, 接近 JavaScript 迭代器的语法 --&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- &lt;li v-for=&quot;(person,index) of persons&quot; :key=&quot;index&quot;&gt;&lt;/li&gt; --&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;index&#125;&#125; - &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.id&#125;&#125;          <br>           <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 遍历对象 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>汽车信息(遍历对象)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value,key) in car&quot;</span> <span class="hljs-attr">::key</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>                          &#123;&#123;key&#125;&#125; -- &#123;&#123;value&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>                     <br>      <span class="hljs-comment">&lt;!-- 遍历字符串 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>遍历字符串(用得少)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(char,index) in str&quot;</span> <span class="hljs-attr">::key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;index&#125;&#125; -- &#123;&#123;char&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>                     <br>      <span class="hljs-comment">&lt;!-- 遍历指定次数 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>遍历指定次数(用得少)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(number,index) in 5&quot;</span> <span class="hljs-attr">::key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;number&#125;&#125; -- &#123;&#123;index&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">persons</span>: [</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;002&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;李四&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;003&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;王五&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">          <span class="hljs-attr">car</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;奥迪A8&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">price</span>: <span class="hljs-string">&quot;70万&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;黑色&quot;</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-attr">str</span>: <span class="hljs-string">&quot;hello&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>key 的原理<br>开发中如何选择 key?: 1.最好使用每条数据的唯一标识作为 key, 比如 id、手机号、身份证号、学号等唯一值。 2.如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用 index 作为 key 是没有问题的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>key的原理<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                面试题：react、vue中的key有什么作用？（key的内部原理）</span><br><span class="hljs-comment">                        </span><br><span class="hljs-comment">                        1. 虚拟DOM中key的作用：</span><br><span class="hljs-comment">                                        key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, </span><br><span class="hljs-comment">                                        随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：</span><br><span class="hljs-comment">                                        </span><br><span class="hljs-comment">                        2.对比规则：</span><br><span class="hljs-comment">                                    (1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</span><br><span class="hljs-comment">                                                ①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！</span><br><span class="hljs-comment">                                                ②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                                    (2).旧虚拟DOM中未找到与新虚拟DOM相同的key</span><br><span class="hljs-comment">                                                创建新的真实DOM，随后渲染到到页面。</span><br><span class="hljs-comment">                                                </span><br><span class="hljs-comment">                        3. 用index作为key可能会引发的问题：</span><br><span class="hljs-comment">                                            1. 若对数据进行：逆序添加、逆序删除等破坏顺序操作:</span><br><span class="hljs-comment">                                                            会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                                            2. 如果结构中还包含输入类的DOM：</span><br><span class="hljs-comment">                                                            会产生错误DOM更新 ==&gt; 界面有问题。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        4. 开发中如何选择key?:</span><br><span class="hljs-comment">                                            1.最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。</span><br><span class="hljs-comment">                                            2.如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，</span><br><span class="hljs-comment">                                                使用index作为key是没有问题的。</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表(遍历数组)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;person.id&quot;</span>&gt;</span><br>                          &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.id&#125;&#125;<br>          <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span>            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">persons</span>: [</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;002&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;李四&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;003&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;王五&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">add</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">unshift</span>(&#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;004&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;老刘&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">40</span> &#125;);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FvndVbk8QcXbm5WQfmIAwM9RHDnA.png"><br><img src="http://cdn.xiamu.icu//FjdbeZ3yMnWRT3Q8WquMC_mPz-Wu.png"></p><h2 id="监视数据的原理"><a href="#监视数据的原理" class="headerlink" title="监视数据的原理"></a>监视数据的原理</h2><p>监测数据的原理就是监测 set 被调用监测的, 一旦 set 被调用, 就会被监测到</p><p><img src="http://cdn.xiamu.icu//FgHfvU2dLxl5hH8ah8xUA9HXIySU.png"><br><img src="http://cdn.xiamu.icu//Fu4DQlMOWpmwRulYpiez5Y5zWcee.png"><br>因为 vm.student &#x3D;&#x3D;&#x3D; vm._data.student , 所以上面的代码可以简写<br><img src="http://cdn.xiamu.icu//FpsAmhp7QDUOrVrOH141OdpbTVvi.png"><br><img src="http://cdn.xiamu.icu//FmAe94iutK9tZkmQjKUzCmdpQJ8F.png"><br>注意, 这种方式只能给 vm 中的某一个对象追加属性, 不能给 data 追加一个属性<br><img src="http://cdn.xiamu.icu//FkKNuDplkfonq-FkH1s9lVBfW7Ln.png"></p><p><img src="http://cdn.xiamu.icu//FlEyJyZmqK1C8HuzYEiqcFze3SQR.png"></p><p><img src="http://cdn.xiamu.icu//FjHDyckS-FbvMDlOjl2r9xNeFykV.png"><br>只用着了这七个方法, vue 会发现修改了数组<br>下面这种方法, 修改数组, vue 也会发现, 然后渲染页面<br><img src="http://cdn.xiamu.icu//Fv0-H4bK9jhOhepkOuZt57foJ5FY.png"></p><p>数组里面不能够使用 getset 来监视, 尽管修改了数组索引的值, 但是页面并没有发生改变<br><img src="http://cdn.xiamu.icu//FpoigAWQViUCrjG4rikXwt_132y8.png"><br>使用了 push 的方式修改了数组, 但是页面发生了变化<br><img src="http://cdn.xiamu.icu//Flv_U3B_lTrJhiAvKjQVTxi7ao5F.png"><br>使用了这七个方法中的修改了数组, 都是响应式的, 页面都会有反应的</p><h2 id="列表渲染-1"><a href="#列表渲染-1" class="headerlink" title="列表渲染"></a>列表渲染</h2><p>基本列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>基本列表<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                v-for指令:</span><br><span class="hljs-comment">                        1.用于展示列表数据</span><br><span class="hljs-comment">                        2.语法：v-for=&quot;(item, index) in xxx&quot; :key=&quot;yyy&quot;</span><br><span class="hljs-comment">                        3.可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表(遍历数组)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- 两个参数也可以不加小括号(), 但是最好养成一个好的习惯 --&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- &lt;li v-for=&quot;person,index in persons&quot; :key=&quot;index&quot;&gt;&lt;/li&gt; --&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- 也可以使用of来遍历, 接近 JavaScript 迭代器的语法 --&gt;</span><br>                   <br>        <span class="hljs-comment">&lt;!-- &lt;li v-for=&quot;(person,index) of persons&quot; :key=&quot;index&quot;&gt;&lt;/li&gt; --&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;index&#125;&#125; - &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.id&#125;&#125;          <br>           <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br>             <br>      <span class="hljs-comment">&lt;!-- 遍历对象 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>汽车信息(遍历对象)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(value,key) in car&quot;</span> <span class="hljs-attr">::key</span>=<span class="hljs-string">&quot;key&quot;</span>&gt;</span><br>                          &#123;&#123;key&#125;&#125; -- &#123;&#123;value&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>                     <br>      <span class="hljs-comment">&lt;!-- 遍历字符串 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>遍历字符串(用得少)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(char,index) in str&quot;</span> <span class="hljs-attr">::key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;index&#125;&#125; -- &#123;&#123;char&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>                     <br>      <span class="hljs-comment">&lt;!-- 遍历指定次数 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>遍历指定次数(用得少)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(number,index) in 5&quot;</span> <span class="hljs-attr">::key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;number&#125;&#125; -- &#123;&#123;index&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">persons</span>: [</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;002&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;李四&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;003&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;王五&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">          <span class="hljs-attr">car</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;奥迪A8&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">price</span>: <span class="hljs-string">&quot;70万&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">color</span>: <span class="hljs-string">&quot;黑色&quot;</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-attr">str</span>: <span class="hljs-string">&quot;hello&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>key 的原理</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>key的原理<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                面试题：react、vue中的key有什么作用？（key的内部原理）</span><br><span class="hljs-comment">                        </span><br><span class="hljs-comment">                        1. 虚拟DOM中key的作用：</span><br><span class="hljs-comment">                                        key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, </span><br><span class="hljs-comment">                                        随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：</span><br><span class="hljs-comment">                                        </span><br><span class="hljs-comment">                        2.对比规则：</span><br><span class="hljs-comment">                                    (1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</span><br><span class="hljs-comment">                                                ①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！</span><br><span class="hljs-comment">                                                ②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                                    (2).旧虚拟DOM中未找到与新虚拟DOM相同的key</span><br><span class="hljs-comment">                                                创建新的真实DOM，随后渲染到到页面。</span><br><span class="hljs-comment">                                                </span><br><span class="hljs-comment">                        3. 用index作为key可能会引发的问题：</span><br><span class="hljs-comment">                                            1. 若对数据进行：逆序添加、逆序删除等破坏顺序操作:</span><br><span class="hljs-comment">                                                            会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                                            2. 如果结构中还包含输入类的DOM：</span><br><span class="hljs-comment">                                                            会产生错误DOM更新 ==&gt; 界面有问题。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        4. 开发中如何选择key?:</span><br><span class="hljs-comment">                                            1.最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。</span><br><span class="hljs-comment">                                            2.如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，</span><br><span class="hljs-comment">                                                使用index作为key是没有问题的。</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 遍历数组 --&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表(遍历数组)<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;person.id&quot;</span>&gt;</span><br>                          &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.id&#125;&#125;<br>          <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span>            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">persons</span>: [</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;002&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;李四&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;003&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;王五&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">add</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">unshift</span>(&#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;004&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;老刘&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">40</span> &#125;);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>列表过滤</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>列表过滤<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入名字&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;keyWord&quot;</span> /&gt;</span>  <br>           <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in filPersons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.id&#125;&#125; - &#123;&#123;person.sex&#125;&#125;      <br>               <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">/* const vm = new Vue(&#123; // 用watch实现</span></span><br><span class="hljs-comment"><span class="language-javascript">            el: &#x27;#root&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">            data: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                keyWord: &#x27;&#x27;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                persons: [</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#123; id: &#x27;001&#x27;, name: &#x27;马冬梅&#x27;, age: 18, sex: &#x27;女&#x27; &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#123; id: &#x27;002&#x27;, name: &#x27;周冬雨&#x27;, age: 19, sex: &#x27;女&#x27; &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#123; id: &#x27;003&#x27;, name: &#x27;周杰伦&#x27;, age: 20, sex: &#x27;男&#x27; &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#123; id: &#x27;004&#x27;, name: &#x27;温兆伦&#x27;, age: 20, sex: &#x27;男&#x27; &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                ],</span></span><br><span class="hljs-comment"><span class="language-javascript">                filPersons: []</span></span><br><span class="hljs-comment"><span class="language-javascript">            &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">            methods: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">            &#125;,</span></span><br><span class="hljs-comment"><span class="language-javascript">            watch: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                keyWord: &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                    immediate: true,</span></span><br><span class="hljs-comment"><span class="language-javascript">                    handler(val) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        this.filPersons = this.persons.filter((p) =&gt; &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                            return p.name.indexOf(val) !== -1</span></span><br><span class="hljs-comment"><span class="language-javascript">                        &#125;)</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">                &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">            &#125; </span></span><br><span class="hljs-comment"><span class="language-javascript">        &#125;)*/</span> <span class="hljs-comment">// 用computed实现</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">persons</span>: [</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;马冬梅&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;002&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;周冬雨&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">19</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;003&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;周杰伦&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;004&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;温兆伦&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">filPersons</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">              <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">keyWord</span>) !== -<span class="hljs-number">1</span>;</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>列表排序</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>列表排序<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入名字&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;keyWord&quot;</span> /&gt;</span>  <br>            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 2&quot;</span>&gt;</span>年龄升序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 1&quot;</span>&gt;</span>年龄降序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;sortType = 0&quot;</span>&gt;</span>原顺序<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in filPersons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;person.id&quot;</span>&gt;</span><br>                          &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.age&#125;&#125; - &#123;&#123;person.sex&#125;&#125;    <br>                      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span>            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">keyWord</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">persons</span>: [</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;马冬梅&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">33</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;002&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;周冬雨&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;003&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;周杰伦&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;004&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;温兆伦&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">          <span class="hljs-attr">sortType</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 0原顺序  1 降序  2 升序</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">filPersons</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> arr = <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">p</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">              <span class="hljs-keyword">return</span> p.<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">keyWord</span>) !== -<span class="hljs-number">1</span>;</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">sortType</span>) &#123;</span><br><span class="language-javascript">              arr.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">p1, p2</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">sortType</span> == <span class="hljs-number">1</span> ? p2.<span class="hljs-property">age</span> - p1.<span class="hljs-property">age</span> : p1.<span class="hljs-property">age</span> - p2.<span class="hljs-property">age</span>;</span><br><span class="language-javascript">              &#125;);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> arr;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>更新时的一个问题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>列表排序<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>人员列表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateMei&quot;</span>&gt;</span>点我修改马冬梅<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;person.id&quot;</span>&gt;</span><br>                          &#123;&#123;person.name&#125;&#125; - &#123;&#123;person.age&#125;&#125; - &#123;&#123;person.sex&#125;&#125;    <br>                 <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">persons</span>: [</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;马冬梅&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">33</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;002&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;周冬雨&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">30</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;女&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;003&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;周杰伦&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;,</span><br><span class="language-javascript">            &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;004&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;温兆伦&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;,</span><br><span class="language-javascript">          ],</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">updateMei</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// this.persons[0].name = &#x27;马老师&#x27;    // 奏效</span></span><br><span class="language-javascript">            <span class="hljs-comment">// this.persons[0].age = 50          // 奏效</span></span><br><span class="language-javascript">            <span class="hljs-comment">// this.persons[0].sex = &#x27;男&#x27;        // 奏效</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">persons</span>[<span class="hljs-number">0</span>] = &#123; <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;001&quot;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;马老师&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">50</span>, <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;男&quot;</span> &#125;;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Vue 检测数据改变的原理</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Vue检测数据改变的原理<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称: &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址: &#123;&#123;address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>模拟一个数据检测</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>模拟一个数据检测<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">let</span> data = &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">      &#125;; <span class="hljs-comment">// let tmp = &#x27;尚硅谷&#x27; // setInterval(() =&gt; &#123; //     if (data.name !== tmp) &#123; //         tmp = data.name //         console.log(&#x27;name被改了&#x27;); //     &#125; // &#125;) // Object.defineProperty(data, &#x27;name&#x27;, &#123; //     get() &#123; //         return data.name //     &#125;, //     set(val) &#123; //         data.name = val //     &#125; // &#125;) // 创建一个监视的实例对象, 用于监视data中属性的变化</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> obs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Observer</span>(data);</span><br><span class="language-javascript">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obs); <span class="hljs-comment">// 准备一个vm实例对象</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">let</span> vm = &#123;&#125;;</span><br><span class="language-javascript">      vm.<span class="hljs-property">_data</span> = data = obs; <span class="hljs-comment">// 创建一个监视实例对象</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">function</span> <span class="hljs-title function_">Observer</span>(<span class="hljs-params">obj</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 汇总对象中的所有属性形成一个数组</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> keys = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj);</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(keys);</span><br><span class="language-javascript">        keys.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">k</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">          <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(<span class="hljs-variable language_">this</span>, k, &#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-keyword">return</span> obj[k];</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-title function_">set</span>(<span class="hljs-params">val</span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(</span><br><span class="language-javascript">                <span class="hljs-string">`<span class="hljs-subst">$&#123;k&#125;</span>被改了被改了, 我要去解析模板, 生成虚拟DOM.....我要开始忙了`</span></span><br><span class="language-javascript">              );</span><br><span class="language-javascript">              obj[k] = val;</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">          &#125;);</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript">      &#125;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Vue.set 的使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Vue检测数据改变的原理<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称: &#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址: &#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长: &#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>点我添加一个性别: 性别为男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>      <br>       <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名: &#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>年龄: &#123;&#123;student.age.rAge&#125;&#125;, &#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别: &#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">school</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-attr">student</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;tom&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">age</span>: &#123;</span><br><span class="language-javascript">              <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,</span><br><span class="language-javascript">              <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">friends</span>: [</span><br><span class="language-javascript">              &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;jerry&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;,</span><br><span class="language-javascript">              &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;tony&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">36</span> &#125;,</span><br><span class="language-javascript">            ],</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&quot;sex&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Vue 检测数据改变的原理_数组</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Vue检测数据改变的原理_数组<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称: &#123;&#123;school.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址: &#123;&#123;school.address&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>校长: &#123;&#123;school.leader&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>点我添加一个性别: 性别为男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>      <br>       <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名: &#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>年龄: &#123;&#123;student.age.rAge&#125;&#125;, &#123;&#123;student.age.sAge&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别: &#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>爱好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h,index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;h&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">school</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-attr">student</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;tom&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">age</span>: &#123;</span><br><span class="language-javascript">              <span class="hljs-attr">rAge</span>: <span class="hljs-number">40</span>,</span><br><span class="language-javascript">              <span class="hljs-attr">sAge</span>: <span class="hljs-number">29</span>,</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&quot;抽烟&quot;</span>, <span class="hljs-string">&quot;喝酒&quot;</span>, <span class="hljs-string">&quot;烫头&quot;</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">friends</span>: [</span><br><span class="language-javascript">              &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;jerry&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;,</span><br><span class="language-javascript">              &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;tony&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">36</span> &#125;,</span><br><span class="language-javascript">            ],</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&quot;sex&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>总结 Vue 数据监测</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>总结Vue数据监测<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            Vue监视数据的原理：</span><br><span class="hljs-comment">                1. vue会监视data中所有层次的数据。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                2. 如何监测对象中的数据？</span><br><span class="hljs-comment">                                通过setter实现监视，且要在new Vue时就传入要监测的数据。</span><br><span class="hljs-comment">                                    (1).对象中后追加的属性，Vue默认不做响应式处理</span><br><span class="hljs-comment">                                    (2).如需给后添加的属性做响应式，请使用如下API：</span><br><span class="hljs-comment">                                                    Vue.set(target，propertyName/index，value) 或 </span><br><span class="hljs-comment">                                                    vm.$set(target，propertyName/index，value)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                3. 如何监测数组中的数据？</span><br><span class="hljs-comment">                                    通过包裹数组更新元素的方法实现，本质就是做了两件事：</span><br><span class="hljs-comment">                                        (1).调用原生对应的方法对数组进行更新。</span><br><span class="hljs-comment">                                        (2).重新解析模板，进而更新页面。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                4.在Vue修改数组中的某个元素一定要用如下方法：</span><br><span class="hljs-comment">                            1.使用这些API:push()、pop()、shift()、unshift()、splice()、sort()、reverse()</span><br><span class="hljs-comment">                            2.Vue.set() 或 vm.$set()</span><br><span class="hljs-comment">                </span><br><span class="hljs-comment">                特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据对象 添加属性！！！</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学生信息<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;student.age++&quot;</span>&gt;</span>年龄+1岁<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addSex&quot;</span>&gt;</span>添加性别属性，默认值：男<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateSex&quot;</span>&gt;</span>修改性别<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addFriends&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateFriends&quot;</span>&gt;</span>修改第一个朋友的名字为：张三<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateHobby&quot;</span>&gt;</span>修改第一个爱好为：开车<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;deleteHobby&quot;</span>&gt;</span>过滤掉爱好中的抽烟<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>姓名: &#123;&#123;student.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>年龄: &#123;&#123;student.age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;student.sex&quot;</span>&gt;</span>性别: &#123;&#123;student.sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>爱好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(h,index) in student.hobby&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;h&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>朋友们<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>                   <br>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(f,index) in student.friends&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span><br>                          &#123;&#123;f.name&#125;&#125; -- &#123;&#123;f.age&#125;&#125;            <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>               <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">student</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;tom&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">hobby</span>: [<span class="hljs-string">&quot;抽烟&quot;</span>, <span class="hljs-string">&quot;喝酒&quot;</span>, <span class="hljs-string">&quot;烫头&quot;</span>],</span><br><span class="language-javascript">            <span class="hljs-attr">friends</span>: [</span><br><span class="language-javascript">              &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;jerry&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">35</span> &#125;,</span><br><span class="language-javascript">              &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;tony&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">36</span> &#125;,</span><br><span class="language-javascript">            ],</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">addSex</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$set(<span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>, <span class="hljs-string">&quot;sex&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">updateSex</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">sex</span> = <span class="hljs-string">&quot;未知&quot;</span>;</span><br><span class="language-javascript">            <span class="hljs-comment">/*                     if (this.student.sex === &#x27;男&#x27;) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        this.$set(this.student, &#x27;sex&#x27;, &#x27;女&#x27;)</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125; else &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                        this.$set(this.student, &#x27;sex&#x27;, &#x27;男&#x27;)</span></span><br><span class="hljs-comment"><span class="language-javascript">                    &#125; */</span></span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">addFriends</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// vm.student.friends.unshift(&#123;name: &#x27;肉豆蔻&#x27;, age: 18&#125;)</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>.<span class="hljs-title function_">unshift</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;肉豆蔻&quot;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">18</span> &#125;);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">updateFriends</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// vm.student.friends[0].name = &#x27;张三&#x27;</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">friends</span>[<span class="hljs-number">0</span>].<span class="hljs-property">name</span> = <span class="hljs-string">&quot;张三&quot;</span>;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">addHobby</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// vm.student.hobby.push(&#x27;学习&#x27;)</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;学习&quot;</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">updateHobby</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// vm.$set(vm.student.hobby, 0, &#x27;开车&#x27;)</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">splice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;开车&quot;</span>); <span class="hljs-comment">// this.$set(this.student.hobby, 0, &#x27;开车&#x27;)</span></span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">deleteHobby</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// vm.student.hobby.filter(h =&gt; h.indexOf(&#x27;抽烟&#x27;))</span></span><br><span class="language-javascript">            <span class="hljs-comment">// filter是浅拷贝</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// this.student.hobby = this.student.hobby.filter(h =&gt; h.indexOf(&#x27;抽烟&#x27;))</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">student</span>.<span class="hljs-property">hobby</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">h</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">              <span class="hljs-keyword">return</span> h !== <span class="hljs-string">&quot;抽烟&quot;</span>;</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">/*</span></span><br><span class="hljs-comment"><span class="language-javascript">        filter是浅拷贝</span></span><br><span class="hljs-comment"><span class="language-javascript">        </span></span><br><span class="hljs-comment"><span class="language-javascript">        const words = [&#x27;spray&#x27;, &#x27;limit&#x27;, &#x27;elite&#x27;, &#x27;exuberant&#x27;, &#x27;destruction&#x27;, &#x27;present&#x27;];</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">        const result = words.filter(word =&gt; word.length &gt; 6);</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">        console.log(result);</span></span><br><span class="hljs-comment"><span class="language-javascript">        */</span></span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="收集表单数据"><a href="#收集表单数据" class="headerlink" title="收集表单数据"></a>收集表单数据</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>收集表单数据<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            收集表单数据：</span><br><span class="hljs-comment">                    若：&lt;input type=&quot;text&quot;/&gt;，则v-model收集的是value值，用户输入的就是value值。</span><br><span class="hljs-comment">                    若：&lt;input type=&quot;radio&quot;/&gt;，则v-model收集的是value值，且要给标签配置value值。</span><br><span class="hljs-comment">                    若：&lt;input type=&quot;checkbox&quot;/&gt;</span><br><span class="hljs-comment">                            1.没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）</span><br><span class="hljs-comment">                            2.配置input的value属性:</span><br><span class="hljs-comment">                                    (1)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）</span><br><span class="hljs-comment">                                    (2)v-model的初始值是数组，那么收集的的就是value组成的数组</span><br><span class="hljs-comment">                    备注：v-model的三个修饰符：</span><br><span class="hljs-comment">                                    lazy：失去焦点再收集数据</span><br><span class="hljs-comment">                                    number：输入字符串转为有效的数字</span><br><span class="hljs-comment">                                    trim：输入首尾空格过滤</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">form</span> @<span class="hljs-attr">submit.prevent</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><br>                    账号:<br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span></span><br><span class="hljs-tag">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">v-model.trim</span>=<span class="hljs-string">&quot;userInfo.account&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">autofocus</span></span><br><span class="hljs-tag">        /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    密码:<br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.password&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    年龄:<br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">v-model.number</span>=<span class="hljs-string">&quot;userInfo.age&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    性别:             男<span class="hljs-tag">&lt;<span class="hljs-name">input</span></span><br><span class="hljs-tag">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;male&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.sex&quot;</span></span><br><span class="hljs-tag">        /&gt;</span><br>                    女<span class="hljs-tag">&lt;<span class="hljs-name">input</span></span><br><span class="hljs-tag">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sex&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;female&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.sex&quot;</span></span><br><span class="hljs-tag">        /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    爱好:             抽烟<span class="hljs-tag">&lt;<span class="hljs-name">input</span></span><br><span class="hljs-tag">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;抽烟&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.hobby&quot;</span></span><br><span class="hljs-tag">        /&gt;</span><br>                    喝酒<span class="hljs-tag">&lt;<span class="hljs-name">input</span></span><br><span class="hljs-tag">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;喝酒&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.hobby&quot;</span></span><br><span class="hljs-tag">        /&gt;</span><br>                    烫头<span class="hljs-tag">&lt;<span class="hljs-name">input</span></span><br><span class="hljs-tag">          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;hobby&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;烫头&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.hobby&quot;</span></span><br><span class="hljs-tag">        /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    所属校区            <br>        <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.city&quot;</span>&gt;</span><br>                         <br>          <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>请选择校区<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                         <br>          <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;beijing&quot;</span>&gt;</span>北京<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                         <br>          <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                         <br>          <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                         <br>          <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;wuhan&quot;</span>&gt;</span>武汉<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>                     <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    其他信息:            <br>        <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">v-model.lazy</span>=<span class="hljs-string">&quot;userInfo.other&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span>            <br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userInfo.agree&quot;</span> /&gt;</span>          <br>          阅读并接受<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.atguigu.com&quot;</span>&gt;</span>《用户协议》<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>          <br>          <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">userInfo</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">account</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">password</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">sex</span>: <span class="hljs-string">&quot;female&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">hobby</span>: [],</span><br><span class="language-javascript">            <span class="hljs-attr">city</span>: <span class="hljs-string">&quot;beijing&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">other</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">agree</span>: <span class="hljs-string">&quot;&quot;</span>,</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">demo</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">userInfo</span>));</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>在<a href="https://www.bootcdn.cn/">https://www.bootcdn.cn/</a>网站中找到 dayjs.min.js 并且引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>过滤器<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/dayjs.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            过滤器：</span><br><span class="hljs-comment">                定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。</span><br><span class="hljs-comment">                语法：</span><br><span class="hljs-comment">                        1.注册过滤器：Vue.filter(name,callback) 或 new Vue&#123;filters:&#123;&#125;&#125;</span><br><span class="hljs-comment">                        2.使用过滤器：&#123;&#123; xxx | 过滤器名&#125;&#125;  或  v-bind:属性 = &quot;xxx | 过滤器名&quot;</span><br><span class="hljs-comment">                备注：</span><br><span class="hljs-comment">                        1.过滤器也可以接收额外参数、多个过滤器也可以串联</span><br><span class="hljs-comment">                        2.并没有改变原本的数据, 是产生新的对应的数据</span><br><span class="hljs-comment">        --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>显示格式化后的时间<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 计算属性实现 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;fmtTime&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- methods实现 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;getFmtTime()&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 过滤器实现 --&gt;</span><br>       <span class="hljs-comment">&lt;!-- |是管道符 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;time | timeFormater&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 过滤器传参 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;time | timeFormater(&#x27;YYYY_MM_DD&#x27;)&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 多个过滤器的串联 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>现在是: &#123;&#123;time | timeFormater(&#x27;YYYY_MM_DD&#x27;) | mySlice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 属性中也可以使用管道符过滤 --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">:x</span>=<span class="hljs-string">&quot;msg | mySlice&quot;</span>&gt;</span>尚硅谷<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>       <span class="hljs-comment">&lt;!-- 注意 , 过滤器只能使用在插值语法中和v-bind中 --&gt;</span><br>       <span class="hljs-comment">&lt;!-- 不能使用在v-model中 --&gt;</span><br>       <span class="hljs-comment">&lt;!-- &lt;input type=&quot;text&quot; v-model=&quot;msg | mySilce&quot;&gt; --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;name | mySlice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span><br><span class="language-javascript">        <span class="hljs-comment">// 全局过滤器</span></span><br><span class="language-javascript">        <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-string">&#x27;mySlice&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> value.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>);</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">// time: 1621561377603 // 时间戳</span></span><br><span class="language-javascript">                <span class="hljs-attr">time</span>: <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>(), <span class="hljs-comment">// 时间戳</span></span><br><span class="language-javascript">                <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;你好,尚硅谷&#x27;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">getFmtTime</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>);</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">computed</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">fmtTime</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">time</span>).<span class="hljs-title function_">format</span>(<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>);</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-comment">// 局部过滤器</span></span><br><span class="language-javascript">            <span class="hljs-attr">filters</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">timeFormater</span>(<span class="hljs-params">value, str=<span class="hljs-string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span></span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">return</span> <span class="hljs-title function_">dayjs</span>(value).<span class="hljs-title function_">format</span>(str);</span><br><span class="language-javascript">                &#125;,</span><br><span class="language-javascript">                <span class="hljs-comment">// mySlice(value) &#123;</span></span><br><span class="language-javascript">                <span class="hljs-comment">//     return value.slice(0, 4);</span></span><br><span class="language-javascript">                <span class="hljs-comment">// &#125;</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root2&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;hello, atguigu&#x27;</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">               </span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="内置指令"><a href="#内置指令" class="headerlink" title="内置指令"></a>内置指令</h2><p>v-text</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>v-text指令<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                我们学过的指令：</span><br><span class="hljs-comment">                        v-bind  : 单向绑定解析表达式, 可简写为 :xxx</span><br><span class="hljs-comment">                        v-model : 双向数据绑定</span><br><span class="hljs-comment">                        v-for   : 遍历数组/对象/字符串</span><br><span class="hljs-comment">                        v-on    : 绑定事件监听, 可简写为@</span><br><span class="hljs-comment">                        v-if        : 条件渲染（动态控制节点是否存存在）</span><br><span class="hljs-comment">                        v-else  : 条件渲染（动态控制节点是否存存在）</span><br><span class="hljs-comment">                        v-show  : 条件渲染 (动态控制节点是否展示)</span><br><span class="hljs-comment">                v-text指令：</span><br><span class="hljs-comment">                        1.作用：向其所在的节点中渲染文本内容。</span><br><span class="hljs-comment">                        2.与插值语法的区别：v-text会替换掉节点中的内容，&#123;&#123;xx&#125;&#125;则不会。</span><br><span class="hljs-comment">    --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>你好, &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">str</span>: <span class="hljs-string">&quot;&lt;h2&gt;你好啊!&lt;/h2&gt;&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>v-html<br>v-html 有安全性问题！！！！<br>(1).在网站上动态渲染任意 HTML 是非常危险的，容易导致 XSS 攻击。<br>(2).一定要在可信的内容上使用 v-html，永不要用在用户提交的内容上！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>v-html指令<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                v-html指令：</span><br><span class="hljs-comment">                        1.作用：向指定节点中渲染包含html结构的内容。</span><br><span class="hljs-comment">                        2.与插值语法的区别：</span><br><span class="hljs-comment">                                    (1).v-html会替换掉节点中所有的内容，&#123;&#123;xx&#125;&#125;则不会。</span><br><span class="hljs-comment">                                    (2).v-html可以识别html结构。</span><br><span class="hljs-comment">                        3.严重注意：v-html有安全性问题！！！！</span><br><span class="hljs-comment">                                    (1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。</span><br><span class="hljs-comment">                                    (2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>你好, &#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;str2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">str</span>: <span class="hljs-string">&quot;&lt;h2&gt;你好啊!&lt;/h2&gt;&quot;</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">str2</span>: <span class="hljs-string">&#x27;&lt;a href=javascript:location.href=&quot;http://www.baidu.com?&quot;+document.cookie&gt;点我有好看的&lt;/a&gt;&#x27;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fnn1thQouxh4LjJCjoS1TfO4UvbU.png"><br><img src="http://cdn.xiamu.icu//FmmCs9tkdddxo1kVJuhcN99iatz0.png"><br>v-cloak</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>v-cloak指令<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-attr">[v-cloak]</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">display</span>: none;</span><br><span class="language-css">              &#125;</span><br><span class="language-css">         </span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                v-html指令：</span><br><span class="hljs-comment">                        1.作用：向指定节点中渲染包含html结构的内容。</span><br><span class="hljs-comment">                        2.与插值语法的区别：</span><br><span class="hljs-comment">                                    (1).v-html会替换掉节点中所有的内容，&#123;&#123;xx&#125;&#125;则不会。</span><br><span class="hljs-comment">                                    (2).v-html可以识别html结构。</span><br><span class="hljs-comment">                        3.严重注意：v-html有安全性问题！！！！</span><br><span class="hljs-comment">                                    (1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。</span><br><span class="hljs-comment">                                    (2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- 引入在线的vue.js然后F12Network设置网速为慢 --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>v-once</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>v-once指令<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            v-once指令：</span><br><span class="hljs-comment">                        1.v-once所在节点在初次动态渲染后，就视为静态内容了。</span><br><span class="hljs-comment">                        2.以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。</span><br><span class="hljs-comment">        --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-once</span>&gt;</span>初始的时候n = &#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n = &#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span><br><span class="language-javascript">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">n</span>: <span class="hljs-number">1</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">               </span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>v-pre</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>v-pre_指令<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            v-pre指令：</span><br><span class="hljs-comment">                    1.跳过其所在节点的编译过程。</span><br><span class="hljs-comment">                    2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。</span><br><span class="hljs-comment">        --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-pre</span>&gt;</span>Vue其实很简单<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n = &#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span></span><br><span class="language-javascript">        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#root&#x27;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">n</span>: <span class="hljs-number">1</span></span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">               </span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h2><p>自定义指令</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>自定义指令<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                需求1：定义一个v-big指令，和v-text功能类似，但会把绑定的数值放大10倍。</span><br><span class="hljs-comment">                需求2：定义一个v-fbind指令，和v-bind功能类似，但可以让其所绑定的input元素默认获取焦点。</span><br><span class="hljs-comment">                自定义指令总结：</span><br><span class="hljs-comment">                        一、定义语法：</span><br><span class="hljs-comment">                                    (1).局部指令：</span><br><span class="hljs-comment">                                                new Vue(&#123;                                                           new Vue(&#123;</span><br><span class="hljs-comment">                                                    directives:&#123;指令名:配置对象&#125;   或           directives&#123;指令名:回调函数&#125;</span><br><span class="hljs-comment">                                                &#125;)                                                                      &#125;)</span><br><span class="hljs-comment">                                    (2).全局指令：</span><br><span class="hljs-comment">                                                    Vue.directive(指令名,配置对象) 或   Vue.directive(指令名,回调函数)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        二、配置对象中常用的3个回调：</span><br><span class="hljs-comment">                                    (1).bind：指令与元素成功绑定时调用。</span><br><span class="hljs-comment">                                    (2).inserted：指令所在元素被插入页面时调用。</span><br><span class="hljs-comment">                                    (3).update：指令所在模板结构被重新解析时调用。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        三、备注：</span><br><span class="hljs-comment">                                    1.指令定义时不加v-，但使用时要加v-；</span><br><span class="hljs-comment">                                    2.指令名如果是多个单词，要使用kebab-case命名方式，不要用camelCase命名。</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>放大10倍后的值是: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-big</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>放大10倍后的值是: <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-big-number</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-fbind:value</span>=<span class="hljs-string">&quot;n&quot;</span> /&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root2&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-fbind:value</span>=<span class="hljs-string">&quot;x&quot;</span> /&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 定义全局指令</span></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&quot;fbind&quot;</span>, &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">bind</span>(<span class="hljs-params">element, binding</span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(&#x27;bind&#x27;);</span></span><br><span class="language-javascript">          element.<span class="hljs-property">value</span> = binding.<span class="hljs-property">value</span>;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">inserted</span>(<span class="hljs-params">element, binding</span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(&#x27;inserted&#x27;);</span></span><br><span class="language-javascript">          element.<span class="hljs-title function_">focus</span>();</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">update</span>(<span class="hljs-params">element, binding</span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-comment">// console.log(&#x27;update&#x27;);</span></span><br><span class="language-javascript">          element.<span class="hljs-property">value</span> = binding.<span class="hljs-property">value</span>;</span><br><span class="language-javascript">          element.<span class="hljs-title function_">focus</span>();</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">/* Vue.directive(&#x27;big&#x27;, function (element, binding) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">            console.log(&#x27;big&#x27;, this); // 注意此处的this是window</span></span><br><span class="hljs-comment"><span class="language-javascript">            element.innerText = binding.value * 10</span></span><br><span class="hljs-comment"><span class="language-javascript">            // console.log(element, binding);</span></span><br><span class="hljs-comment"><span class="language-javascript">            // console.log(&#x27;big&#x27;);</span></span><br><span class="hljs-comment"><span class="language-javascript">        &#125;) */</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">n</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;, <span class="hljs-comment">// big函数何时会被调用？1.指令与元素成功绑定时（一上来）。2.指令所在的模板被重新解析时。</span></span><br><span class="language-javascript">        <span class="hljs-attr">directives</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">big</span>(<span class="hljs-params">element, binding</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;big&quot;</span>, <span class="hljs-variable language_">this</span>); <span class="hljs-comment">// 注意此处的this是window</span></span><br><span class="language-javascript">            element.<span class="hljs-property">innerText</span> = binding.<span class="hljs-property">value</span> * <span class="hljs-number">10</span>; <span class="hljs-comment">// console.log(element, binding); // console.log(&#x27;big&#x27;);</span></span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-string">&quot;big-number&quot;</span>(element, binding) &#123;</span><br><span class="language-javascript">            element.<span class="hljs-property">innerText</span> = binding.<span class="hljs-property">value</span> * <span class="hljs-number">10</span>; <span class="hljs-comment">// console.log(element, binding); // console.log(&#x27;big&#x27;);</span></span><br><span class="language-javascript">          &#125;, <span class="hljs-comment">// fbind(element, binding) &#123; //     element.value = binding.value //     element.focus() // &#125; // fbind: &#123; //     bind(element, binding) &#123; //         // console.log(&#x27;bind&#x27;); //         element.value = binding.value //     &#125;, //     inserted(element, binding) &#123; //         // console.log(&#x27;inserted&#x27;); //         element.focus() //     &#125;, //     update(element, binding) &#123; //         // console.log(&#x27;update&#x27;); //         element.value = binding.value //         element.focus() //     &#125; // &#125;</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root2&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">x</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>回顾一个 DOM 操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>回顾一个DOM操作<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">              <span class="hljs-selector-class">.demo</span> &#123;</span><br><span class="language-css">                  <span class="hljs-attribute">background-color</span>: orange;</span><br><span class="language-css">              &#125;</span><br><span class="language-css">         </span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>点我创建一个输入框<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> btn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;btn&quot;</span>);</span><br><span class="language-javascript">      btn.<span class="hljs-property">onclick</span> = <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> input = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;input&quot;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        input.<span class="hljs-property">className</span> = <span class="hljs-string">&quot;demo&quot;</span>;</span><br><span class="language-javascript">        input.<span class="hljs-property">value</span> = <span class="hljs-number">99</span>;</span><br><span class="language-javascript">        input.<span class="hljs-property">onclick</span> = <span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>);</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(input);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        input.<span class="hljs-title function_">focus</span>();</span><br><span class="language-javascript"></span><br><span class="language-javascript">        input.<span class="hljs-property">parentElement</span>.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundColor</span> = <span class="hljs-string">&quot;skyblue&quot;</span>;</span><br><span class="language-javascript">        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(input.<span class="hljs-property">parentElement</span>);</span><br><span class="language-javascript">      &#125;;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="引出生命周期"><a href="#引出生命周期" class="headerlink" title="引出生命周期"></a>引出生命周期</h2><p>引出生命周期</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>引出生命周期<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                生命周期：</span><br><span class="hljs-comment">                        1.又名：生命周期回调函数、生命周期函数、生命周期钩子。</span><br><span class="hljs-comment">                        2.是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数。</span><br><span class="hljs-comment">                        3.生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的。</span><br><span class="hljs-comment">                        4.生命周期函数中的this指向是vm 或 组件实例对象。</span><br><span class="hljs-comment">    --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;opacity: opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>         <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">opacity</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;, <span class="hljs-comment">// Vue完成模板的解析并把初始的真实的DOM元素放入页面后 (挂载完毕) 调用mounted</span></span><br><span class="language-javascript">        <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> -= <span class="hljs-number">0.01</span>;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> &lt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> = <span class="hljs-number">1</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">          &#125;, <span class="hljs-number">16</span>);</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">/* setInterval(() =&gt; &#123; // 通过外部的定时器实现(不推荐)</span></span><br><span class="hljs-comment"><span class="language-javascript">            vm.opacity -= 0.01</span></span><br><span class="hljs-comment"><span class="language-javascript">            if (vm.opacity &lt;= 0) &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">                vm.opacity = 1</span></span><br><span class="hljs-comment"><span class="language-javascript">            &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">        &#125;, 16); */</span></span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>分析生命周期</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>分析生命周期<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span> <span class="hljs-attr">:x</span>=<span class="hljs-string">&quot;n&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前的n值是: &#123;&#123;n&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>点我n+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;bye&quot;</span>&gt;</span>点我销毁<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>, <span class="hljs-comment">// 使用了template配置项, 就不能有两个根节点 // template: &#x27;&lt;h2&gt;当前的n值是: &#123;&#123;n&#125;&#125;&lt;/h2&gt;&lt;button @click=&quot;add&quot;&gt;点我n+1&lt;/button&gt;&#x27;, // 应该只能有一个根节点 // template: &#x27;&lt;div&gt;&lt;h2&gt;当前的n值是: &#123;&#123;n&#125;&#125;&lt;/h2&gt;&lt;button @click=&quot;add&quot;&gt;点我n+1&lt;/button&gt;&lt;/div&gt;&#x27;, // ES6语法, 可以换行, 上面的写法不能换行 // 用了template模板之后, div#root中的x属性会被template模板覆盖掉 // 没有使用template模板, div#root中的x属性不会被替换掉 // template: ` // &lt;div&gt; //     &lt;h2&gt;当前的n值是: &#123;&#123;n&#125;&#125;&lt;/h2&gt; //     &lt;button @click=&quot;add&quot;&gt;点我n+1&lt;/button&gt; // &lt;/div&gt;`,</span></span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">n</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">add</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;add&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">n</span>++;</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">          <span class="hljs-title function_">bye</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// https://v2.cn.vuejs.org/v2/api/#vm-destroy</span></span><br><span class="language-javascript">            <span class="hljs-comment">// vm.$destroy()</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 完全销毁一个实例。清理它与其它实例的连接，解绑它的全部指令及事件监听器。</span></span><br><span class="language-javascript">            <span class="hljs-comment">// https://www.bilibili.com/video/BV1Zy4y1K7SH?t=590.0</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 在v2.7版本以后会释放掉事件监听器</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 在v2.6.12版本不会释放掉事件监听器</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 视频中(v2.6.12版本)描述只会释放掉自定义事件监听器, 但是现在如果引入的vue版本是2.7的, 都会被释放掉</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;bye&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$destroy();</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">n</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;n变了&quot;</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;, <span class="hljs-comment">// 此时无法通过vm访问到data中的数据, methods中的方法</span></span><br><span class="language-javascript">        <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;beforeCreate&quot;</span>); <span class="hljs-comment">// console.log(this); // debugger</span></span><br><span class="language-javascript">        &#125;, <span class="hljs-comment">// 此时, 可以通过vm访问到data中的数据, methods中配置的方法</span></span><br><span class="language-javascript">        <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;created&quot;</span>); <span class="hljs-comment">// console.log(this); // debugger</span></span><br><span class="language-javascript">        &#125;, <span class="hljs-comment">// 未执行beforeMount()之前 // 此阶段Vue开始解析模板, 生成虚拟DOM(内存中), 页面还不能显示解析好的内容 // 执行beforeMount() // 此时页面呈现的是未经Vue编译的DOM结构 // 所有对DOM的操作, 最终都不奏效</span></span><br><span class="language-javascript">        <span class="hljs-title function_">beforeMount</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;beforeMount&quot;</span>); <span class="hljs-comment">// console.log(this); // document.querySelector(&#x27;h2&#x27;).innerText = &#x27;哈哈&#x27; // debugger</span></span><br><span class="language-javascript">        &#125;, <span class="hljs-comment">// 此时: // 1.页面中呈现的是经过Vue编译的DOM // 2.对DOM的操作均有效(尽可能避免) // 至此初始化过程结束, 一般在此进行: 开启定时器, // 发送网络请求, 订阅消息, 绑定自定义事件等初始化操作</span></span><br><span class="language-javascript">        <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;mounted&quot;</span>); <span class="hljs-comment">// console.log(this); // document.querySelector(&#x27;h2&#x27;).innerText = &#x27;哈哈&#x27; // debugger</span></span><br><span class="language-javascript">        &#125;, <span class="hljs-comment">// 此时数据是新的, 但页面是旧的 // 即: 页面尚未和数据保持同步</span></span><br><span class="language-javascript">        <span class="hljs-title function_">beforeUpdate</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;beforeUpdate&quot;</span>); <span class="hljs-comment">// console.log(this.n); // debugger;</span></span><br><span class="language-javascript">        &#125;, <span class="hljs-comment">// Virtual DOM re-render and patch // 根据新数据, 生成新的虚拟DOM, 随后与旧的虚拟DOM进行比较 // 最终完成页面更新, 即: 完成了Model =&gt; View的更新 // 此时: 数据是新的, 页面也是新的 // 即: 页面和数据保持同步</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title function_">updated</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;updated&quot;</span>); <span class="hljs-comment">// console.log(this.n); // debugger</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">beforeDestroy</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;beforeDestroy&quot;</span>);</span><br><span class="language-javascript">          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">add</span>();</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">destroyed</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;destroyed&quot;</span>);</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>总结生命周期</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>总结生命周期<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">常用的生命周期钩子：</span><br><span class="hljs-comment">1.mounted: 发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。</span><br><span class="hljs-comment">2.beforeDestroy: 清除定时器、解绑自定义事件、取消订阅消息等【收尾工作】。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">关于销毁Vue实例</span><br><span class="hljs-comment">1.销毁后借助Vue开发者工具看不到任何信息。</span><br><span class="hljs-comment">2.销毁后自定义事件会失效，但原生DOM事件依然有效。</span><br><span class="hljs-comment">3.一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程了。</span><br><span class="hljs-comment">--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;opacity: opacity&#125;&quot;</span>&gt;</span>欢迎学习Vue<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;stop&quot;</span>&gt;</span>点我停止变化<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">opacity</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">stop</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$destroy();</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer</span> = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;setInterval&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> -= <span class="hljs-number">0.01</span>;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> &lt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">              <span class="hljs-variable language_">this</span>.<span class="hljs-property">opacity</span> = <span class="hljs-number">1</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">          &#125;, <span class="hljs-number">16</span>);</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">beforeDestroy</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;vm即将驾鹤西游了&quot;</span>);</span><br><span class="language-javascript">          <span class="hljs-built_in">clearInterval</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timer</span>);</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="组件的概念"><a href="#组件的概念" class="headerlink" title="组件的概念"></a>组件的概念</h2><p><img src="http://cdn.xiamu.icu//FsJ5Ehmvfaq_wRtLQZ1gnVtd3EFR.png"><br><img src="http://cdn.xiamu.icu//FsJXBkJIYwUrkIeKShGaDuYDv5Q1.png"><br><img src="http://cdn.xiamu.icu//Fl4wBDArL6HVIiXaPcVsLM8qSPuN.png"><br>组件的定义: 实现应用中局部功能代码和资源的集合</p><h2 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h2><blockquote><p>组件就是一块砖, 哪里需要哪里搬</p></blockquote><p>非单文件组件:<br>一个文件中包含有 n 个组件<br>单文件组件的嵌套组件:<br>一个文件中只包含有 1 个组件<br>基本使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>基本使用<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            Vue中使用组件的三大步骤：</span><br><span class="hljs-comment">                    一、定义组件(创建组件)</span><br><span class="hljs-comment">                    二、注册组件</span><br><span class="hljs-comment">                    三、使用组件(写组件标签)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">            一、如何定义一个组件？</span><br><span class="hljs-comment">                        使用Vue.extend(options)创建，其中options和new Vue(options)时传入的那个options几乎一样，但也有点区别；</span><br><span class="hljs-comment">                        区别如下：</span><br><span class="hljs-comment">                                1.el不要写，为什么？ ——— 最终所有的组件都要经过一个vm的管理，由vm中的el决定服务哪个容器。</span><br><span class="hljs-comment">                                2.data必须写成函数，为什么？ ———— 避免组件被复用时，数据存在引用关系。</span><br><span class="hljs-comment">                        备注：使用template可以配置组件结构。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">            二、如何注册组件？</span><br><span class="hljs-comment">                            1.局部注册：靠new Vue的时候传入components选项</span><br><span class="hljs-comment">                            2.全局注册：靠Vue.component(&#x27;组件名&#x27;,组件)</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">            三、编写组件标签：</span><br><span class="hljs-comment">                            &lt;school&gt;&lt;/school&gt;</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">hello</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">hello</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 第三步：编写组件标签 --&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">student</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">student</span>&gt;</span>        <br>      <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>             <br>      <span class="hljs-comment">&lt;!-- 第三步：编写组件标签 --&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">school</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">school</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root2&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">hello</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">hello</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 第一步：创建student组件</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> student = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// el: &#x27;#root&#x27;,</span></span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学生姓名: &#123;&#123;studentName&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学生年龄: &#123;&#123;age&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;/div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            `</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">studentName</span>: <span class="hljs-string">&quot;张三&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>,</span><br><span class="language-javascript">          &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">// 第一步：创建school组件</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> school = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学校名称: &#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学校地址: &#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;/div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            `</span>, <span class="hljs-comment">// el:&#x27;#root&#x27;, //组件定义时，一定不要写el配置项，因为最终所有的组件都要被一个vm管理，由vm决定服务于哪个容器。</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">schoolName</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京昌平&quot;</span>,</span><br><span class="language-javascript">          &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">showName</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">schoolName</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">//第一步：创建hello组件</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> hello = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;你好啊! &#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;/div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            `</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Tom&quot;</span>,</span><br><span class="language-javascript">          &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">//第二步：全局注册组件</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">component</span>(<span class="hljs-string">&quot;hello&quot;</span>, hello); <span class="hljs-comment">//创建vm</span></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;你好啊！&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;, <span class="hljs-comment">//第二步：注册组件（局部注册）</span></span><br><span class="language-javascript">        <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">          school,</span><br><span class="language-javascript">          student,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root2&quot;</span>,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>几个注意点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>几个注意点<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            几个注意点：</span><br><span class="hljs-comment">                    1.关于组件名:</span><br><span class="hljs-comment">                                一个单词组成：</span><br><span class="hljs-comment">                                            第一种写法(首字母小写)：school</span><br><span class="hljs-comment">                                            第二种写法(首字母大写)：School</span><br><span class="hljs-comment">                                多个单词组成：</span><br><span class="hljs-comment">                                            第一种写法(kebab-case命名)：my-school</span><br><span class="hljs-comment">                                            第二种写法(CamelCase命名)：MySchool (需要Vue脚手架支持)</span><br><span class="hljs-comment">                                备注：</span><br><span class="hljs-comment">                                        (1).组件名尽可能回避HTML中已有的元素名称，例如：h2、H2都不行。</span><br><span class="hljs-comment">                                        (2).可以使用name配置项指定组件在开发者工具中呈现的名字。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                    2.关于组件标签:</span><br><span class="hljs-comment">                                第一种写法：&lt;school&gt;&lt;/school&gt;</span><br><span class="hljs-comment">                                第二种写法：&lt;school/&gt;</span><br><span class="hljs-comment">                                备注：不用使用脚手架时，&lt;school/&gt;会导致后续组件不能渲染。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                    3.一个简写方式：</span><br><span class="hljs-comment">                                const school = Vue.extend(options) 可简写为：const school = options</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- 准备好一个容器 --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br>             <br>      <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">school</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">school</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 定义组件</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> s = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学校名称: &#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学校地址: &#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;/div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            `</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">          &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;欢迎学习Vue!&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">school</span>: s,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>组件的嵌套</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>组件的嵌套<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span>   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span><br><span class="language-xml"><span class="language-handlebars">      Vue.config.productionTip = false; //定义student组件</span></span><br><span class="language-xml"><span class="language-handlebars"></span></span><br><span class="language-xml"><span class="language-handlebars">      const student = Vue.extend(&#123;</span></span><br><span class="language-xml"><span class="language-handlebars">        template: `</span></span><br><span class="language-xml"><span class="language-handlebars">            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学生姓名: </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">name</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学生年龄: </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">age</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">            `,</span></span><br><span class="language-xml"><span class="language-handlebars">        name: &quot;student&quot;,</span></span><br><span class="language-xml"><span class="language-handlebars">        data() &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">          return &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">            name: &quot;肉豆蔻&quot;,</span></span><br><span class="language-xml"><span class="language-handlebars">            age: 18,</span></span><br><span class="language-xml"><span class="language-handlebars">          &#125;;</span></span><br><span class="language-xml"><span class="language-handlebars">        &#125;,</span></span><br><span class="language-xml"><span class="language-handlebars">      &#125;); //定义school组件</span></span><br><span class="language-xml"><span class="language-handlebars"></span></span><br><span class="language-xml"><span class="language-handlebars">      const school = Vue.extend(&#123;</span></span><br><span class="language-xml"><span class="language-handlebars">        template: `</span></span><br><span class="language-xml"><span class="language-handlebars">                <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校名称: </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">name</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>学校地址: </span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">address</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                    <span class="hljs-tag">&lt;<span class="hljs-name">student</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">student</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">            `,</span></span><br><span class="language-xml"><span class="language-handlebars">        name: &quot;school&quot;,</span></span><br><span class="language-xml"><span class="language-handlebars">        data() &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">          return &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">            name: &quot;尚硅谷&quot;,</span></span><br><span class="language-xml"><span class="language-handlebars">            address: &quot;北京&quot;,</span></span><br><span class="language-xml"><span class="language-handlebars">          &#125;;</span></span><br><span class="language-xml"><span class="language-handlebars">        &#125;, //注册组件（局部）</span></span><br><span class="language-xml"><span class="language-handlebars">        components: &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">          student: student,</span></span><br><span class="language-xml"><span class="language-handlebars">        &#125;,</span></span><br><span class="language-xml"><span class="language-handlebars">      &#125;); //定义hello组件</span></span><br><span class="language-xml"><span class="language-handlebars">      const hello = Vue.extend(&#123;</span></span><br><span class="language-xml"><span class="language-handlebars">        template: `</span></span><br><span class="language-xml"><span class="language-handlebars">            <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">msg</span>&#125;&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">            `,</span></span><br><span class="language-xml"><span class="language-handlebars">        data() &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">          return &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">            msg: &quot;欢迎来到尚硅谷学习！&quot;,</span></span><br><span class="language-xml"><span class="language-handlebars">          &#125;;</span></span><br><span class="language-xml"><span class="language-handlebars">        &#125;,</span></span><br><span class="language-xml"><span class="language-handlebars">      &#125;); //定义app组件</span></span><br><span class="language-xml"><span class="language-handlebars">      const app = Vue.extend(&#123;</span></span><br><span class="language-xml"><span class="language-handlebars">        template: `</span></span><br><span class="language-xml"><span class="language-handlebars">            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                <span class="hljs-tag">&lt;<span class="hljs-name">hello</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">hello</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">                <span class="hljs-tag">&lt;<span class="hljs-name">school</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">school</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">            `,</span></span><br><span class="language-xml"><span class="language-handlebars">        components: &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">          school,</span></span><br><span class="language-xml"><span class="language-handlebars">          hello,</span></span><br><span class="language-xml"><span class="language-handlebars">        &#125;,</span></span><br><span class="language-xml"><span class="language-handlebars">      &#125;); //创建vm</span></span><br><span class="language-xml"><span class="language-handlebars"></span></span><br><span class="language-xml"><span class="language-handlebars">      new Vue(&#123;</span></span><br><span class="language-xml"><span class="language-handlebars">        template: `</span></span><br><span class="language-xml"><span class="language-handlebars">                <span class="hljs-tag">&lt;<span class="hljs-name">app</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">app</span>&gt;</span></span></span><br><span class="language-xml"><span class="language-handlebars">            `,</span></span><br><span class="language-xml"><span class="language-handlebars">        el: &quot;#root&quot;,</span></span><br><span class="language-xml"><span class="language-handlebars">        data: &#123;&#125;,</span></span><br><span class="language-xml"><span class="language-handlebars">        methods: &#123;&#125;, //注册组件（局部）</span></span><br><span class="language-xml"><span class="language-handlebars">        components: &#123;</span></span><br><span class="language-xml"><span class="language-handlebars">          app,</span></span><br><span class="language-xml"><span class="language-handlebars">        &#125;,</span></span><br><span class="language-xml"><span class="language-handlebars">      &#125;);</span></span><br><span class="language-xml"><span class="language-handlebars">    </span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>VueComponent</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>VueComponent<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>       <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">            关于VueComponent：</span><br><span class="hljs-comment">                        1.school组件本质是一个名为VueComponent的构造函数，且不是程序员定义的，是Vue.extend生成的。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        2.我们只需要写&lt;school/&gt;或&lt;school&gt;&lt;/school&gt;，Vue解析时会帮我们创建school组件的实例对象，</span><br><span class="hljs-comment">                            即Vue帮我们执行的：new VueComponent(options)。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        3.特别注意：每次调用Vue.extend，返回的都是一个全新的VueComponent！！！！</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        4.关于this指向：</span><br><span class="hljs-comment">                                (1).组件配置中：</span><br><span class="hljs-comment">                                            data函数、methods中的函数、watch中的函数、computed中的函数 它们的this均是【VueComponent实例对象】。</span><br><span class="hljs-comment">                                (2).new Vue(options)配置中：</span><br><span class="hljs-comment">                                            data函数、methods中的函数、watch中的函数、computed中的函数 它们的this均是【Vue实例对象】。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"></span><br><span class="hljs-comment">                        5.VueComponent的实例对象，以后简称vc（也可称之为：组件实例对象）。</span><br><span class="hljs-comment">                            Vue的实例对象，以后简称vm。</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">school</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">school</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">hello</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">hello</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">//定义school组件</span></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> school = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学校名称：&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;h2&gt;学校地址：&#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;button @click=&quot;showName&quot;&gt;点我提示学校名&lt;/button&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            &lt;/div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            `</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">          &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">showName</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;showName&quot;</span>, <span class="hljs-variable language_">this</span>); <span class="hljs-comment">// alert(this.name)</span></span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> test = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`&lt;span&gt;atguigu&lt;/span&gt;`</span>,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">//定义hello组件</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> hello = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                    &lt;h2&gt;&#123;&#123;msg&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                    &lt;test&gt;&lt;/test&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;/div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            `</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;你好啊!&quot;</span>,</span><br><span class="language-javascript">          &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">          test,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">// 证明是两个VueComponent, 而不是用的一个VueComponent // console.log(&#x27;@&#x27;, school === hello); // school.a = 99 // console.log(&#x27;@&#x27;, school.a); // console.log(&#x27;@&#x27;, hello.a); // 每次调用的VueComponent都是现定义的, 然后再返回的 // Vue.extend = function (extendOptions) &#123; //      ... //     var Sub = function VueComponent(options) &#123; //         this._init(options); //     &#125;; //      ... //     return Sub // &#125;; // console.log(&#x27;@&#x27;, school); // console.log(&#x27;#&#x27;, hello); // 创建vm</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">          school,</span><br><span class="language-javascript">          hello,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>一个重要的内置关系</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>一个重要的内置关系<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>           <br>    <span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">                1.一个重要的内置关系：VueComponent.prototype.__proto__ === Vue.prototype</span><br><span class="hljs-comment">                2.为什么要有这个关系：让组件实例对象（vc）可以访问到 Vue原型上的属性、方法。</span><br><span class="hljs-comment">        --&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">school</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">school</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property">config</span>.<span class="hljs-property">productionTip</span> = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">      <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">x</span> = <span class="hljs-number">99</span>; <span class="hljs-comment">//定义school组件</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> school = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">template</span>: <span class="hljs-string">`</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                    &lt;h2&gt;学校名称: &#123;&#123;name&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                    &lt;h2&gt;学校地址: &#123;&#123;address&#125;&#125;&lt;/h2&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                    &lt;button @click=&quot;showX&quot;&gt;点我输出x&lt;/button&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">                &lt;/div&gt;</span></span><br><span class="hljs-string"><span class="language-javascript">            `</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;school&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">          <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;尚硅谷&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">address</span>: <span class="hljs-string">&quot;北京&quot;</span>,</span><br><span class="language-javascript">          &#125;;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-title function_">showX</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>);</span><br><span class="language-javascript">          &#125;,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;); <span class="hljs-comment">// 创建一个vm</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#root&quot;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript">          <span class="hljs-attr">msg</span>: <span class="hljs-string">&quot;你好&quot;</span>,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">methods</span>: &#123;&#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">          school,</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(</span><br><span class="language-javascript">        school.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">__proto__</span> === <span class="hljs-title class_">Vue</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span></span><br><span class="language-javascript">      ); <span class="hljs-comment">/* // 定义一个构造函数</span></span><br><span class="hljs-comment"><span class="language-javascript">        function Demo() &#123;</span></span><br><span class="hljs-comment"><span class="language-javascript">            this.a = 1</span></span><br><span class="hljs-comment"><span class="language-javascript">            this.b = 2</span></span><br><span class="hljs-comment"><span class="language-javascript">        &#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">        // 创建一个Demo的实例对象</span></span><br><span class="hljs-comment"><span class="language-javascript">        const d = new Demo()</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">        // 显示原型属性</span></span><br><span class="hljs-comment"><span class="language-javascript">        console.log(Demo.prototype);</span></span><br><span class="hljs-comment"><span class="language-javascript">        // 隐式原型属性</span></span><br><span class="hljs-comment"><span class="language-javascript">        console.log(d.__proto__);</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">        console.log(Demo.prototype === d.__proto__);</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">        // 程序员通过显示原型属性操作原型对象, 追加一个x属性, 值为99</span></span><br><span class="hljs-comment"><span class="language-javascript">        Demo.prototype.x = 99</span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript"></span></span><br><span class="hljs-comment"><span class="language-javascript">        console.log(&#x27;@&#x27;, d); */</span></span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>实例的隐式原型对象永运指向缔造者的原型对象<br><img src="http://cdn.xiamu.icu//FsKi0imheF9Ehf-wGac3AO7M-UeF.png"></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>注册表的一些操作</title>
    <link href="/uncategorized/%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C/"/>
    <url>/uncategorized/%E6%B3%A8%E5%86%8C%E8%A1%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h2 id="修改-win10-注册表自动更新"><a href="#修改-win10-注册表自动更新" class="headerlink" title="修改 win10 注册表自动更新"></a>修改 win10 注册表自动更新</h2><p>win+r 输入 regedit<br>位置: <strong>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\wuauserv</strong><br><img src="http://cdn.xiamu.icu//Fm80kKnOInAgbfeH1Z9LDxpA7pn4.png"><br><img src="http://cdn.xiamu.icu//Fpi-qGYJW2tVa_MgzWIn16pjNf3r.png"></p><h1 id="Typora-无限试用"><a href="#Typora-无限试用" class="headerlink" title="Typora 无限试用"></a>Typora 无限试用</h1><p><a href="https://www.jianshu.com/p/bb0ddf5fbd5d">https://www.jianshu.com/p/bb0ddf5fbd5d</a></p><h2 id="Win10-搜索框中热门搜索怎么关闭-Win10-关闭热门搜索"><a href="#Win10-搜索框中热门搜索怎么关闭-Win10-关闭热门搜索" class="headerlink" title="Win10 搜索框中热门搜索怎么关闭|Win10 关闭热门搜索"></a>Win10 搜索框中热门搜索怎么关闭|Win10 关闭热门搜索</h2><p><a href="https://www.baiyunxitong.com/bangzhu/7714.html">https://www.baiyunxitong.com/bangzhu/7714.html</a></p><h2 id="去他妈的-windows-子系统"><a href="#去他妈的-windows-子系统" class="headerlink" title="去他妈的 windows 子系统"></a>去他妈的 windows 子系统</h2><p>某天早晨开电脑, 发现他妈的资源管理器多了一个 linux 的小图标, 还他妈移除不了<br><img src="http://cdn.xiamu.icu//FtONm0Dlxkthgf2KskrRM9G_sHaK.png"><br>打开控制面板, 程序和功能, 启用或关闭 Windows 功能, 适用于 Linux 的 Windows 子系统 的勾给去掉, 然后重启电脑<br><img src="http://cdn.xiamu.icu//FoGkGSMGUJCgk3v7fYt4N7FSrGWa.png"><br>资源管理器就没了 linux 图标了<br><img src="http://cdn.xiamu.icu//FtHdpNFY0l1WfbX1W19nT-MGm-dq.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SSM</title>
    <link href="/Java/SSM/"/>
    <url>/Java/SSM/</url>
    
    <content type="html"><![CDATA[<h2 id="整合-Swagger2"><a href="#整合-Swagger2" class="headerlink" title="整合 Swagger2"></a>整合 Swagger2</h2><p>集成 knife4j</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>添加 knife4j 配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.system.config;<br><br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.ParameterBuilder;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.PathSelectors;<br><span class="hljs-keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;<br><span class="hljs-keyword">import</span> springfox.documentation.schema.ModelRef;<br><span class="hljs-keyword">import</span> springfox.documentation.service.ApiInfo;<br><span class="hljs-keyword">import</span> springfox.documentation.service.Contact;<br><span class="hljs-keyword">import</span> springfox.documentation.service.Parameter;<br><span class="hljs-keyword">import</span> springfox.documentation.spi.DocumentationType;<br><span class="hljs-keyword">import</span> springfox.documentation.spring.web.plugins.Docket;<br><span class="hljs-keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2WebMvc;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * knife4j配置信息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableSwagger2WebMvc</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Knife4jConfig</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Docket <span class="hljs-title function_">adminApiConfig</span><span class="hljs-params">()</span>&#123;<br>        List&lt;Parameter&gt; pars = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-type">ParameterBuilder</span> <span class="hljs-variable">tokenPar</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ParameterBuilder</span>();<br>        tokenPar.name(<span class="hljs-string">&quot;token&quot;</span>)<br>                .description(<span class="hljs-string">&quot;用户token&quot;</span>)<br>                .defaultValue(<span class="hljs-string">&quot;&quot;</span>)<br>                .modelRef(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelRef</span>(<span class="hljs-string">&quot;string&quot;</span>))<br>                .parameterType(<span class="hljs-string">&quot;header&quot;</span>)<br>                .required(<span class="hljs-literal">false</span>)<br>                .build();<br>        pars.add(tokenPar.build());<br>        <span class="hljs-comment">//添加head参数end</span><br><br>        <span class="hljs-type">Docket</span> <span class="hljs-variable">adminApi</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Docket</span>(DocumentationType.SWAGGER_2)<br>                .groupName(<span class="hljs-string">&quot;adminApi&quot;</span>)<br>                .apiInfo(adminApiInfo())<br>                .select()<br>                <span class="hljs-comment">//只显示admin路径下的页面</span><br>                .apis(RequestHandlerSelectors.basePackage(<span class="hljs-string">&quot;com.atguigu&quot;</span>))<br>                .paths(PathSelectors.regex(<span class="hljs-string">&quot;/admin/.*&quot;</span>)) <span class="hljs-comment">// 显示以admin开头的接口</span><br>                .build()<br>                .globalOperationParameters(pars);<br>        <span class="hljs-keyword">return</span> adminApi;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> ApiInfo <span class="hljs-title function_">adminApiInfo</span><span class="hljs-params">()</span>&#123;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ApiInfoBuilder</span>()<br>                .title(<span class="hljs-string">&quot;后台管理系统-API文档&quot;</span>)<br>                .description(<span class="hljs-string">&quot;本文档描述了后台管理系统微服务接口定义&quot;</span>)<br>                .version(<span class="hljs-string">&quot;1.0&quot;</span>)<br>                .contact(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Contact</span>(<span class="hljs-string">&quot;atguigu&quot;</span>, <span class="hljs-string">&quot;http://atguigu.com&quot;</span>, <span class="hljs-string">&quot;atguigu@qq.com&quot;</span>))<br>                .build();<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><p>Controller 层添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.system.controller;<br><br><span class="hljs-keyword">import</span> com.atguigu.system.service.SysRoleService;<br><span class="hljs-keyword">import</span> com.atguigu.common.result.Result;<br><span class="hljs-keyword">import</span> com.atguigu.model.system.SysRole;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@Api(tags = &quot;角色管理&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/system/sysRole&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SysRoleController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> SysRoleService sysRoleService;<br><br>    <span class="hljs-meta">@ApiOperation(value = &quot;获取全部角色列表&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;findAll&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;List&lt;SysRole&gt;&gt; <span class="hljs-title function_">findAll</span><span class="hljs-params">()</span> &#123;<br>        List&lt;SysRole&gt; roleList = sysRoleService.list();<br>        <span class="hljs-keyword">return</span> Result.ok(roleList);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>测试<br><a href="http://localhost:8800/doc.html">http://localhost:8800/doc.html</a></p><h2 id="定义统一返回结果对象"><a href="#定义统一返回结果对象" class="headerlink" title="定义统一返回结果对象"></a>定义统一返回结果对象</h2><p>定义接口, 通过封装 Result, 统一将接口的返回值都转换为 json 格式</p><p>Result 类:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.common.result;<br><br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局统一返回结果类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Result</span>&lt;T&gt; &#123;<br><br>    <span class="hljs-comment">//返回码</span><br>    <span class="hljs-keyword">private</span> Integer code;<br><br>    <span class="hljs-comment">//返回消息</span><br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-comment">//返回数据</span><br>    <span class="hljs-keyword">private</span> T data;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Result</span><span class="hljs-params">()</span>&#123;&#125;<br><br>    <span class="hljs-comment">// 返回数据</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">build</span><span class="hljs-params">(T data)</span> &#123;<br>        Result&lt;T&gt; result = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>&lt;T&gt;();<br>        <span class="hljs-keyword">if</span> (data != <span class="hljs-literal">null</span>)<br>            result.setData(data);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">build</span><span class="hljs-params">(T body, Integer code, String message)</span> &#123;<br>        Result&lt;T&gt; result = build(body);<br>        result.setCode(code);<br>        result.setMessage(message);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">build</span><span class="hljs-params">(T body, ResultCodeEnum resultCodeEnum)</span> &#123;<br>        Result&lt;T&gt; result = build(body);<br>        result.setCode(resultCodeEnum.getCode());<br>        result.setMessage(resultCodeEnum.getMessage());<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">ok</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Result.ok(<span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 操作成功</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data  baseCategory1List</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;T&gt;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">ok</span><span class="hljs-params">(T data)</span>&#123;<br>        Result&lt;T&gt; result = build(data);<br>        <span class="hljs-keyword">return</span> build(data, ResultCodeEnum.SUCCESS);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">fail</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Result.fail(<span class="hljs-literal">null</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 操作失败</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> &lt;T&gt;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">fail</span><span class="hljs-params">(T data)</span>&#123;<br>        Result&lt;T&gt; result = build(data);<br>        <span class="hljs-keyword">return</span> build(data, ResultCodeEnum.FAIL);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Result&lt;T&gt; <span class="hljs-title function_">message</span><span class="hljs-params">(String msg)</span>&#123;<br>        <span class="hljs-built_in">this</span>.setMessage(msg);<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Result&lt;T&gt; <span class="hljs-title function_">code</span><span class="hljs-params">(Integer code)</span>&#123;<br>        <span class="hljs-built_in">this</span>.setCode(code);<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ResultCodeEnum 状态码枚举类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 统一返回结果状态信息类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ResultCodeEnum</span> &#123;<br><br>    SUCCESS(<span class="hljs-number">200</span>,<span class="hljs-string">&quot;成功&quot;</span>),<br>    FAIL(<span class="hljs-number">201</span>, <span class="hljs-string">&quot;失败&quot;</span>),<br>    SERVICE_ERROR(<span class="hljs-number">2012</span>, <span class="hljs-string">&quot;服务异常&quot;</span>),<br>    DATA_ERROR(<span class="hljs-number">204</span>, <span class="hljs-string">&quot;数据异常&quot;</span>),<br>    ILLEGAL_REQUEST(<span class="hljs-number">205</span>, <span class="hljs-string">&quot;非法请求&quot;</span>),<br>    REPEAT_SUBMIT(<span class="hljs-number">206</span>, <span class="hljs-string">&quot;重复提交&quot;</span>),<br>    ARGUMENT_VALID_ERROR(<span class="hljs-number">210</span>, <span class="hljs-string">&quot;参数校验异常&quot;</span>),<br><br>    LOGIN_AUTH(<span class="hljs-number">208</span>, <span class="hljs-string">&quot;未登陆&quot;</span>),<br>    PERMISSION(<span class="hljs-number">209</span>, <span class="hljs-string">&quot;没有权限&quot;</span>),<br>    ACCOUNT_ERROR(<span class="hljs-number">214</span>, <span class="hljs-string">&quot;账号不正确&quot;</span>),<br>    PASSWORD_ERROR(<span class="hljs-number">215</span>, <span class="hljs-string">&quot;密码不正确&quot;</span>),<br>    LOGIN_MOBLE_ERROR( <span class="hljs-number">216</span>, <span class="hljs-string">&quot;账号不正确&quot;</span>),<br>    ACCOUNT_STOP( <span class="hljs-number">217</span>, <span class="hljs-string">&quot;账号已停用&quot;</span>),<br>    NODE_ERROR( <span class="hljs-number">218</span>, <span class="hljs-string">&quot;该节点下有子节点，不可以删除&quot;</span>)<br>    ;<br><br>    <span class="hljs-keyword">private</span> Integer code;<br><br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">ResultCodeEnum</span><span class="hljs-params">(Integer code, String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>修改 Controller, 让所有的接口返回的类型都是 json 格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Api(&quot;角色管理&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/system/sysRole&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SysRoleController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> SysRoleService sysRoleService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;查询所有角色列表&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/findAll&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;List&lt;SysRole&gt;&gt; <span class="hljs-title function_">findAll</span><span class="hljs-params">()</span> &#123;<br>        List&lt;SysRole&gt; list = sysRoleService.list(<span class="hljs-literal">null</span>);<br>        <span class="hljs-keyword">return</span> Result.ok(list);<br>    &#125;<br><span class="hljs-comment">/*    public List&lt;SysRole&gt; findAll() &#123;</span><br><span class="hljs-comment">        List&lt;SysRole&gt; list = sysRoleService.list(null);</span><br><span class="hljs-comment">        log.info(&quot;list = &#123;&#125;&quot;, list);</span><br><span class="hljs-comment">        return list;</span><br><span class="hljs-comment">    &#125;*/</span><br><br>    <span class="hljs-meta">@ApiOperation(&quot;通过id删除角色&quot;)</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/remove/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">deleteById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> String id)</span> &#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> sysRoleService.removeById(id);<br>        <span class="hljs-comment">/*log.info(&quot;result = &#123;&#125;&quot;, result);*/</span><br>        <span class="hljs-keyword">return</span> Result.ok(result);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>测试地址:<br><a href="http://localhost:8800/doc.html">http://localhost:8800/doc.html</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">200</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;成功&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">200</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;成功&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">200</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;成功&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1586337616301735937&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;createTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-29T12:42:15.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;updateTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-30T03:13:38.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;isDeleted&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;param&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;角色管理员&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleCode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;role&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;角色管理员&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1586341642619711490&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;createTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-29T12:58:15.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;updateTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-30T03:13:38.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;isDeleted&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;param&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;角色管理员&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleCode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;role&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;角色管理员&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1586341642619711491&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;createTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-29T13:08:04.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;updateTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-30T03:13:42.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;isDeleted&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;param&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;角色管理员&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleCode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;role&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;角色管理员&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1586341642619711492&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;createTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-30T02:56:41.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;updateTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-10-30T02:56:41.000+00:00&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;isDeleted&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;param&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;角色测试员&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;roleCode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;test&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;闲着吃干饭的&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>编写 CRUD</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.system.controller;<br><br><span class="hljs-keyword">import</span> com.atguigu.common.result.Result;<br><span class="hljs-keyword">import</span> com.atguigu.model.system.SysRole;<br><span class="hljs-keyword">import</span> com.atguigu.model.vo.SysRoleQueryVo;<br><span class="hljs-keyword">import</span> com.atguigu.system.service.SysRoleService;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 测试路径</span><br><span class="hljs-comment"> * http://localhost:8800/admin/system/sysRole/findAll</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Api(&quot;角色管理&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/system/sysRole&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SysRoleController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> SysRoleService sysRoleService;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;查询所有角色列表&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/findAll&quot;)</span><br>    <span class="hljs-keyword">public</span> Result&lt;List&lt;SysRole&gt;&gt; <span class="hljs-title function_">findAll</span><span class="hljs-params">()</span> &#123;<br>        List&lt;SysRole&gt; list = sysRoleService.list(<span class="hljs-literal">null</span>);<br>        <span class="hljs-keyword">return</span> Result.ok(list);<br>    &#125;<br><span class="hljs-comment">/*    public List&lt;SysRole&gt; findAll() &#123;</span><br><span class="hljs-comment">        List&lt;SysRole&gt; list = sysRoleService.list(null);</span><br><span class="hljs-comment">        log.info(&quot;list = &#123;&#125;&quot;, list);</span><br><span class="hljs-comment">        return list;</span><br><span class="hljs-comment">    &#125;*/</span><br><br>    <span class="hljs-meta">@ApiOperation(&quot;通过id删除角色&quot;)</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/remove/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">deleteById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> String id)</span> &#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> sysRoleService.removeById(id);<br>        <span class="hljs-comment">/*log.info(&quot;result = &#123;&#125;&quot;, result);*/</span><br>        <span class="hljs-keyword">return</span> Result.ok(result);<br>    &#125;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;条件分页查询&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/&#123;page&#125;/&#123;limit&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">findPageQueryRole</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer page,</span><br><span class="hljs-params">                                    <span class="hljs-meta">@PathVariable</span> Integer limit,</span><br><span class="hljs-params">                                    SysRoleQueryVo sysRoleQueryVo)</span> &#123;<br>        Page&lt;SysRole&gt; pageParam = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(page, limit);<br>        IPage&lt;SysRole&gt; pageModel =  sysRoleService.selectPage(pageParam, sysRoleQueryVo);<br>        <span class="hljs-keyword">return</span> Result.ok(pageModel);<br>    &#125;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;获取角色&quot;)</span><br>    <span class="hljs-meta">@GetMapping(&quot;/get/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer id)</span> &#123;<br>        <span class="hljs-type">SysRole</span> <span class="hljs-variable">byId</span> <span class="hljs-operator">=</span> sysRoleService.getById(id);<br>        <span class="hljs-keyword">return</span> Result.ok(byId);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@RequestBody</span> 不能使用get提交方式</span><br><span class="hljs-comment">     * 传递json格式数据, 把json格式数据封装到对象里面&#123;...&#125;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> sysRole</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ApiOperation(&quot;新增角色&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/save&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">save</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SysRole sysRole)</span> &#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">save</span> <span class="hljs-operator">=</span> sysRoleService.save(sysRole);<br>        <span class="hljs-keyword">if</span> (save) &#123;<br>            <span class="hljs-keyword">return</span> Result.ok();<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> Result.fail();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;根据id查询&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/findRoleById/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">findRoleById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Long id)</span> &#123;<br>        <span class="hljs-type">SysRole</span> <span class="hljs-variable">sysRole</span> <span class="hljs-operator">=</span> sysRoleService.getById(id);<br>        <span class="hljs-keyword">return</span> Result.ok(sysRole);<br>    &#125;<br><br>    <span class="hljs-meta">@ApiOperation(&quot;修改角色&quot;)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/update&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">update</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SysRole sysRole)</span> &#123;<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         boolean update = sysRoleService.update(sysRole, null);</span><br><span class="hljs-comment">         这里没有设置updateWrapper条件构造器, 所有修改的值是表中的所有记录</span><br><span class="hljs-comment">        */</span><br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> sysRoleService.updateById(sysRole);<br>        <span class="hljs-keyword">if</span> (flag) &#123;<br>            <span class="hljs-keyword">return</span> Result.ok();<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> Result.fail();<br>        &#125;<br>    &#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">    @ApiOperation(&quot;删除角色&quot;)</span><br><span class="hljs-comment">    @DeleteMapping(&quot;/remove/&#123;id&#125;&quot;)</span><br><span class="hljs-comment">    public Result delete(@PathVariable Integer id) &#123;</span><br><span class="hljs-comment">        boolean flag = sysRoleService.removeById(id);</span><br><span class="hljs-comment">        return Result.ok(flag);</span><br><span class="hljs-comment">    &#125;*/</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * json数组格式 -- java的list集合</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> list</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@ApiOperation(&quot;根据id列表删除&quot;)</span><br>    <span class="hljs-meta">@DeleteMapping(&quot;/batchRemove&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">batchRemove</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> List&lt;Long&gt; list)</span> &#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> sysRoleService.removeByIds(list);<br>        <span class="hljs-keyword">if</span> (flag) &#123;<br>            <span class="hljs-keyword">return</span> Result.ok();<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> Result.fail();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="全局异常"><a href="#全局异常" class="headerlink" title="全局异常"></a>全局异常</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.system.handler;<br><br><span class="hljs-keyword">import</span> com.atguigu.common.result.Result;<br><span class="hljs-keyword">import</span> com.atguigu.system.execption.GuiguException;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局异常处理类</span><br><span class="hljs-comment"> * 有异常出现, 先找有没有异常对应的方法, 有的话执行, 如果没有的话, 执行全局异常</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@ControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalExceptionHandler</span> &#123;<br><br>    <span class="hljs-meta">@ExceptionHandler(Exception.class)</span><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">error</span><span class="hljs-params">(Exception e)</span> &#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;执行了全局异常&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@ExceptionHandler(ArithmeticException.class)</span><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">error</span><span class="hljs-params">(ArithmeticException e)</span>&#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> Result.fail().message(<span class="hljs-string">&quot;执行了特定异常处理&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@ExceptionHandler(GuiguException.class)</span><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">error</span><span class="hljs-params">(GuiguException e)</span>&#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> Result.fail().message(e.getMessage()).code(e.getCode());<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>自定义异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.system.execption;<br><br><span class="hljs-keyword">import</span> com.atguigu.common.result.ResultCodeEnum;<br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 自定义全局异常类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GuiguException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span> &#123;<br><br>    <span class="hljs-keyword">private</span> Integer code;<br><br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 通过状态码和错误消息创建异常对象</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> code</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> message</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">GuiguException</span><span class="hljs-params">(Integer code, String message)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message);<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接收枚举类型对象</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> resultCodeEnum</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">GuiguException</span><span class="hljs-params">(ResultCodeEnum resultCodeEnum)</span> &#123;<br>        <span class="hljs-built_in">super</span>(resultCodeEnum.getMessage());<br>        <span class="hljs-built_in">this</span>.code = resultCodeEnum.getCode();<br>        <span class="hljs-built_in">this</span>.message = resultCodeEnum.getMessage();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;GuliException&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;code=&quot;</span> + code +<br>                <span class="hljs-string">&quot;, message=&quot;</span> + <span class="hljs-built_in">this</span>.getMessage() +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>测试异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">   <span class="hljs-meta">@Autowired</span><br>   <span class="hljs-keyword">private</span> SysRoleService sysRoleService;<br><br><span class="hljs-meta">@ApiOperation(&quot;查询所有角色列表&quot;)</span><br>   <span class="hljs-meta">@GetMapping(&quot;/findAll&quot;)</span><br>   <span class="hljs-keyword">public</span> Result&lt;List&lt;SysRole&gt;&gt; <span class="hljs-title function_">findAll</span><span class="hljs-params">()</span> &#123;<br>       <span class="hljs-keyword">try</span> &#123;<br>           <span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>/<span class="hljs-number">0</span>;<br>       &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>           <span class="hljs-comment">// 手动抛出异常</span><br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GuiguException</span>(<span class="hljs-number">20001</span>,<span class="hljs-string">&quot;出现自定义异常&quot;</span>);<br>       &#125;<br>       List&lt;SysRole&gt; list = sysRoleService.list(<span class="hljs-literal">null</span>);<br>       <span class="hljs-keyword">return</span> Result.ok(list);<br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="安装-vscode"><a href="#安装-vscode" class="headerlink" title="安装 vscode"></a>安装 vscode</h2><p>下载四个插件<br><img src="http://cdn.xiamu.icu//Fj-To2OPZjwQA-qAmej5a9Vd8WFC.png"><br><img src="http://cdn.xiamu.icu//FiWqfqI7aey-sdwibV5ij6wk3aL2.png"><br><img src="http://cdn.xiamu.icu//FnMn7OtDR_VWwp-Fv4fXCtPl1vBK.png"></p><p>创建工作区</p><ul><li>先创建一个空的文件夹</li><li>然后在 vscode 中打开这个空文件夹</li><li>在空文件夹中另存为工作区 (workspace.code-workspace)</li></ul><p><img src="http://cdn.xiamu.icu//FpeQSy_-NAklQeB6qPOwUaC2r8Uj.png"></p><h2 id="Nodejs-简单入门"><a href="#Nodejs-简单入门" class="headerlink" title="Nodejs 简单入门"></a>Nodejs 简单入门</h2><p>官网：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br>中文网：<a href="http://nodejs.cn/">http://nodejs.cn/</a><br>LTS：长期支持版本<br>Current：最新版</p><p>查看 node 版本<br><img src="http://cdn.xiamu.icu//FuCEJBRxdvYTXUUjHJSZoX23rewK.png"><br>在 vscode 中打开终端, 同样也可以查看版本<br><img src="http://cdn.xiamu.icu//FjB2sJFakH0ERkUU1xEba-0JmoHt.png"></p><p>编写第一个 nodejs 服务器<br>01.js<br>console.log(‘Hello Node.js’)<br>node 02.js<br><img src="http://cdn.xiamu.icu//FqUYTZWxLppFrccWMKRsB-hXwFWU.png"></p><p>02.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;http&quot;</span>);<br>http<br>  .<span class="hljs-title function_">createServer</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">request, response</span>) &#123;<br>    <span class="hljs-comment">// 发送 HTTP 头部</span><br>    <span class="hljs-comment">// HTTP 状态值: 200 : OK</span><br>    <span class="hljs-comment">// 内容类型: text/plain</span><br>    response.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>, &#123; <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain&quot;</span> &#125;);<br>    <span class="hljs-comment">// 发送响应数据 &quot;Hello World&quot;</span><br>    response.<span class="hljs-title function_">end</span>(<span class="hljs-string">&quot;Hello Server&quot;</span>);<br>  &#125;)<br>  .<span class="hljs-title function_">listen</span>(<span class="hljs-number">8888</span>);<br><span class="hljs-comment">// 终端打印如下信息</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Server running at http://127.0.0.1:8888/&quot;</span>);<br></code></pre></td></tr></table></figure><p>node 02.js<br>Server running at <a href="http://127.0.0.1:8888/">http://127.0.0.1:8888/</a>说明服务器已经运行起来了<br><img src="http://cdn.xiamu.icu//FmFyfFnJZWxyRIgkn9Q9fBbKKaEX.png"></p><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><p>构建前端项目<br>管理前端依赖</p><h2 id="npm-初始化项目"><a href="#npm-初始化项目" class="headerlink" title="npm 初始化项目"></a>npm 初始化项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS E:\Code\权限项目\guigu-auth-front\npmdemo&gt; npm init<br><br>PS E:\Code\权限项目\guigu-auth-front\npmdemo&gt; npm init -y<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FurLI6Oj3iCrGpr3-Iye7U41eBJk.png"></p><h2 id="修改-npm-镜像源"><a href="#修改-npm-镜像源" class="headerlink" title="修改 npm 镜像源"></a>修改 npm 镜像源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 第一种查看修改npm镜像源的方法</span><br><span class="hljs-comment">#经过下面的配置，以后所有的 npm install 都会经过淘宝的镜像地址下载</span><br>npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br><span class="hljs-comment">#查看npm配置信息</span><br>npm config list<br><br><span class="hljs-comment"># 第二种查看修改npm镜像源的方法</span><br>npm config get registry  // 查看npm当前镜像源<br>npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org/  // 设置npm镜像源为淘宝镜像<br><br><span class="hljs-comment"># 修改yarn的镜像源的方法</span><br><span class="hljs-comment"># yarn 是一个快速、可靠、安全的依赖管理工具，一款新的JavaScript包管理工具</span><br><span class="hljs-comment">#yarn config get registry  // 查看yarn当前镜像源</span><br><span class="hljs-comment">#yarn config set registry https://registry.npm.taobao.org/  // 设置yarn镜像源为淘宝镜像</span><br><br><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Ft__ReMATmVwqMB5XcPmuVe8liCq.png"></p><h2 id="配置仓库地址"><a href="#配置仓库地址" class="headerlink" title="配置仓库地址"></a>配置仓库地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置全局安装：</span><br>npm config <span class="hljs-built_in">set</span> prefix D:\atguigu\node-global<br><br><span class="hljs-comment"># 配置缓存路径：</span><br>npm config <span class="hljs-built_in">set</span> cache D:\atguigu\node-cache<br><br><span class="hljs-comment">#查看npm配置信息</span><br>npm config list<br></code></pre></td></tr></table></figure><h2 id="npm-install-命令的使用"><a href="#npm-install-命令的使用" class="headerlink" title="npm install 命令的使用"></a>npm install 命令的使用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用 npm install 安装依赖包的最新版，</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">模块安装的位置：项目目录\node_modules</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装会自动在项目目录下添加 package-lock.json文件，这个文件帮助锁定安装包的版本</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">同时package.json 文件中，依赖包会被添加到dependencies节点下，类似maven中的 &lt;dependencies&gt;</span><br>npm install jquery<br><span class="hljs-meta prompt_">#</span><span class="language-bash">npm管理的项目在备份和传输的时候一般不携带node_modules文件夹</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">根据配置文件直接下载依赖</span><br>npm install #根据package.json中的配置下载依赖，初始化项目<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果安装时想指定特定的版本</span><br>npm install jquery@2.1.x<br><span class="hljs-meta prompt_"># </span><span class="language-bash">局部安装</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">devDependencies节点：开发时的依赖包，项目打包到生产环境的时候不包含的依赖</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用 -D参数将依赖添加到devDependencies节点</span><br>npm install --save-dev eslint<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或</span><br>npm install -D eslint<br><span class="hljs-meta prompt_">#</span><span class="language-bash">全局安装</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Node.js全局安装的npm包和工具的位置：用户目录\AppData\Roaming\npm\node_modules</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">一些命令行工具常使用全局安装的方式</span><br>npm install -g webpack<br>--global<br></code></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">更新包（更新到最新版本）</span><br>npm update 包名<br><span class="hljs-meta prompt_">#</span><span class="language-bash">全局更新</span><br>npm update -g 包名<br><span class="hljs-meta prompt_">#</span><span class="language-bash">卸载包</span><br>npm uninstall 包名<br><span class="hljs-meta prompt_">#</span><span class="language-bash">全局卸载</span><br>npm uninstall -g 包名<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FiZxH55ahPvTSowyxPzgXRhoOfdq.png"><br>package.json 项目初始化时候生成文件<br>node_modules 下载依赖在这个目录下<br>package-lock.json 锁定当前版本</p><h2 id="前端模块化开发-ES5"><a href="#前端模块化开发-ES5" class="headerlink" title="前端模块化开发(ES5)"></a>前端模块化开发(ES5)</h2><p>创建两个 js 文件<br>01.js<br>02.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sum</span>(<span class="hljs-params">a, b</span>) &#123;<br>  <span class="hljs-keyword">return</span> a + b;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sub</span>(<span class="hljs-params">a, b</span>) &#123;<br>  <span class="hljs-keyword">return</span> a - b;<br>&#125;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  sum,<br>  sub,<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> m = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;./01.js&quot;</span>);<br><br><span class="hljs-keyword">var</span> sum = m.<span class="hljs-title function_">sum</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sum);<br><br><span class="hljs-keyword">var</span> sub = m.<span class="hljs-title function_">sub</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sub);<br></code></pre></td></tr></table></figure><p>运行 02.js, 发现成功调用了 01.js 里面的方法<br><img src="http://cdn.xiamu.icu//FuiOYpSrVacBusY9HiHZLPBPeDNX.png"></p><h2 id="ES6-模块化写法"><a href="#ES6-模块化写法" class="headerlink" title="ES6 模块化写法"></a>ES6 模块化写法</h2><p>创建一个文件夹 es6<br>在文件夹中创建文件 01.js 和 02.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getList</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;获取数据列表&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">save</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;保存数据&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; getList, save &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./01.js&quot;</span>;<br><br><span class="hljs-title function_">getList</span>();<br><br><span class="hljs-title function_">save</span>();<br></code></pre></td></tr></table></figure><p>直接运行会发现报错<br>因为 ES6 的模块化无法在 Node.js 中执行<br>需要用 Babel 编辑成 ES5 后再执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><br><span class="hljs-built_in">PS</span> E:\Code\权限项目\guigu<span class="hljs-literal">-auth-front</span>\moduledemo\es6&gt; node .\<span class="hljs-number">02</span>.js<br>(node:<span class="hljs-number">13464</span>) Warning: To load an ES module, <span class="hljs-built_in">set</span> <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;module&quot;</span> <span class="hljs-keyword">in</span> the package.json or use the .mjs extension.<br>(Use `node <span class="hljs-literal">--trace-warnings</span> ...` to show <span class="hljs-built_in">where</span> the warning was created)<br>E:\Code\权限项目\guigu<span class="hljs-literal">-auth-front</span>\moduledemo\es6\<span class="hljs-number">02</span>.js:<span class="hljs-number">2</span><br>import &#123;getList, save&#125; from <span class="hljs-string">&quot;./01.js&quot;</span>;<br>^^^^^^<br><br>SyntaxError: Cannot use import statement outside a module<br>at Object.compile<span class="hljs-function"><span class="hljs-keyword">Function</span> <span class="hljs-params">(node:vm:352:18)</span></span><br>at wrapSafe (node:internal/modules/cjs/loader:<span class="hljs-number">1025</span>:<span class="hljs-number">15</span>)<br>at Module._compile (node:internal/modules/cjs/loader:<span class="hljs-number">1059</span>:<span class="hljs-number">27</span>)<br>at Object.Module._extensions..js (node:internal/modules/cjs/loader:<span class="hljs-number">1147</span>:<span class="hljs-number">10</span>)<br>at Module.load (node:internal/modules/cjs/loader:<span class="hljs-number">975</span>:<span class="hljs-number">32</span>)<br>at Function.Module._load (node:internal/modules/cjs/loader:<span class="hljs-number">822</span>:<span class="hljs-number">12</span>)<br>at Function.executeUserEntryPoint [<span class="hljs-type">as</span> <span class="hljs-type">runMain</span>] (node:internal/modules/run_main:<span class="hljs-number">81</span>:<span class="hljs-number">12</span>)<br>at node:internal/main/run_main_module:<span class="hljs-number">17</span>:<span class="hljs-number">47</span><br><br>Node.js v17.<span class="hljs-number">0.1</span><br></code></pre></td></tr></table></figure><h2 id="安装-Babel"><a href="#安装-Babel" class="headerlink" title="安装 Babel"></a>安装 Babel</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --global babel-cli<br><span class="hljs-comment">#查看是否安装成功</span><br>babel --version<br></code></pre></td></tr></table></figure><p>如果出现了如下报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS E:\Code\权限项目\guigu-auth-front\moduledemo\es6&gt; babel --version<br>babel : 无法加载文件 D:\Nodejs\node_global\babel.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/g<br>o.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。<br>所在位置 行:1 字符: 1<br>+ babel --version<br>+ ~~~~~<br>    + CategoryInfo          : SecurityError: (:) []，PSSecurityException<br>    + FullyQualifiedErrorId : UnauthorizedAccess<br></code></pre></td></tr></table></figure><p>请在 windows10 电脑中搜索 PowerShell, 并且需要使用管理员权限打开, 输入如下指令, 然后按 y</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">set-ExecutionPolicy RemoteSigned<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fi9cFsSGv_f-9i2chqN_y0-4qjC0.png"></p><h2 id="配置-babelrc"><a href="#配置-babelrc" class="headerlink" title="配置.babelrc"></a>配置.babelrc</h2><p>在项目的根目录下创建.babelrc 文件, 然后保存如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>    <span class="hljs-string">&quot;presets&quot;</span>: [<span class="hljs-string">&quot;es2015&quot;</span>],<br>    <span class="hljs-string">&quot;plugins&quot;</span>: []<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="安装转码器"><a href="#安装转码器" class="headerlink" title="安装转码器"></a>安装转码器</h2><p>在项目的根目录下输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save-dev babel-preset-es2015<br></code></pre></td></tr></table></figure><p>转码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 整个目录转码</span><br><span class="hljs-built_in">mkdir</span> es5<br><span class="hljs-comment"># --out-dir 或 -d 参数指定输出目录</span><br>babel es6 -d es5<br></code></pre></td></tr></table></figure><p>运行程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node es5/02.js<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fu6NXMzLRZfdiLasUOAJcxgfTxme.png"></p><h2 id="ES6-模块化写法-二"><a href="#ES6-模块化写法-二" class="headerlink" title="ES6 模块化写法(二)"></a>ES6 模块化写法(二)</h2><p>创建 es62 目录<br>01.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">getList</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;获取数据列表2&quot;</span>);<br>  &#125;,<br>  <span class="hljs-title function_">save</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;保存数据&quot;</span>);<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><p>02.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> m <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./01&quot;</span>; <span class="hljs-comment">// 这里引入文件可以省略不写.js文件</span><br><br>m.<span class="hljs-title function_">getList</span>();<br>m.<span class="hljs-title function_">save</span>();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS E:\Code\权限项目\guigu-auth-front\moduledemo&gt; babel .\es62\ -d .\es52\<br>es62\01.js -&gt; es52\01.js<br>es62\02.js -&gt; es52\02.js<br>PS E:\Code\权限项目\guigu-auth-front\moduledemo&gt; node .\es52\02.js<br>获取数据列表2<br>保存数据<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fq9niyJi3uhs8j5CCIKydY5tfCPU.png"></p><h2 id="搭建前端环境"><a href="#搭建前端环境" class="headerlink" title="搭建前端环境"></a>搭建前端环境</h2><p>vue-admin-template 后台管理系统模板<br><strong>GitHub 地址：</strong><a href="https://github.com/PanJiaChen/vue-admin-template">https://github.com/PanJiaChen/vue-admin-template</a></p><p>下载项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Clone project</span><br>git <span class="hljs-built_in">clone</span> https://github.com/PanJiaChen/vue-admin-template.git<br></code></pre></td></tr></table></figure><p><strong>建议：</strong>你可以在 vue-admin-template 的基础上进行二次开发，把 vue-element-admin 当做工具箱，想要什么功能或者组件就去 vue-element-admin 那里复制过来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#修改项目名称 vue-admin-template 改为 guigu-auth-ui</span><br><span class="hljs-comment"># 解压压缩包</span><br><span class="hljs-comment"># 进入目录</span><br><span class="hljs-built_in">cd</span> vue-admin-template<br><span class="hljs-comment"># 安装依赖</span><br>npm install<br><span class="hljs-comment"># 启动。执行后，浏览器自动弹出并访问http://localhost:9528/</span><br>npm run dev<br></code></pre></td></tr></table></figure><p>如果出现了如下报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Error: error:0308010C:digital envelope routines::unsupported<br>    at new Hash (node:internal/crypto/hash:67:19)<br>    at Object.createHash (node:crypto:130:10)<br>    at module.exports (E:\Code\guigu-auth\guigu-auth-front\system-front\node_modules\webpack\lib\util\createHash.js:135:53)<br></code></pre></td></tr></table></figure><p>npm run dev 如果报错了, 请把 nodejs 版本降低到 16 版本以前</p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash">|-dist 生产环境打包生成的打包项目<br>|-mock 产生模拟数据<br>|-public 包含会被自动打包到项目根路径的文件夹<br>|-index.html 唯一的页面<br>|-src<br>|-api 包含接口请求函数模块<br>|-table.js  表格列表mock数据接口的请求函数<br>|-user.js  用户登陆相关mock数据接口的请求函数<br>|-assets 组件中需要使用的公用资源<br>|-404_images 404页面的图片<br>|-components 非路由组件<br>|-SvgIcon svg图标组件<br>|-Breadcrumb 面包屑组件(头部水平方向的层级组件)<br>|-Hamburger 用来点击切换左侧菜单导航的图标组件<br>|-icons<br>|-svg 包含一些svg图片文件<br>|-index.js 全局注册SvgIcon组件,加载所有svg图片并暴露所有svg文件名的数组<br>|-layout<br>|-components 组成整体布局的一些子组件<br>|-mixin 组件中可复用的代码<br>|-index.vue 后台管理的整体界面布局组件<br>|-router<br>|-index.js 路由器<br>|-store<br>|-modules<br>|-app.js 管理应用相关数据<br>|-settings.js 管理设置相关数据<br>|-user.js 管理后台登陆用户相关数据<br>|-getters.js 提供子模块相关数据的getters计算属性<br>|-index.js vuex的store<br>|-styles<br>|-xxx.scss 项目组件需要使用的一些样式(使用scss)<br>|-utils 一些工具函数<br>|-auth.js 操作登陆用户的token cookie<br>|-get-page-title.js 得到要显示的网页title<br>|-request.js axios二次封装的模块<br>|-validate.js 检验相关工具函数<br>|-index.js 日期和请求参数处理相关工具函数<br>|-views 路由组件文件夹<br>|-dashboard 首页<br>|-login 登陆<br>|-App.vue 应用根组件<br>|-main.js 入口js<br>|-permission.js 使用全局守卫实现路由权限控制的模块<br>|-settings.js 包含应用设置信息的模块<br>|-.env.development 指定了开发环境的代理服务器前缀路径<br>|-.env.production 指定了生产环境的代理服务器前缀路径<br>|-.eslintignore eslint的忽略配置<br>|-.eslintrc.js eslint的检查配置<br>|-.gitignore git的忽略配置<br>|-.npmrc 指定npm的淘宝镜像和sass的下载地址<br>|-babel.config.js babel的配置<br>|-jsconfig.json 用于vscode引入路径提示的配置<br>|-package.json 当前项目包信息<br>|-package-lock.json 当前项目依赖的第三方包的精确信息<br>|-vue.config.js webpack相关配置(如: 代理服务器)<br></code></pre></td></tr></table></figure><h2 id="改造登录和退出功能"><a href="#改造登录和退出功能" class="headerlink" title="改造登录和退出功能"></a>改造登录和退出功能</h2><h5 id="vue-config-js"><a href="#vue-config-js" class="headerlink" title="vue.config.js"></a>vue.config.js</h5><ul><li>注释掉 mock 接口配置</li><li>配置代理转发请求到目标接口</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// before: require(&#x27;./mock/mock-server.js&#x27;)</span><br><span class="hljs-attr">proxy</span>: &#123;<br>  <span class="hljs-string">&#x27;/dev-api&#x27;</span>: &#123; <span class="hljs-comment">// 匹配所有以 &#x27;/dev-api&#x27;开头的请求路径</span><br>    <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;http://localhost:8800&#x27;</span>,<br>      <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 支持跨域</span><br>      <span class="hljs-attr">pathRewrite</span>: &#123; <span class="hljs-comment">// 重写路径: 去掉路径中开头的&#x27;/dev-api&#x27;</span><br>      <span class="hljs-string">&#x27;^/dev-api&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//Fk9PXi0T3ZkCHzDIi_wI9NtcWcpg.png"></p><h5 id="src-x2F-utils-x2F-request-js"><a href="#src-x2F-utils-x2F-request-js" class="headerlink" title="src&#x2F;utils&#x2F;request.js"></a>src&#x2F;utils&#x2F;request.js</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span> (res.<span class="hljs-property">code</span> !== <span class="hljs-number">200</span>) &#123;<br>  <span class="hljs-title class_">Message</span>(&#123;<br>    <span class="hljs-attr">message</span>: res.<span class="hljs-property">message</span> || <span class="hljs-string">&quot;Error&quot;</span>,<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;error&quot;</span>,<br>    <span class="hljs-attr">duration</span>: <span class="hljs-number">5</span> * <span class="hljs-number">1000</span>,<br>  &#125;);<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(res.<span class="hljs-property">message</span> || <span class="hljs-string">&quot;Error&quot;</span>));<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FnTgx13SPclHF5ko92fa_7INEiac.png"></p><h5 id="src-x2F-api-x2F-user-js"><a href="#src-x2F-api-x2F-user-js" class="headerlink" title="src&#x2F;api&#x2F;user.js"></a>src&#x2F;api&#x2F;user.js</h5><p>修改 url</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/utils/request&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">data</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/admin/system/index/login&quot;</span>,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;post&quot;</span>,<br>    data,<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getInfo</span>(<span class="hljs-params">token</span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/admin/system/index/info&quot;</span>,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;get&quot;</span>,<br>    <span class="hljs-attr">params</span>: &#123; token &#125;,<br>  &#125;);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">logout</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/admin/system/index/logout&quot;</span>,<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;post&quot;</span>,<br>  &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FsLeNupuF1H57KMvVwMGfol_XQYZ.png"><br>后端代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.system.controller;<br><br><span class="hljs-keyword">import</span> com.atguigu.common.result.Result;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PostMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-meta">@Api(&quot;后台管理登录&quot;)</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/system/index&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IndexController</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * &#123;&quot;code&quot;:20000,</span><br><span class="hljs-comment">     * &quot;data&quot;:&#123;&quot;token&quot;:&quot;admin-token&quot;&#125;&#125;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">login</span><span class="hljs-params">()</span> &#123;<br>        Map&lt;String, Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;token&quot;</span>, <span class="hljs-string">&quot;admin-token xiamu&quot;</span>);<br>        <span class="hljs-keyword">return</span> Result.ok(map);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * &#123;&quot;code&quot;:20000,</span><br><span class="hljs-comment">     * &quot;data&quot;:&#123;&quot;roles&quot;:[&quot;admin&quot;],</span><br><span class="hljs-comment">     * &quot;introduction&quot;:&quot;I am a super administrator&quot;,</span><br><span class="hljs-comment">     * &quot;avatar&quot;:&quot;https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif&quot;,</span><br><span class="hljs-comment">     * &quot;name&quot;:&quot;Super Admin&quot;&#125;&#125;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@GetMapping(&quot;/info&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">info</span><span class="hljs-params">()</span> &#123;<br>        Map&lt;String, Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;roles&quot;</span>, <span class="hljs-string">&quot;[admin]&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;introduction&quot;</span>, <span class="hljs-string">&quot;I am a super administrator&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;avatar&quot;</span>, <span class="hljs-string">&quot;https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;Super Admin xiamu&quot;</span>);<br>        <span class="hljs-keyword">return</span> Result.ok(map);<br>    &#125;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/logout&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">logout</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> Result.ok();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="修改路由"><a href="#修改路由" class="headerlink" title="修改路由"></a>修改路由</h2><p>修改 src&#x2F;router&#x2F;index.js 文件，重新定义 constantRoutes</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> constantRoutes = [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/login&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/login/index&quot;</span>),<br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br><br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/404&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/404&quot;</span>),<br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br><br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Layout</span>,<br>    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&quot;/dashboard&quot;</span>,<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;dashboard&quot;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;Dashboard&quot;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/dashboard/index&quot;</span>),<br>        <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;Dashboard&quot;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;dashboard&quot;</span> &#125;,<br>      &#125;,<br>    ],<br>  &#125;,<br><br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/system&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">Layout</span>,<br>    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&quot;/system/sysUser&quot;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;System&quot;</span>,<br>    <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;系统管理&quot;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;el-icon-s-help&quot;</span> &#125;,<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;sysRole&quot;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;SysRole&quot;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/system/sysRole/list&quot;</span>),<br>        <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;角色管理&quot;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;table&quot;</span> &#125;,<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;sysUser&quot;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;SysUser&quot;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/views/system/sysUser/list&quot;</span>),<br>        <span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&quot;用户管理&quot;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&quot;tree&quot;</span> &#125;,<br>      &#125;,<br>    ],<br>  &#125;,<br><br>  <span class="hljs-comment">// 404 page must be placed at the end !!!</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-attr">redirect</span>: <span class="hljs-string">&quot;/404&quot;</span>, <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span> &#125;,<br>];<br></code></pre></td></tr></table></figure><p>views&#x2F;system&#x2F;sysRole&#x2F;list.vue 内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;app-container&quot;&gt;角色列表&lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>views&#x2F;system&#x2F;sysUser&#x2F;list.vue 内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;app-container&quot;&gt;用户列表&lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><h2 id="定义-api"><a href="#定义-api" class="headerlink" title="定义 api"></a>定义 api</h2><p>在 system-front\src\api\system\sysRole.js 定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/utils/request&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">getList</span>(<span class="hljs-params">page, limit, serachObj</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">&quot;/admin/system/sysRole&quot;</span> + <span class="hljs-string">&quot;/&quot;</span> + page + <span class="hljs-string">&quot;/&quot;</span> + limit,<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;get&quot;</span>,<br>      <span class="hljs-attr">params</span>: serachObj,<br>    &#125;);<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="实现角色的管理"><a href="#实现角色的管理" class="headerlink" title="实现角色的管理"></a>实现角色的管理</h2><p><strong>JavaScript 的整数类型是正负 2 的 53 次方, 跟 Java 的 Long 类型的范围要小</strong><br>list.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;app-container&quot;&gt;<br>    角色列表<br>    &lt;!--查询表单--&gt;<br>    &lt;div class=&quot;search-div&quot;&gt;<br>      &lt;el-form<br>        label-width=&quot;70px&quot;<br>        size=&quot;small&quot;<br>        @keyup.enter.native=&quot;fetchData()&quot;<br>      &gt;<br>        &lt;el-row&gt;<br>          &lt;el-col :span=&quot;24&quot;&gt;<br>            &lt;el-form-item label=&quot;角色名称&quot;&gt;<br>              &lt;el-input<br>                style=&quot;width: 100%&quot;<br>                v-model=&quot;searchObj.roleName&quot;<br>                placeholder=&quot;角色名称&quot;<br>              &gt;&lt;/el-input&gt;<br>            &lt;/el-form-item&gt;<br>          &lt;/el-col&gt;<br>        &lt;/el-row&gt;<br>        &lt;el-row style=&quot;display:flex&quot;&gt;<br>          &lt;el-button<br>            type=&quot;primary&quot;<br>            icon=&quot;el-icon-search&quot;<br>            size=&quot;mini&quot;<br>            @click=&quot;fetchData()&quot;<br>            &gt;搜索&lt;/el-button<br>          &gt;<br>          &lt;el-button icon=&quot;el-icon-refresh&quot; size=&quot;mini&quot; @click=&quot;resetData&quot;<br>            &gt;重置&lt;/el-button<br>          &gt;<br>        &lt;/el-row&gt;<br>      &lt;/el-form&gt;<br>    &lt;/div&gt;<br><br>    &lt;!-- 添加组件 --&gt;<br>    &lt;div class=&quot;tools-div&quot;&gt;<br>      &lt;el-button type=&quot;success&quot; icon=&quot;el-icon-plus&quot; size=&quot;mini&quot; @click=&quot;add&quot;<br>        &gt;添 加&lt;/el-button<br>      &gt;<br>      &lt;el-button class=&quot;btn-add&quot; size=&quot;mini&quot; @click=&quot;batchRemove&quot;<br>        &gt;批量删除&lt;/el-button<br>      &gt;<br>    &lt;/div&gt;<br><br>    &lt;!-- 表格 --&gt;<br>    &lt;el-table<br>      v-loading=&quot;listLoading&quot;<br>      :data=&quot;list&quot;<br>      stripe<br>      border<br>      style=&quot;width: 100%;margin-top: 10px;&quot;<br>      @selection-change=&quot;handleSelectionChange&quot;<br>    &gt;<br>      &lt;!-- 添加复选框 --&gt;<br>      &lt;el-table-column type=&quot;selection&quot; /&gt;<br><br>      &lt;el-table-column label=&quot;序号&quot; width=&quot;70&quot; align=&quot;center&quot;&gt;<br>        &lt;template slot-scope=&quot;scope&quot;&gt;<br>          &#123;&#123; (page - 1) * limit + scope.$index + 1 &#125;&#125;<br>        &lt;/template&gt;<br>      &lt;/el-table-column&gt;<br><br>      &lt;el-table-column prop=&quot;roleName&quot; label=&quot;角色名称&quot; /&gt;<br>      &lt;el-table-column prop=&quot;roleCode&quot; label=&quot;角色编码&quot; /&gt;<br>      &lt;el-table-column prop=&quot;createTime&quot; label=&quot;创建时间&quot; width=&quot;160&quot; /&gt;<br>      &lt;el-table-column label=&quot;操作&quot; width=&quot;200&quot; align=&quot;center&quot;&gt;<br>        &lt;template slot-scope=&quot;scope&quot;&gt;<br>          &lt;el-button<br>            type=&quot;primary&quot;<br>            icon=&quot;el-icon-edit&quot;<br>            size=&quot;mini&quot;<br>            @click=&quot;edit(scope.row.id)&quot;<br>            title=&quot;修改&quot;<br>          /&gt;<br>          &lt;el-button<br>            type=&quot;danger&quot;<br>            icon=&quot;el-icon-delete&quot;<br>            size=&quot;mini&quot;<br>            @click=&quot;removeDataById(scope.row.id)&quot;<br>            title=&quot;删除&quot;<br>          /&gt;<br>        &lt;/template&gt;<br>      &lt;/el-table-column&gt;<br>    &lt;/el-table&gt;<br><br>    &lt;!-- 分页组件 --&gt;<br>    &lt;el-pagination<br>      :current-page=&quot;page&quot;<br>      :total=&quot;total&quot;<br>      :page-size=&quot;limit&quot;<br>      style=&quot;padding: 30px 0; text-align: center;&quot;<br>      layout=&quot;total, prev, pager, next, jumper&quot;<br>      @current-change=&quot;fetchData&quot;<br>    /&gt;<br><br>    &lt;!-- 定义弹出框 --&gt;<br>    &lt;el-dialog title=&quot;添加/修改&quot; :visible.sync=&quot;dialogVisible&quot; width=&quot;40%&quot;&gt;<br>      &lt;el-form<br>        ref=&quot;dataForm&quot;<br>        :model=&quot;sysRole&quot;<br>        label-width=&quot;150px&quot;<br>        size=&quot;small&quot;<br>        style=&quot;padding-right: 40px;&quot;<br>      &gt;<br>        &lt;el-form-item label=&quot;角色名称&quot;&gt;<br>          &lt;el-input v-model=&quot;sysRole.roleName&quot; /&gt;<br>        &lt;/el-form-item&gt;<br>        &lt;el-form-item label=&quot;角色编码&quot;&gt;<br>          &lt;el-input v-model=&quot;sysRole.roleCode&quot; /&gt;<br>        &lt;/el-form-item&gt;<br>      &lt;/el-form&gt;<br>      &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;<br>        &lt;el-button<br>          @click=&quot;dialogVisible = false&quot;<br>          size=&quot;small&quot;<br>          icon=&quot;el-icon-refresh-right&quot;<br>          &gt;取 消&lt;/el-button<br>        &gt;<br>        &lt;el-button<br>          type=&quot;primary&quot;<br>          icon=&quot;el-icon-check&quot;<br>          @click=&quot;saveOrUpdate()&quot;<br>          size=&quot;small&quot;<br>          &gt;确 定&lt;/el-button<br>        &gt;<br>      &lt;/span&gt;<br>    &lt;/el-dialog&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>// 引入定义接口的js文件<br>import api from &quot;@/api/system/sysRole&quot;;<br>const defaultForm = &#123;<br>  id: &quot;&quot;,<br>  roleName: &quot;&quot;,<br>  roleCode: &quot;&quot;,<br>&#125;;<br>export default &#123;<br>  //定义初始值<br>  data() &#123;<br>    return &#123;<br>      listLoading: true, // 数据是否正在加载<br>      list: [], // 角色列表<br>      total: 0, // 总记录数<br>      page: 1, //页码<br>      limit: 8, // 每页记录数<br>      searchObj: &#123;&#125;, // 查询条件<br>      dialogVisible: false, // 不弹框<br>      sysRole: defaultForm, // 封装提交的对象<br>      saveBtnDisabled: false,<br>      multipleSelection: [], // 批量删除选中的记录列表<br>    &#125;;<br>  &#125;,<br>  // 页面渲染之前执行<br>  created() &#123;<br>    this.fetchData();<br>  &#125;,<br>  // 具体方法<br>  methods: &#123;<br>    // 复选框发生变化时处理<br>    handleSelectionChange(selection) &#123;<br>      //console.log(selection);<br>      this.multipleSelection = selection;<br>    &#125;,<br>    // 批量删除<br>    batchRemove() &#123;<br>      if (this.multipleSelection.length == 0) &#123;<br>        this.$message.warning(&quot;请选择你要删除的记录!&quot;);<br>        return;<br>      &#125;<br>      this.$confirm(&quot;此操作将永久删除该记录, 是否继续?&quot;, &quot;提示&quot;, &#123;<br>        confirmButtonText: &quot;确定&quot;,<br>        cancelButtonText: &quot;取消&quot;,<br>        type: &quot;warning&quot;,<br>      &#125;)<br>        .then(() =&gt; &#123;<br>          // 点击确定，远程调用ajax<br>          // 遍历selection，将id取出放入id列表<br>          var idList = [];<br>          this.multipleSelection.forEach((item) =&gt; &#123;<br>            idList.push(item.id);<br>          &#125;);<br>          // 调用api<br>          api.batchRemove(idList).then((response) =&gt; &#123;<br>            console.log(response);<br>            this.fetchData();<br>            this.$message.success(response.message);<br>          &#125;);<br>        &#125;)<br>        .catch((error) =&gt; &#123;<br>          if (error === &quot;cancel&quot;) &#123;<br>            this.$message.info(&quot;取消删除&quot;);<br>          &#125;<br>        &#125;);<br>    &#125;,<br><br>    edit(id) &#123;<br>      this.dialogVisible = true;<br>      api.getById(id).then((response) =&gt; &#123;<br>        this.sysRole = response.data;<br>      &#125;);<br>    &#125;,<br><br>    // 弹出添加功能的表单<br>    add() &#123;<br>      this.dialogVisible = true;<br>      this.sysRole = &#123;&#125;;<br>    &#125;,<br><br>    saveOrUpdate() &#123;<br>      if (!this.sysRole.id) &#123;<br>        this.saveRole();<br>      &#125; else &#123;<br>        this.updateRole();<br>      &#125;<br>    &#125;,<br><br>    saveRole() &#123;<br>      api.save(this.sysRole).then((response) =&gt; &#123;<br>        // 提示保存成功<br>        this.$message(&#123;<br>          type: &quot;success&quot;,<br>          message: &quot;保存成功!&quot;,<br>        &#125;);<br>        this.fetchData();<br>        this.dialogVisible = false;<br>      &#125;);<br>    &#125;,<br><br>    updateRole() &#123;<br>      api.updateById(this.sysRole).then((response) =&gt; &#123;<br>        // 提示保存成功<br>        this.$message(&#123;<br>          type: &quot;success&quot;,<br>          message: &quot;修改成功!&quot;,<br>        &#125;);<br>        this.fetchData(this.page);<br>        this.dialogVisible = false;<br>      &#125;);<br>    &#125;,<br><br>    // 条件分页查询列表方法<br>    fetchData(pageNum = 1) &#123;<br>      // 页数赋值<br>      this.page = pageNum;<br>      // ajax                                     searchObj<br>      api<br>        .getPageList(this.page, this.limit, this.searchObj)<br>        .then((response) =&gt; &#123;<br>          // console.log(response);<br>          this.listLoading = false;<br>          // 每页数据列表<br>          this.list = response.data.records;<br>          // 总记录数<br>          this.total = response.data.total;<br>        &#125;);<br>    &#125;,<br><br>    // 重置表单<br>    resetData() &#123;<br>      console.log(&quot;重置查询表单&quot;);<br>      // 清空表单<br>      this.searchObj = &#123;&#125;;<br>      // 查询所有数据<br>      this.fetchData();<br>    &#125;,<br><br>    // 删除角色<br>    removeDataById(id) &#123;<br>      this.$confirm(&quot;此操作将永久删除该角色, 是否继续?&quot;, &quot;提示&quot;, &#123;<br>        confirmButtonText: &quot;确定&quot;,<br>        cancelButtonText: &quot;取消&quot;,<br>        type: &quot;warning&quot;,<br>      &#125;)<br>        .then(() =&gt; &#123;<br>          // 调用方法删除<br>          api.removeId(id).then((response) =&gt; &#123;<br>            // 提示删除成功<br>            this.$message(&#123;<br>              type: &quot;success&quot;,<br>              message: &quot;删除成功!&quot;,<br>            &#125;);<br>            // 刷新页面<br>            this.fetchData();<br>          &#125;);<br>        &#125;)<br>        .catch(() =&gt; &#123;<br>          this.$message(&#123;<br>            type: &quot;info&quot;,<br>            message: &quot;已取消删除&quot;,<br>          &#125;);<br>        &#125;);<br>    &#125;,<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>sysRole.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/utils/request&quot;</span>;<br><br><span class="hljs-keyword">const</span> api_name = <span class="hljs-string">&quot;/admin/system/sysRole&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">getPageList</span>(<span class="hljs-params">page, limit, serachObj</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-comment">//url: &#x27;/admin/system/sysRole&#x27; + &#x27;/&#x27; + page + &#x27;/&#x27; + limit,</span><br>      <span class="hljs-attr">url</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;api_name&#125;</span>/<span class="hljs-subst">$&#123;page&#125;</span>/<span class="hljs-subst">$&#123;limit&#125;</span>`</span>,<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;get&quot;</span>,<br>      <span class="hljs-attr">params</span>: serachObj,<br>    &#125;);<br>  &#125;,<br>  <span class="hljs-title function_">removeId</span>(<span class="hljs-params">id</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;api_name&#125;</span>/remove/<span class="hljs-subst">$&#123;id&#125;</span>`</span>,<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;delete&quot;</span>,<br>    &#125;);<br>  &#125;,<br>  <span class="hljs-title function_">save</span>(<span class="hljs-params">role</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;api_name&#125;</span>/save`</span>,<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;post&quot;</span>,<br>      <span class="hljs-attr">data</span>: role,<br>      <span class="hljs-comment">// data表达json参数</span><br>      <span class="hljs-comment">// params是添加到url的请求字符串中的，一般用于get请求</span><br>      <span class="hljs-comment">// data是添加到请求体（body）中的， 一般用于post请求</span><br>    &#125;);<br>  &#125;,<br>  <span class="hljs-comment">// 通过id查询</span><br>  <span class="hljs-title function_">getById</span>(<span class="hljs-params">id</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;api_name&#125;</span>/findRoleById/<span class="hljs-subst">$&#123;id&#125;</span>`</span>,<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;post&quot;</span>,<br>    &#125;);<br>  &#125;,<br>  <span class="hljs-comment">// 更新</span><br>  <span class="hljs-title function_">updateById</span>(<span class="hljs-params">role</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;api_name&#125;</span>/update`</span>,<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;post&quot;</span>,<br>      <span class="hljs-attr">data</span>: role,<br>    &#125;);<br>  &#125;,<br>  <span class="hljs-comment">// 批量删除</span><br>  <span class="hljs-title function_">batchRemove</span>(<span class="hljs-params">idList</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(&#123;<br>      <span class="hljs-attr">url</span>: <span class="hljs-string">`<span class="hljs-subst">$&#123;api_name&#125;</span>/batchRemove`</span>,<br>      <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;delete&quot;</span>,<br>      <span class="hljs-attr">data</span>: idList,<br>    &#125;);<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="实现用户的管理"><a href="#实现用户的管理" class="headerlink" title="实现用户的管理"></a>实现用户的管理</h2><h2 id="树形结构工具类"><a href="#树形结构工具类" class="headerlink" title="树形结构工具类"></a>树形结构工具类</h2><h2 id="前后端打包"><a href="#前后端打包" class="headerlink" title="前后端打包"></a>前后端打包</h2><p><strong>后端打包</strong>在 pom.xml 加上如下代码</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">finalName</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;project.artifactId&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">finalName</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>点击 maven 的 package 进行打包, 打包之后的文件存在 target 下<br><img src="http://cdn.xiamu.icu//FqqTJnCe20txSJ7ckXmKggHwQSm5.png"><br><strong>前端打包</strong>需要把代理修改成 prod 生产环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">PS E:\Code\guigu-auth\guigu-auth-front\system-front&gt; npm run build:prod<br></code></pre></td></tr></table></figure><p>打包完之后, 打包之后的文件存在 dist 下<br><img src="http://cdn.xiamu.icu//FuFciSbp_-KzF3lpopc2QSKZwRDh.png"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>SSM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx</title>
    <link href="/Java/Nginx/"/>
    <url>/Java/Nginx/</url>
    
    <content type="html"><![CDATA[<blockquote><p>唯有你也想见我, 我们俩的见面才有意义</p></blockquote><h2 id="Nginx-的安装"><a href="#Nginx-的安装" class="headerlink" title="Nginx 的安装"></a>Nginx 的安装</h2><p>先下载 <a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a> , 推荐下载稳定版<br><img src="http://cdn.xiamu.icu//Fjo_kxf-_ougtxymUOJQpQ-Zidpa.png"><br>可以先下载到 windows 系统里, 然后再通过 xftp 传输到虚拟机<br>或者通过 wget 的方式安装(虚拟机需要有网络)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 软件包放在/opt目录下</span><br>[root@xiamu ~]<span class="hljs-comment"># cd /opt/</span><br>[root@xiamu opt]<span class="hljs-comment"># wget http://nginx.org/download/nginx-1.22.1.tar.gz</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装完之后查看</span><br>[root@xiamu opt]<span class="hljs-comment"># ls</span><br>nginx-1.22.1.tar.gz<br><br><span class="hljs-comment"># 解压nginx</span><br>[root@xiamu opt]<span class="hljs-comment"># tar zxvf nginx-1.22.1.tar.gz</span><br><br>[root@xiamu opt]<span class="hljs-comment"># ls</span><br>nginx-1.22.1 nginx-1.22.1.tar.gz<br><br>[root@xiamu opt]<span class="hljs-comment"># cd nginx-1.22.1/</span><br>[root@xiamu nginx-1.22.1]<span class="hljs-comment"># ls</span><br>auto     CHANGES.ru  configure  html     man     src<br>CHANGES  conf        contrib    LICENSE  README<br><br><span class="hljs-comment"># 编译安装</span><br>[root@xiamu nginx-1.22.1]<span class="hljs-comment"># ./configure --prefix=/usr/local/nginx</span><br>[root@xiamu nginx-1.22.1]<span class="hljs-comment"># make</span><br>[root@xiamu nginx-1.22.1]<span class="hljs-comment"># make install</span><br><br></code></pre></td></tr></table></figure><p>常见报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">checking <span class="hljs-keyword">for</span> OS<br>+ Linux 3.10.0-693.el7.x86_64 x86_64<br>checking <span class="hljs-keyword">for</span> C compiler ... not found<br>./configure: error: C compiler cc is not found<br><span class="hljs-comment"># 安装gcc</span><br>[root@xiamu nginx-1.22.1]<span class="hljs-comment"># yum install -y gcc</span><br><br>./configure: error: the HTTP rewrite module requires the PCRE library.<br>You can either <span class="hljs-built_in">disable</span> the module by using --without-http_rewrite_module<br>option, or install the PCRE library into the system, or build the PCRE library<br>statically from the <span class="hljs-built_in">source</span> with nginx by using --with-pcre=&lt;path&gt; option.<br><span class="hljs-comment"># 安装perl库</span><br>[root@xiamu nginx-1.22.1]<span class="hljs-comment"># yum install -y pcre pcre-devel</span><br><br><br>./configure: error: the HTTP gzip module requires the zlib library.<br>You can either <span class="hljs-built_in">disable</span> the module by using --without-http_gzip_module<br>option, or install the zlib library into the system, or build the zlib library<br>statically from the <span class="hljs-built_in">source</span> with nginx by using --with-zlib=&lt;path&gt; option.<br><span class="hljs-comment"># 安装zlib库</span><br>[root@xiamu nginx-1.22.1]<span class="hljs-comment"># yum install -y zlib zlib-devel</span><br><br></code></pre></td></tr></table></figure><h2 id="开启网络服务报错"><a href="#开启网络服务报错" class="headerlink" title="开启网络服务报错"></a>开启网络服务报错</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">参考网站: https://www.cyberithub.com/failed-to-start-lsb-bring-up-down-networking/<br><br>报错信息<br>Solved: network.service Failed to start LSB: Bring up/down networking <span class="hljs-keyword">in</span> RHEL/Centos 7/8<br><br>尝试禁用NetworkManager, 或者BOOTPROTO设置成none<br>[root@localhost ~]<span class="hljs-comment"># systemctl stop NetworkManager</span><br>[root@localhost ~]<span class="hljs-comment"># systemctl disable NetworkManager</span><br>[root@localhost ~]<span class="hljs-comment"># systemctl status NetworkManager -l</span><br></code></pre></td></tr></table></figure><h2 id="查看-nginx-的目录"><a href="#查看-nginx-的目录" class="headerlink" title="查看 nginx 的目录"></a>查看 nginx 的目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@xiamu nginx-1.22.1]<span class="hljs-comment"># cd /usr/local/</span><br>[root@xiamu <span class="hljs-built_in">local</span>]<span class="hljs-comment"># ls</span><br>bin  games    lib    libexec  sbin   src<br>etc  include  lib64  nginx    share<br>[root@xiamu <span class="hljs-built_in">local</span>]<span class="hljs-comment"># cd nginx/</span><br>[root@xiamu nginx]<span class="hljs-comment"># ls</span><br>conf  html  logs  sbin<br><br></code></pre></td></tr></table></figure><h2 id="开启-nginx-服务"><a href="#开启-nginx-服务" class="headerlink" title="开启 nginx 服务"></a>开启 nginx 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@xiamu nginx]<span class="hljs-comment"># cd sbin/</span><br>[root@xiamu sbin]<span class="hljs-comment"># ls</span><br>nginx<br>[root@xiamu sbin]<span class="hljs-comment"># ./nginx</span><br>[root@xiamu sbin]<span class="hljs-comment"># ./nginx -s stop</span><br><span class="hljs-comment"># 先开启nginx, 然后关闭, 配置脚本, 以后可以通过脚本的方式来启动nginx, 非常的方便</span><br><br><span class="hljs-comment"># nginx的开启和关闭</span><br>./nginx 启动<br>./nginx -s stop 快速停止<br>./nginx -s quit 优雅关闭，在退出前完成已经接受的连接请求<br>./nginx -s reload 重新加载配置<br></code></pre></td></tr></table></figure><p>在 windows 浏览器输入虚拟机的 ip, welcome to nginx, 如果访问不到, 请关闭防火墙<br><img src="http://cdn.xiamu.icu//Fm-6rwtvCjcf0ckjo1JEeN6pNdjU.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 关闭防火墙</span><br>[root@xiamu sbin]<span class="hljs-comment"># systemctl status firewalld.service</span><br>[root@xiamu sbin]<span class="hljs-comment"># systemctl stop firewalld.service</span><br>[root@xiamu sbin]<span class="hljs-comment"># systemctl status firewalld.service</span><br></code></pre></td></tr></table></figure><h2 id="安装成系统服务-配置脚本启动-nginx"><a href="#安装成系统服务-配置脚本启动-nginx" class="headerlink" title="安装成系统服务(配置脚本启动 nginx)"></a>安装成系统服务(配置脚本启动 nginx)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意在配置脚本的时候, nginx服务需要先关闭</span><br>[root@xiamu sbin]<span class="hljs-comment"># ps -ef | grep nginx</span><br>[root@xiamu sbin]<span class="hljs-comment"># ./nginx -s stop</span><br>[root@xiamu sbin]<span class="hljs-comment"># ps -ef | grep nginx</span><br><br><span class="hljs-comment">#  创建服务脚本</span><br>[root@xiamu sbin]<span class="hljs-comment"># vi /usr/lib/systemd/system/nginx.service</span><br><br>[Unit]<br>Description=nginx - web server<br>After=network.target remote-fs.target nss-lookup.target<br>[Service]<br>Type=forking<br>PIDFile=/usr/local/nginx/logs/nginx.pid<br>ExecStartPre=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf<br>ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf<br>ExecReload=/usr/local/nginx/sbin/nginx -s reload<br>ExecStop=/usr/local/nginx/sbin/nginx -s stop<br>ExecQuit=/usr/local/nginx/sbin/nginx -s quit<br>PrivateTmp=<span class="hljs-literal">true</span><br>[Install]<br>WantedBy=multi-user.target<br><br><br><span class="hljs-comment"># 重启系统服务</span><br>[root@xiamu sbin]<span class="hljs-comment"># systemctl daemon-reload</span><br><br><span class="hljs-comment"># 注意要重启一遍</span><br>[root@xiamu sbin]<span class="hljs-comment"># reboot</span><br><br><span class="hljs-comment"># 启动nginx</span><br>[root@xiamu sbin]<span class="hljs-comment"># systemctl start nginx</span><br>[root@xiamu sbin]<span class="hljs-comment"># systemctl status nginx</span><br><br><span class="hljs-comment"># 设置开机启动nginx</span><br>[root@xiamu sbin]<span class="hljs-comment"># systemctl enable nginx</span><br><br></code></pre></td></tr></table></figure><h2 id="了解-ngix-的目录"><a href="#了解-ngix-的目录" class="headerlink" title="了解 ngix 的目录"></a>了解 ngix 的目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@xiamu nginx]<span class="hljs-comment"># ls</span><br>client_body_temp  conf  fastcgi_temp  html  logs  proxy_temp  sbin  scgi_temp  uwsgi_temp<br><span class="hljs-comment"># html放页面</span><br><span class="hljs-comment"># logs放日志文件, 如果以后的磁盘被日志文件堆满了, nginx可能会出现问题</span><br><span class="hljs-comment"># conf放配置文件</span><br><span class="hljs-comment"># html用来存放静态文件的默认目录 html、css等</span><br><span class="hljs-comment"># sbin nginx的主程序</span><br><br><br><span class="hljs-comment"># logs文件下的pid文件是用来记录当前进程的pid值, 这个值可以自定义</span><br>[root@xiamu nginx]<span class="hljs-comment"># cat logs/nginx.pid</span><br>11928<br>[root@xiamu nginx]<span class="hljs-comment"># ps -ef | grep nginx</span><br>root      11928      1  0 13:20 ?        00:00:00 nginx: master process /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf<br>nobody    11929  11928  0 13:20 ?        00:00:00 nginx: worker process<br>root      12992   7479  0 13:36 pts/2    00:00:00 grep --color=auto nginx<br><br><br></code></pre></td></tr></table></figure><h2 id="基本运行原理"><a href="#基本运行原理" class="headerlink" title="基本运行原理"></a>基本运行原理</h2><p><img src="http://cdn.xiamu.icu//FtArDEPOttEewsHf7WPQFNkkKMm3.png"></p><h2 id="Nginx-配置与应用场景"><a href="#Nginx-配置与应用场景" class="headerlink" title="Nginx 配置与应用场景"></a>Nginx 配置与应用场景</h2><p>nginx 目录下 conf&#x2F;nginx.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">worker_processes<br>worker_processes 1; 默认为1，表示开启一个业务进程<br>worker_connections<br>worker_connections 1024; 单个业务进程可接受连接数<br>include mime.types;<br>include mime.types; 引入http mime类型<br>default_type application/octet-stream;<br>default_type application/octet-stream; 如果mime类型没匹配上，默认使用二进制流的方式传输。<br>sendfile on;<br>sendfile on; 使用linux的 sendfile(socket, file, len) 高效网络传输，也就是数据0拷贝。<br><br>keepalive_timeout 65;<br>keepalive_timeout 65;<br><br>虚拟主机配置<br>server &#123;<br>listen 80; 监听端口号<br>server_name localhost; 主机名<br>location / &#123; 匹配路径<br>root html; 文件根目录<br>index index.html index.htm; 默认页名称<br>&#125;<br>error_page 500 502 503 504 /50x.html; 报错编码对应页面<br>location = /50x.html &#123;<br>root html;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>未开启 sendfile<br><img src="http://cdn.xiamu.icu//FnuJ7BHsUuFBKoqqitDlDs4yIhEp.png"><br>开启后<br><img src="http://cdn.xiamu.icu//FjoO6HJkcWe8I4P50029_85uOP5r.png"><br>server<br><img src="http://cdn.xiamu.icu//FkmIlS7ZaAPTkKP8IDrQ1V5LINmm.png"></p><h2 id="配置自定义的域名"><a href="#配置自定义的域名" class="headerlink" title="配置自定义的域名"></a>配置自定义的域名</h2><p>C:\Windows\System32\drivers\etc 下修改 host 文件, 如果不能保存, 请先保存到桌面然后再拖拽进来替换该文件<br>(注意配置完之后要保存, 并且要关掉电脑上的 VPN)<br><img src="http://cdn.xiamu.icu//Fufktq6iDR1Bgtnvcn8gHeKDpSmT.png"><br><img src="http://cdn.xiamu.icu//FhN_VSNr6oMWbDSaV2jqO1AExj2N.png"><br><img src="http://cdn.xiamu.icu//Fq9SoKdNOhfpmnMWnmIIrYtpNg3z.png"></p><h2 id="在阿里云的域名控制台配置内网-ip"><a href="#在阿里云的域名控制台配置内网-ip" class="headerlink" title="在阿里云的域名控制台配置内网 ip"></a>在阿里云的域名控制台配置内网 ip</h2><p><a href="https://dns.console.aliyun.com/#/dns/setting/xiamu.icu">https://dns.console.aliyun.com/#/dns/setting/xiamu.icu</a><br><img src="http://cdn.xiamu.icu//Fuetga5BcLwbuuf88GeLsmLV9sVz.png"><br>主机记录填写 www<br>记录值填写虚拟机的 ip 地址</p><p>然后打开 cmd 去 ping <a href="http://www.xiamu.icu/">www.xiamu.icu</a>, ping 通了, 说明配置成功了, 注意 ping 的是<a href="http://www.xxx.com/">www.xxx.com</a> 而不是 xxx.com<br><img src="http://cdn.xiamu.icu//FuY6dfbMnpxGSVB4jwdxnPTqoRkj.png"><br>ping 通之后可以打开浏览器访问<a href="http://www.xiamu.icu/">www.xiamu.icu</a><br><img src="http://cdn.xiamu.icu//Fv4kLtXrq3-o1M1Nq1pJB8bpSfZC.png"></p><p>批量添加很多域名, 在主机记录填写一个 * , 浏览器中 <a href="http://wwww.xiamu.icu/">http://wwww.xiamu.icu/</a>, 四个 w 也是可以访问的<br><img src="http://cdn.xiamu.icu//Fp-oselyYdTlBH0IFbfcr3lc7izw.png"></p><p><img src="http://cdn.xiamu.icu//FpwSr6wue4bb0dimUVqdNrQjItga.png"></p><p>在根(&#x2F;)路径下创建两个文件 www&#x2F;www&#x2F;index.html 和 www&#x2F;vod&#x2F;index.html, 并且往里面写入内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@xiamu www]<span class="hljs-comment"># ls</span><br>index.html<br>[root@xiamu www]<span class="hljs-comment"># cat index.html</span><br>this is www web site!<br>[root@xiamu www]<span class="hljs-comment"># pwd</span><br>/www/www<br><br>[root@xiamu vod]<span class="hljs-comment"># ls</span><br>index.html<br>[root@xiamu vod]<span class="hljs-comment"># cat index.html</span><br>this is void site.<br>[root@xiamu vod]<span class="hljs-comment"># pwd</span><br>/www/vod<br><br><br></code></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@xiamu nginx]<span class="hljs-comment"># vim /usr/local/nginx/conf/nginx.conf</span><br><span class="hljs-comment"># 只需要修改 server_name , location/root 就行了</span><br><span class="hljs-comment"># 注意修改的server_name可以同名, 但是端口不能重复</span><br><span class="hljs-comment"># 或者修改的server_name不同名, 但是端口可以重复</span><br><br>http &#123;<br>    include       mime.types;<br>    default_type  application/octet-stream;<br>    sendfile        on;<br>    keepalive_timeout  65;<br><br>    server &#123;<br>        listen       80;<br>        server_name  www.xiamu.icu;<br>        location / &#123;<br>            root   /www/www;<br>            index  index.html index.htm;<br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br>    &#125;<br>server &#123;<br>        listen       80;<br>        server_name  vod.xiamu.icu;<br>        location / &#123;<br>            root   /www/vod;<br>            index  index.html index.htm;<br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment"># 修改完配置文件之后需要重新加载配置文件</span><br>[root@xiamu nginx]<span class="hljs-comment"># systemctl reload nginx</span><br>[root@xiamu nginx]<span class="hljs-comment"># systemctl status nginx</span><br><br><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FrFCu0JMQwYfrc801fDt8meAe2t8.png"><br><img src="http://cdn.xiamu.icu//FulvcAJfMtpQjBe5DTFyJbafrqO2.png"></p><h2 id="配置多个域名对应同一个资源文件"><a href="#配置多个域名对应同一个资源文件" class="headerlink" title="配置多个域名对应同一个资源文件"></a>配置多个域名对应同一个资源文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">server &#123;<br>    listen       80;<br>    server_name  www.xiamu.icu; <span class="hljs-comment"># 第一个域名, 这开始找, 如果下面所有的域名都没有匹配上, 就使用这个域名的资源</span><br>    location / &#123;<br>        root   /www/www;<br>        index  index.html index.htm;<br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br><br>server &#123;<br>    listen       80;<br>    server_name  vod.xiamu.icu vod1.xiamu.icu; <span class="hljs-comment"># 多个域名, 中间使用空格分隔开</span><br>    location / &#123;<br>        root   /www/vod;<br>        index  index.html index.htm;<br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以发现 vod.xiamu.icu 和 vod1.xiamu.icu 这两个域名都可以访问到 void 的资源,<br>但是 void2.xiamu.icu, 访问的是 www 资源, 没有配置的域名会从第一个开始往下找, 如果没有找到, 就使用第一个域名对应的资源<br><img src="http://cdn.xiamu.icu//FpQWnDNXWq4KxMH4teOj9V5oGH7B.png"><br><img src="http://cdn.xiamu.icu//FqrMwLoK2D5V9Ej9L57pDi5XtkaR.png"><br><img src="http://cdn.xiamu.icu//FvhxtwfMVojKz2mOP353K_vjSrwV.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">server_name  *.xiamu.icu;<br><span class="hljs-comment"># *表示通配符, 除了www的开头的, 都会被匹配到vod文件下的资源</span><br><br>server_name  www.xiamu.*;<br><span class="hljs-comment"># 通配符的后匹配, 除了.icu结尾的, 都会被匹配到vod文件下的资源</span><br><br>hosts文件修改成(注意有www)<br>192.168.1.100 www.xiamu.com<br>192.168.1.100 www.xiamu.net<br>192.168.1.100 www.xiamu.org<br><br><br></code></pre></td></tr></table></figure><p>后缀匹配:<br><img src="http://cdn.xiamu.icu//Fs-WLgB9VcZszZmv-MNdKyudtStE.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">server_name  ~^[0-9]+\.xiamu\.icu$;<br><span class="hljs-comment"># 这个域名的后缀必须是购买的域名才行, 要经过阿里云服务器云解析之后的后缀</span><br></code></pre></td></tr></table></figure><p>正则表达式匹配:<br><img src="http://cdn.xiamu.icu//FjHFObRU495CKCyf3SzHfoe2mGC4.png"></p><h2 id="反向代理到外网与内网主机的配置"><a href="#反向代理到外网与内网主机的配置" class="headerlink" title="反向代理到外网与内网主机的配置"></a>反向代理到外网与内网主机的配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 反向代理到外网</span><br>server &#123;<br>        listen       80;<br>        server_name  localhost;<br>        location / &#123;<br>             proxy_pass http://www.atguigu.com;<br>    <span class="hljs-comment"># proxy_pass 注意这里配置的是proxy_pass, 就不需要再配置root, 和index了</span><br>    <span class="hljs-comment">#        root   /www/www;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br>    &#125;<br><br><span class="hljs-comment"># 这样访问192.168.1.101, 就会跳转到http://www.atguigu.com的页面</span><br><span class="hljs-comment"># 访问www.xiamu.icu, 也会跳转到http://www.atguigu.com的页面</span><br><br><br><span class="hljs-comment"># 反向代理到内网</span><br>nginx1的配置<br>location / &#123;<br>    proxy_pass http://192.168.1.102;<br>&#125;<br><br>nginx2的配置<br>location / &#123;<br>    root   html;<br>    index  index.html index.htm;<br>&#125;<br>会被192.168.1.102代理<br><br></code></pre></td></tr></table></figure><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx1配置</span><br>upstream httpds &#123;<br>    server 192.168.1.102:80;<br>    server 192.168.1.103:80;<br>&#125;<br><br>server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location / &#123;<br>         proxy_pass http://httpds;<br><span class="hljs-comment">#        root   /www/www;</span><br><span class="hljs-comment">#        index  index.html index.htm;</span><br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"># nginx2配置</span><br>server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location / &#123;<br>        root   html;<br>        index  index.html index.htm;<br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment"># nginx3配置</span><br>server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location / &#123;<br>        root   html;<br>        index  index.html index.htm;<br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment"># 负载均衡就如同男人脚踏两只船, 需要对每一边都雨露均沾</span><br>192.168.1.101 =&gt; 192.168.1.102<br>            =&gt; 192.168.1.103<br></code></pre></td></tr></table></figure><h2 id="基于反向代理的负载均衡"><a href="#基于反向代理的负载均衡" class="headerlink" title="基于反向代理的负载均衡"></a>基于反向代理的负载均衡</h2><h3 id="负载均衡之权重-down-backup"><a href="#负载均衡之权重-down-backup" class="headerlink" title="负载均衡之权重, down, backup"></a>负载均衡之权重, down, backup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># down：表示当前的server暂时不参与负载</span><br><span class="hljs-comment"># weight：默认为1.weight越大，负载的权重就越大。</span><br><span class="hljs-comment"># backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。</span><br><br><span class="hljs-comment"># nginx1</span><br>upstream httpds &#123;<br>    server 192.168.1.102 weight=8 down;<br>    server 192.168.1.103 weight=2;<br>    server 192.168.1.104 weight=1 backup;<br>&#125;<br>server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location / &#123;<br>         proxy_pass http://httpds;<br><span class="hljs-comment">#        root   /www/www;</span><br><span class="hljs-comment">#        index  index.html index.htm;</span><br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"># nginx2, nginx3, nginx4这三个配置一样</span><br>server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location / &#123;<br>        root   html;<br>        index  index.html index.htm;<br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>轮询<br>默认情况下使用轮询方式，逐一转发，这种方式适用于无状态请求。<br>weight(权重)<br> 指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。<br> ip_hash<br>根据客户端的 ip 地址转发同一台服务器，可以保持回话。<br>least_conn<br>最少连接访问<br>url_hash<br>根据用户访问的 url 定向转发请求<br>fair<br>根据后端服务器响应时间转发请求</p><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><p><img src="http://cdn.xiamu.icu//FjvSpaPZkYNrxOBLKinFkz3TwElM.png"></p><p>下载 tomcat<br><a href="https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-7-on-centos-7-via-yum">https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-7-on-centos-7-via-yum</a></p><p>然后在 192.168.1.104 中部署一个项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx1</span><br>    server &#123;<br>        listen       80;<br>        server_name  localhost;<br>        location / &#123;<br>             proxy_pass http://192.168.1.104:8080/admin/; <span class="hljs-comment"># 注意格式, 最后面需要一个/</span><br>    <span class="hljs-comment">#        root   /www/www;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br>    &#125;<br><br><br>这样可以通过http://192.168.1.101/访问到http://192.168.1.104:8080/admin/<br>接着删除192.168.1.104下的静态资源js, css, images, fonts<br>再次访问的页面就不会有css等静态资源<br>我们需要把这些静态资源上传到192.168.1.101的/usr/local/nginx/html目录下<br>[root@xiamu01 html]<span class="hljs-comment"># ls</span><br>50x.html  css  fonts  images  index1.html  index.html  js<br><br><br><span class="hljs-comment"># 修改nginx1的配置, 再次访问192.168.1.101, 就有静态资源了</span><br>    server &#123;<br>        listen       80;<br>        server_name  localhost;<br>        location / &#123;<br>             proxy_pass http://192.168.1.104:8080/admin/;<br>    <span class="hljs-comment">#        root   /www/www;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>        &#125;<br>        location /css &#123;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br>        location /js &#123;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br>        location /fonts &#123;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br>        location /images &#123;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br>    &#125;<br><br></code></pre></td></tr></table></figure><p>使用正则表达式配置静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location / &#123;<br>         proxy_pass http://192.168.1.104:8080/admin/;<br><span class="hljs-comment">#        root   /www/www;</span><br><span class="hljs-comment">#        index  index.html index.htm;</span><br>    &#125;<br>    location ~*/(css|js|fonts|images) &#123;<br>         root html;<br>         index index.html index.htm;<br>    &#125;<br>    error_page   500 502 503 504  /50x.html;<br>    location = /50x.html &#123;<br>        root   html;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>伪静态配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">location / &#123;<br>     rewrite ^/2.html$  /hello?pageNum=2 <span class="hljs-built_in">break</span>;<br>     proxy_pass http://192.168.1.104:8888;<br>&#125;<br><br>http://192.168.1.101/hello?pageNum=2 =&gt; http://192.168.1.101/2.html<br><br><br>location / &#123;<br>     rewrite ^/([0-9]+).html$  /hello?pageNum=<span class="hljs-variable">$1</span> <span class="hljs-built_in">break</span>; <span class="hljs-comment"># $1是第一个参数, $2是第二个参数...</span><br>     proxy_pass http://192.168.1.104:8888;<br>&#125;<br>使用正则表达式匹配任意数字<br>...<br>http://192.168.1.101/hello?pageNum=3 =&gt; http://192.168.1.101/3.html<br>...<br>http://192.168.1.101/hello?pageNum=10 =&gt; http://192.168.1.101/10.html<br>...<br><br><br>location / &#123;<br>     rewrite ^/([0-9]+).html$  /hello?pageNum=<span class="hljs-variable">$1</span> redirect;<br>     proxy_pass http://192.168.1.104:8888;<br>&#125;<br><br>http://192.168.1.101/7.html =&gt; http://192.168.1.101/hello?pageNum=7<br></code></pre></td></tr></table></figure><p>UrlRewrite<br> rewrite 语法格式及参数语法:<br> rewrite 是实现 URL 重写的关键指令，根据 regex (正则表达式)部分内容，<br>重定向到 replacement，结尾是 flag 标记。<br>rewrite <regex> <replacement> [flag];<br>关键字 正则 替代内容 flag 标记<br>关键字：其中关键字 error_log 不能改变<br>正则：perl 兼容正则表达式语句进行规则匹配<br>替代内容：将正则匹配的内容替换成 replacement<br>flag 标记：rewrite 支持的 flag 标记<br>rewrite 参数的标签段位置：<br>server,location,if<br>flag 标记说明：<br>last #本条规则匹配完成后，继续向下匹配新的 location URI 规则<br>break #本条规则匹配完成即终止，不再匹配后面的任何规则<br>redirect #返回 302 临时重定向，浏览器地址会显示跳转后的 URL 地址<br>permanent #返回 301 永久重定向，浏览器地址栏会显示跳转后的 URL 地址</p><h2 id="网关服务器"><a href="#网关服务器" class="headerlink" title="网关服务器"></a>网关服务器</h2><p>应用服务器防火墙配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">开启防火墙<br>systemctl start firewalld<br>重启防火墙<br>systemctl restart firewalld<br>重载规则<br>firewall-cmd --reload<br>查看已配置规则<br>firewall-cmd --list-all<br>指定端口和ip访问<br>firewall-cmd --permanent --add-rich-rule=<span class="hljs-string">&quot;rule family=&quot;</span>ipv4<span class="hljs-string">&quot; source address=&quot;</span>192.168.1.101<span class="hljs-string">&quot;</span><br><span class="hljs-string">port protocol=&quot;</span>tcp<span class="hljs-string">&quot; port=&quot;</span>8080<span class="hljs-string">&quot; accept&quot;</span><br>移除规则<br>firewall-cmd --permanent --remove-rich-rule=<span class="hljs-string">&quot;rule family=&quot;</span>ipv4<span class="hljs-string">&quot; source</span><br><span class="hljs-string">address=&quot;</span>192.168.1.101<span class="hljs-string">&quot; port port=&quot;</span>8080<span class="hljs-string">&quot; protocol=&quot;</span>tcp<span class="hljs-string">&quot; accept&quot;</span><br><br>网关配置<br>upstream httpds &#123;<br>    server 192.168.1.102 weight=8 down;<br>    <span class="hljs-comment">#server 192.168.1.103 weight=2;</span><br>    server 192.168.1.104:8888 weight=1 backup;<br>&#125;<br><br>server &#123;<br>    listen       80;<br>    server_name  localhost;<br>    location / &#123;<br>         rewrite ^/([0-9]+).html$  /hello?pageNum=<span class="hljs-variable">$1</span> <span class="hljs-built_in">break</span>;<br>         proxy_pass http://httpds;<br><span class="hljs-comment">#        proxy_pass http://192.168.1.104:8888;</span><br><span class="hljs-comment">#        proxy_pass http://192.168.1.104:8080/admin/;</span><br><span class="hljs-comment">#        root   /www/www;</span><br><span class="hljs-comment">#        index  index.html index.htm;</span><br>    &#125;<br><br></code></pre></td></tr></table></figure><h2 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#valid_referers none | blocked | server_names | strings ....;</span><br><span class="hljs-comment"># none， 检测 Referer 头域不存在的情况。</span><br><span class="hljs-comment"># blocked，检测 Referer 头域的值被防火墙或者代理服务器删除或伪装的情况。这种情况该头域的值不以</span><br><span class="hljs-comment"># “http://” 或 “https://” 开头。</span><br><span class="hljs-comment"># server_names ，设置一个或多个 URL ，检测 Referer 头域的值是否是这些 URL 中的某一个。</span><br><span class="hljs-comment"># 在需要防盗链的location中配置</span><br><br>valid_referers 192.168.44.101;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$invalid_referer</span>) &#123;<br><span class="hljs-built_in">return</span> 403;<br>&#125;<br><br><br><br><br>location ~*/(css|js|fonts|images) &#123;<br>             valid_referers 192.168.1.101;<br>             <span class="hljs-keyword">if</span> (<span class="hljs-variable">$invalid_referer</span>) &#123;<br>             <span class="hljs-built_in">return</span> 403;<br>             &#125;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br><br><br><br>location ~*/(css|js|fonts|images) &#123;<br>             valid_referers none 192.168.1.101;<br>             <span class="hljs-keyword">if</span> (<span class="hljs-variable">$invalid_referer</span>) &#123;<br>             <span class="hljs-built_in">return</span> 403;<br>             &#125;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br><br><br><span class="hljs-comment"># valid_referers none 192.168.1.101;</span><br><span class="hljs-comment"># 两种访问的方式</span><br><span class="hljs-comment"># 没有referer的时候可以访问资源</span><br><span class="hljs-comment"># 有referer并且域名是等于配置(这里演示只是配置了ip192.168.1.101)的相同可以访问资源</span><br></code></pre></td></tr></table></figure><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装curl</span><br>[root@xiamu04 admin]<span class="hljs-comment"># yum install curl</span><br><br><span class="hljs-comment"># 当前设置的, 只有referer = none 或者 referer = 192.168.1.101的能够访问</span><br>valid_referers none 192.168.1.101;<br><br><span class="hljs-comment"># 使用curl测试</span><br>[root@xiamu04 admin]<span class="hljs-comment"># curl http://192.168.1.101</span><br>&lt;img src=<span class="hljs-string">&quot;images/photos/user-avatar.png&quot;</span>&gt;<br>[root@xiamu04 admin]<span class="hljs-comment"># curl -I http://192.168.1.101</span><br>HTTP/1.1 200 OK<br>Server: nginx/1.22.1<br>Date: Fri, 28 Oct 2022 11:47:22 GMT<br>Content-Type: text/html<br>Content-Length: 42<br>Connection: keep-alive<br>Accept-Ranges: bytes<br>ETag: W/<span class="hljs-string">&quot;42-1666955317000&quot;</span><br>Last-Modified: Fri, 28 Oct 2022 11:08:37 GMT<br><br><span class="hljs-comment"># 带引用</span><br>[root@xiamu04 admin]<span class="hljs-comment"># curl -I http://192.168.1.101/images/photos/user-avatar.png</span><br>HTTP/1.1 200 OK<br>Server: nginx/1.22.1<br>Date: Fri, 28 Oct 2022 11:49:32 GMT<br>Content-Type: image/png<br>Content-Length: 15649<br>Last-Modified: Thu, 27 Oct 2022 08:55:50 GMT<br>Connection: keep-alive<br>ETag: <span class="hljs-string">&quot;635a4796-3d21&quot;</span><br>Accept-Ranges: bytes<br><br>[root@xiamu04 admin]<span class="hljs-comment"># curl -e &quot;http://atguigu.com&quot; -I http://192.168.1.101/images/photos/user-avatar.png</span><br>HTTP/1.1 403 Forbidden<br>Server: nginx/1.22.1<br>Date: Fri, 28 Oct 2022 11:49:43 GMT<br>Content-Type: text/html<br>Content-Length: 153<br>Connection: keep-alive<br><br><br></code></pre></td></tr></table></figure><h2 id="盗链资源返回页面或者提示图片"><a href="#盗链资源返回页面或者提示图片" class="headerlink" title="盗链资源返回页面或者提示图片"></a>盗链资源返回页面或者提示图片</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 盗链之后返回html</span><br>location ~*/(css|js|fonts|images) &#123;<br>             <span class="hljs-comment">#valid_referers 192.168.1.101;</span><br>             valid_referers none 192.168.1.101;<br>             <span class="hljs-keyword">if</span> (<span class="hljs-variable">$invalid_referer</span>) &#123;<br>             <span class="hljs-built_in">return</span> 401;<br>             &#125;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br>        error_page   401  /401.html;<br>        location = /401.html &#123;<br>            root   html;<br>        &#125;<br><br><span class="hljs-comment"># 盗链之后返回png图片</span><br>        location ~*/(css|js|fonts|images) &#123;<br>             <span class="hljs-comment">#valid_referers 192.168.1.101;</span><br>             valid_referers none 192.168.1.101;<br>             <span class="hljs-keyword">if</span> (<span class="hljs-variable">$invalid_referer</span>) &#123;<br>             rewrite ^/   /images/x.png <span class="hljs-built_in">break</span>;<br>             <span class="hljs-comment">#return 401;</span><br>             &#125;<br>             root html;<br>             index index.html index.htm;<br>        &#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="安装-Keepalived"><a href="#安装-Keepalived" class="headerlink" title="安装 Keepalived"></a>安装 Keepalived</h2><p>常见报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">configure: error:<br>  !!! OpenSSL is not properly installed on your system. !!!<br>  !!! Can not include OpenSSL headers files.            !!!<br>[root@xiamu01 keepalived-2.2.7]<span class="hljs-comment"># yum install openssl-devel</span><br><br><br>--&gt; 正在检查事务<br>---&gt; 软件包 mariadb-libs.x86_64.1.5.5.68-1.el7 将被 安装<br>--&gt; 正在处理依赖关系 libmysqlclient.so.18(libmysqlclient_18)(64bit)，它被软件包 1:net-snmp-agent-libs-5.7.2-49.el7_9.2.x86_64 需要<br>--&gt; 正在处理依赖关系 libmysqlclient.so.18()(64bit)，它被软件包 1:net-snmp-agent-libs-5.7.2-49.el7_9.2.x86_64 需要<br>--&gt; 解决依赖关系完成<br>错误：软件包：1:net-snmp-agent-libs-5.7.2-49.el7_9.2.x86_64 (updates)<br>          需要：libmysqlclient.so.18()(64bit)<br>错误：软件包：1:net-snmp-agent-libs-5.7.2-49.el7_9.2.x86_64 (updates)<br>          需要：libmysqlclient.so.18(libmysqlclient_18)(64bit)<br> 您可以尝试添加 --skip-broken 选项来解决该问题<br> 您可以尝试执行：rpm -Va --nofiles --nodigest<br>[root@xiamu01 opt]<span class="hljs-comment"># wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-libs-compat-5.7.25-1.el7.x86_64.rpm</span><br>[root@xiamu01 opt]<span class="hljs-comment"># rpm -ivh mysql-community-libs-compat-5.7.25-1.el7.x86_64.rpm</span><br><br></code></pre></td></tr></table></figure><p>yum 安装 Keepalived</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx1</span><br>[root@xiamu01 ~]<span class="hljs-comment"># yum install keepalived</span><br><br>配置<br>使用yum安装后配置文件在<br>/etc/keepalived/keepalived.conf<br><br>! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>   router_id lb111<br>&#125;<br><br>vrrp_instance atguigu &#123;<br>    state MASTER<br>    interface ens33<br>    virtual_router_id 51<br>    priority 100<br>    advert_int 1<br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 1111<br>    &#125;<br>    virtual_ipaddress &#123;<br>        192.168.1.200<br>    &#125;<br>&#125;<br><br><br><br><span class="hljs-comment"># nginx1_backup</span><br>[root@xiamu01 ~]<span class="hljs-comment"># yum install keepalived</span><br><br>! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>   router_id lb110<br>&#125;<br><br>vrrp_instance VI_1 &#123;<br>    state BACKUP<br>    interface ens33<br>    virtual_router_id 51<br>    priority 50<br>    advert_int 1<br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 1111<br>    &#125;<br>    virtual_ipaddress &#123;<br>        192.168.1.200<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="http://cdn.xiamu.icu//FhAq9aBoIeDahKZEYWzCzabUx2GK.png"></p><p>查看 ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>[root@xiamu01 ~]<span class="hljs-comment"># ip addr</span><br>2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:50:56:3e:9d:2e brd ff:ff:ff:ff:ff:ff<br>    inet 192.168.1.101/24 brd 192.168.1.255 scope global ens33<br>       valid_lft forever preferred_lft forever<br>    inet 192.168.1.200/32 scope global ens33<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::250:56ff:fe3e:9d2e/64 scope <span class="hljs-built_in">link</span><br>       valid_lft forever preferred_lft forever<br><br></code></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx1 和 nginx1_backup</span><br>[root@xiamu01 ~]<span class="hljs-comment"># systemctl start keepalived</span><br>[root@xiamu01 ~]<span class="hljs-comment"># systemctl stop firewalld</span><br>[root@xiamu01 ~]<span class="hljs-comment"># systemctl start nginx</span><br></code></pre></td></tr></table></figure><p>使用 192.168.1.200 也能够访问到页面了<br><img src="http://cdn.xiamu.icu//FgFqVpxV6aXIeIirz1f_LTjZ-ysA.png"></p><h2 id="Https-证书配置"><a href="#Https-证书配置" class="headerlink" title="Https 证书配置"></a>Https 证书配置</h2><p>不安全的 http 协议<br><img src="http://cdn.xiamu.icu//FnRCNeqNJnO6JQOLscUph1SYppuN.png"></p><p>非对称加密算法<br><img src="http://cdn.xiamu.icu//Fp5LR9tNfjq2aL8SrWSWkg9NKtgn.png"><br>另一种同样不安全的非对称加密算法<br><img src="http://cdn.xiamu.icu//FutXjBdwlND37pUre1fazSoUQpfJ.png"></p><p>CA 机构参与保证互联网安全<br><img src="http://cdn.xiamu.icu//FlWOtTsvPX0Ye8LdRRZwP97Mwz_a.png"><br>查看操作系统的证书<br>cmd &#x3D;&gt; certmgr.msc</p><h2 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h2><p>openssl 包含：SSL 协议库、应用程序以及密码算法库</p><h2 id="自签名"><a href="#自签名" class="headerlink" title="自签名"></a>自签名</h2><p>openssl</p><h2 id="图形化工具-XCA"><a href="#图形化工具-XCA" class="headerlink" title="图形化工具 XCA"></a>图形化工具 XCA</h2><p>下载地址 <a href="https://www.hohnstaedt.de/xca/index.php/download">https://www.hohnstaedt.de/xca/index.php/download</a></p><h2 id="CA-签名"><a href="#CA-签名" class="headerlink" title="CA 签名"></a>CA 签名</h2><h2 id="域名的申请"><a href="#域名的申请" class="headerlink" title="域名的申请"></a>域名的申请</h2><p>安装 lnmp<br><a href="https://oneinstack.com/">https://oneinstack.com/</a></p><p>bbs 论坛<br><a href="https://discuz.com/">https://discuz.com/</a></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理笔记</title>
    <link href="/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/"/>
    <url>/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="没啥用的网课"><a href="#没啥用的网课" class="headerlink" title="没啥用的网课"></a>没啥用的网课</h2><p>冯·诺伊曼 : 二进制, 五大功能, 存储控制<br>翻墙软件 : VPN<br>远程桌面<br>开源操作系统<br>虚拟化: vmware<br>编辑器: vim</p><p><img src="http://cdn.xiamu.icu//FvqmaXfZ0WZFslFx9VgDkqS0uz99.png"></p><p><img src="http://cdn.xiamu.icu//Fi8_wZHnXf6GuwSgYhFf7I6j3RGY.png"></p><p><img src="http://cdn.xiamu.icu//FjizkZn9aWGB0mm0LR-VhPHy2BQv.png"></p><p><img src="http://cdn.xiamu.icu//FoImHBvNUsTH8wNA3xQQpv2EpQi-.png"></p><h2 id="考试复习方向"><a href="#考试复习方向" class="headerlink" title="考试复习方向"></a>考试复习方向</h2><blockquote><p>1.编译原理实验环境：参见资料中的实验指导一。 2.模块化的 C 语言程序设计：参见资料中的实验指导二。 3.编译器组成&#x2F;结构：前端（词法分析、语法分析、语义处理）、后端（中间代码生成、代码优化、运行时存储器组织、目标代码生成）、公共模块（符号表、错误处理），对每个功能模块的理解。<br>4.PL&#x2F;0 语言：基本概念，具备使用 PL&#x2F;0 语言编写简单应用程序的能力。 5.文法与语言中的概念：文法、语言、句子、句型、推导、规约、语法树、二义性文法、回溯、无穷语言与有穷文法（递归文法）、文法等价-&gt;文法改造-&gt;文法分类。 6.文法分类，不同语法分析对文法的要求：短语文法（0）、上下文有关文法（1）、上下文无关文法（2）、正规文法（3）；自顶向下语法分析需要 LL（1）文法，自底向上语法分析需要 2 型文法；对不同类型文法的识别；简单文法的句子推导证明。 7.词法分析：理论基础（符号的连接、或者、闭包运算、正则式），对正则式的识别能力，对 NFA、DFA 的理解与应用（顶点集的空弧闭包、顶点集的 a 弧转换）。 8.自顶向下语法分析：<br>概念与基本思路；First 集、Follow 集计算；<br>LL(1)文法的判断；<br>LL（1）文法的改造；<br>编写递归下降 LL(1)语法分析程序。 9.自底向上语法分析：概念与基本思路；<br>根据语法树反向构造句子在符号栈中的移进-规约过程；<br>利用 Action 和 Goto 表构造句子的状态栈变化过程；<br>文法-&gt;扩广文法-&gt;非终结符的左文-&gt;推导式的 LR(0)左文方程-&gt;NFA-&gt;DFA-&gt;生成 Action 和 Goto 表。 10.语义处理：基本概念（数据类型、强语言与弱语言、函数依赖与循环依赖、作用域）；语义分析的错误可能；语法树、抽象语法树、前缀中缀后缀、波兰式、逆波兰式、四元组、三元组、间接三元组等；符号表。 11.运行时存储组织：栈与堆的应用；参数传递。 12.代码优化：窥孔优化（修身）、局部优化（齐家）、循环优化（治国）、全局优化（平天下）；指令调度与循环展开。 13.目标代码生成：目标代码的一般形式；指令选择、寄存器选择、指令调度的关系。</p></blockquote><h2 id="LL-1-语法的判断"><a href="#LL-1-语法的判断" class="headerlink" title="LL(1)语法的判断"></a>LL(1)语法的判断</h2><blockquote><p>LL(1)文法是自上而下的分析方法。</p></blockquote><p><img src="http://cdn.xiamu.icu//Fj5wumO00_u6v-_n8UXGthmeZoYi.jpeg"></p><h2 id="LR-0-语法的分析"><a href="#LR-0-语法的分析" class="headerlink" title="LR(0)语法的分析"></a>LR(0)语法的分析</h2><blockquote><p>与 LL（1）相对，LR(0)文法是下而上的分析方法，从左分析，从栈顶归约。</p></blockquote><p><img src="http://cdn.xiamu.icu//FprYa_7xKcuIBygVYYheO_xlGwtm.jpeg"><br><img src="http://cdn.xiamu.icu//Fnb7vJTrxXrPUWM1WSTM3QiWslTX.jpeg"></p><h2 id="三个练习题"><a href="#三个练习题" class="headerlink" title="三个练习题"></a>三个练习题</h2><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题 1"></a>例题 1</h3><p>分析 1+(2+3)<br><img src="http://cdn.xiamu.icu//FlrLqjc6N6KQNyNUyTHKfweB0e6U.png"><br><img src="http://cdn.xiamu.icu//FqLjOeMtZfGxWvtoxEsCRqz-uWQ8.png"><img src="http://cdn.xiamu.icu//FtCNTkrWvyVrRuMZEY15wJr2Q_JY.jpeg"></p><h3 id="例题-2"><a href="#例题-2" class="headerlink" title="例题 2"></a>例题 2</h3><p>分析(a+b)<br><img src="http://cdn.xiamu.icu//FkKq3l36iY0ag4ABZewa8VeWkUZ7.jpeg"><br><img src="http://cdn.xiamu.icu//FtCNTkrWvyVrRuMZEY15wJr2Q_JY.jpeg"></p><h3 id="例题-3"><a href="#例题-3" class="headerlink" title="例题 3"></a>例题 3</h3><p>分析 a*(b+c)<br><img src="http://cdn.xiamu.icu//Fl-F--vxc-GmjC-o9eJq-R3KG1Pj.jpeg"><br><img src="http://cdn.xiamu.icu//Fmt3pykqrpjPdrxh_lcQ36Rlynak.png"></p><h2 id="临时抱佛脚"><a href="#临时抱佛脚" class="headerlink" title="临时抱佛脚"></a>临时抱佛脚</h2><blockquote><p>看的这个速成视频<br>学习什么的不重要, 主要是妹子声音好听</p></blockquote><h3 id="1-编译原理求语法树的短语直接短语等等"><a href="#1-编译原理求语法树的短语直接短语等等" class="headerlink" title="1 编译原理求语法树的短语直接短语等等"></a>1 编译原理求语法树的短语直接短语等等</h3><p>**二义性: **如果两种推导方式画出的树不同, 则说明该文法有二义性<br><img src="http://cdn.xiamu.icu//FiofxN7XLsFWs7w_Jq4nMkIqw94R.png"><br><img src="http://cdn.xiamu.icu//FtKMeIevQnIKJT_r5ryVKoQbkRnU.png"></p><p>一道练习题<br><img src="http://cdn.xiamu.icu//FjdV8sti2IGP3Am8u23ZuVuifrzP.png"><br>答案<br><img src="http://cdn.xiamu.icu//FqpJko2RsrsHbYRQlQSEs1mzzZlJ.png"></p><h3 id="2-编译原理消除左递归消除回溯"><a href="#2-编译原理消除左递归消除回溯" class="headerlink" title="2 编译原理消除左递归消除回溯"></a>2 编译原理消除左递归消除回溯</h3><h3 id="3-编译原理如何求-first-集和-follow-集"><a href="#3-编译原理如何求-first-集和-follow-集" class="headerlink" title="3 编译原理如何求 first 集和 follow 集"></a>3 编译原理如何求 first 集和 follow 集</h3><h3 id="4-编译原理构造-LL-1-文法完整分析过程"><a href="#4-编译原理构造-LL-1-文法完整分析过程" class="headerlink" title="4 编译原理构造 LL(1)文法完整分析过程"></a>4 编译原理构造 LL(1)文法完整分析过程</h3><h3 id="5-编译原理构造优先关系表"><a href="#5-编译原理构造优先关系表" class="headerlink" title="5 编译原理构造优先关系表"></a>5 编译原理构造优先关系表</h3><p>妈的不会</p><h3 id="6-编译原理构造优先关系图"><a href="#6-编译原理构造优先关系图" class="headerlink" title="6 编译原理构造优先关系图"></a>6 编译原理构造优先关系图</h3><p>妈的不会</p><h3 id="7-编译原理构造-LR-0-分析表-包含构建项目规范族）"><a href="#7-编译原理构造-LR-0-分析表-包含构建项目规范族）" class="headerlink" title="7 编译原理构造 LR(0)分析表(包含构建项目规范族）"></a>7 编译原理构造 LR(0)分析表(包含构建项目规范族）</h3><p><img src="http://cdn.xiamu.icu//FtdstuPN94uaEjoDcFwurWZLUg6L.png"><br><img src="http://cdn.xiamu.icu//FoXzqTrcxrIsUaFxtWJsAahQEp7U.png"></p><h3 id="12-编译原理根据五元组构建状态转换图即状态转换矩阵"><a href="#12-编译原理根据五元组构建状态转换图即状态转换矩阵" class="headerlink" title="12 编译原理根据五元组构建状态转换图即状态转换矩阵"></a>12 编译原理根据五元组构建状态转换图即状态转换矩阵</h3><p><img src="http://cdn.xiamu.icu//FmX4vLyztoiBhgHIakgfh3vCTTMW.png"><br><img src="http://cdn.xiamu.icu//FnvMZhWPXN60xns7zbZ7ZNXrjoel.png"><br><img src="http://cdn.xiamu.icu//Fpx81t7ds_EnXihrSADG05jHumhG.png"></p><h2 id="19-届的复习资料"><a href="#19-届的复习资料" class="headerlink" title="19 届的复习资料"></a>19 届的复习资料</h2><p>自行下载看吧<br><a href="https://www.yuque.com/attachments/yuque/0/2023/docx/33666212/1677762164228-cd49a4d2-2ee3-4ac5-96f0-0f01fc87a3fb.docx?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/docx/33666212/1677762164228-cd49a4d2-2ee3-4ac5-96f0-0f01fc87a3fb.docx%22,%22name%22:%22%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.docx%22,%22size%22:172922,%22ext%22:%22docx%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22u325a9e67-6aad-489b-82f5-c8b43137727%22,%22taskType%22:%22upload%22,%22type%22:%22application/vnd.openxmlformats-officedocument.wordprocessingml.document%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22ud8d3a5df%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">编译原理.docx</a><a href="https://www.yuque.com/attachments/yuque/0/2023/docx/33666212/1677762164280-8b13bc30-980c-4a9f-a791-42df5503e225.docx?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2023/docx/33666212/1677762164280-8b13bc30-980c-4a9f-a791-42df5503e225.docx%22,%22name%22:%22%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99.docx%22,%22size%22:270076,%22ext%22:%22docx%22,%22source%22:%22%22,%22status%22:%22done%22,%22download%22:true,%22taskId%22:%22ua9bce26d-1e4a-4d0d-9d4e-381718fc182%22,%22taskType%22:%22upload%22,%22type%22:%22application/vnd.openxmlformats-officedocument.wordprocessingml.document%22,%22__spacing%22:%22both%22,%22mode%22:%22title%22,%22id%22:%22ud2e68ade%22,%22margin%22:%7B%22top%22:true,%22bottom%22:true%7D,%22card%22:%22file%22%7D">编译原理复习资料.docx</a></p><h2 id="19-届的补考题"><a href="#19-届的补考题" class="headerlink" title="19 届的补考题"></a>19 届的补考题</h2><p><img src="http://cdn.xiamu.icu//FmMKPRkNtBiFmkvNpi5rnw7_6vkU.jpeg"></p><ol><li>何谓编译器? 编译器应由那几部分组成? 简述各部分作用<br>答案编译器就是将“一种语言（通常为<a href="https://baike.baidu.com/item/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80/299113?fromModule=lemma_inlink">高级语言</a>）”翻译为“另一种语言（通常为低级语言）”的程序</li></ol><p>编译器可分为前端、后端。<br>前端：词法分析、语法分析（自顶向下、自底向上）、语义处理等；<br>后端：运行时存储组织、代码优化、目标代码生成等。</p><ol start="2"><li><p>简述 Linux 操作系统下 C 语言程序的编译过程<br>答案预处理<br>编译<br>汇编<br>链接</p></li><li><p>何谓文法? 举例说明文法的分类<br>答案文法是用来定义语言的规则的，如一般自然语言的句子的结构是：<br>名词短语+动词短语+句号<br>动词短语&#x3D;动词+名词短语<br>文法分 4 种<br>0 型文法: 没有约束, 是个文法就是 0 型文法<br>1 型文法(上下文有关): 右边的长度大于左边<br>2 型文法(上下文无关): 左边必须为非终结符<br>3 型文法(正规文法):<br>设 G &#x3D; (VN,VT,P, S), 若 P 中的每一个产生式的形式都是 A→aB 或 A→a, 其中 A 和 B 都是非终结符, a∈VT*</p></li></ol><p><img src="http://cdn.xiamu.icu//Fp-ISAid1bL_buIKRdvi-g_4w5jy.jpeg"><br><img src="http://cdn.xiamu.icu//FtXNgtDOHgULhWiyOsF2YVpUzwv5.png"></p><ol start="5"><li>设文法 G 为: S→aS|bS|c. 请设计其 LR(0)分析表, 请给出输入串 ababc 的分析过程</li></ol><h2 id="20-届期中考试题"><a href="#20-届期中考试题" class="headerlink" title="20 届期中考试题"></a>20 届期中考试题</h2><p>一、 单选题 （共 20 题，100 分）<br><strong>1、在 Linux 下，将 C 语言源程序编译为可执行程序，可使用命令（ ）</strong><br>**（5.0） **<br>A、 gcc<br>B、 touch<br>C、 ls<br>D、 ar<br>正确答案正确答案：A<br>解析：</p><p><strong>2、在 C 语言程序设计中，用来定义功能函数原型、声明数据接口的文件是（ ）</strong><br>**（5.0） **<br>A、 _.c 文件<br>B、 _.h 文件<br>C、 _.cpp 文件<br>D、 _.exe 文件<br>正确答案正确答案：B<br>解析：</p><p><strong>3、从编译的阶段来看，词法分析应属于（ ）</strong><br>**（5.0） **<br>A、 编译的前端<br>B、 编译的中端<br>C、 编译的后端<br>D、 编译的末端</p><p>正确答案正确答案：A<br>解析：</p><p><strong>4、文法是具有“包含”关系的。下列文法中，处于最内层的文法是（ ）</strong><br>**（5.0） **<br>A、 0 型文法<br>B、 上下文有关文法<br>C、 上下文无关文法<br>D、 正规文法</p><p>正确答案正确答案：D<br>解析：</p><p><strong>已知某文法 G：</strong><br><strong>bexpr→bexpr or bterm|bterm</strong><br><strong>bterm→bterm and bfactor | bfactor</strong><br><strong>bfactor→not bfactor|(bexpr)|true |false</strong><br><strong>则以下哪个是该文法中的起始符号（ ）</strong></p><p>**（5.0） **<br>A、 bexpr<br>B、 bterm<br>C、 bfactor<br>D、 not</p><p>正确答案正确答案：A<br>解析：</p><p><strong>6、刘伟跃老师的电话号码是（ ）</strong><br>**（5.0） **<br>A、 13507440668<br>B、 13574404624<br>C、 18874445225<br>D、 18974471616</p><p>正确答案正确答案：B<br>解析：</p><p><strong>7、形如 0<em>10</em>10<em>10</em>的正则表达式，描述的语言是（ ）</strong><br>**（5.0） **<br>A、 以字符’0’、’1’构成的任意字符串。<br>B、 以字符’0’、’1’构成，以字符’0’开始和结束，包含三个字符’1’的任意字符串。<br>C、 以字符’0’、’1’构成，包含至少三个字符’1’的任意字符串。<br>D、 以字符’0’、’1’构成，有且仅有三个字符’1’的任意字符串。</p><p>正确答案正确答案：D<br>解析：</p><p><strong>8、若文法 G:S-&gt;0S1，S-&gt;01。</strong><br><strong>则 00S11 是符合文法的（ ）,000111 则是符合文法的（ ）。</strong><br>**（5.0） **<br>A、 句型、句型<br>B、 句型、句子<br>C、 句子、句型<br>D、 句子、句子</p><p>正确答案正确答案：B<br>解析： 一个句型中既可以包含终结符，又可以包含非终结符，也可能是空串。</p><p><strong>9、若文法 G：S-&gt;cAd，A-&gt;ab，A-&gt;a，在证明输入串 w&#x3D;cabd 是否符合文法时，有如下证明过程：</strong><br>**根据 S-&gt;cAd，将 S 装换为 cAd； **<br><strong>再根据 A-&gt;ab，将 cAd 装换为 cabd，从而证明 w 是符合文法的串。</strong><br><strong>则该证明过程为（ ）。</strong><br>**（5.0） **<br>A、 自上向下的推导语法分析<br>B、 自下向上的规约语法分析</p><p>正确答案正确答案：A<br>解析：</p><p><strong>10、在实现 LL(1)语法分析时，要求文法是正规文法。文法改造中的“消除左递归”，即要能将 P-&gt;Pa|b 的含左递归的文法进行改造，改造成形如（ ）的文法。</strong><br>**（5.0） **<br>A、 P-&gt;bP’，P’-&gt;aP’|ɛ<br>B、 P-&gt;aP’，P’-&gt;bP’|ɛ<br>C、 P-&gt;bP’，P’-&gt;aP’<br>D、 P-&gt;aP’，P’-&gt;bP’</p><p>正确答案正确答案：A<br>解析：</p><p><strong>11、在 Linux 系统下，若要对 C 语言程序进行静态编译（即编译时使用-static 参数），需要安装的组件是（ ）。</strong><br>**（5.0） **<br>A、 glibc-static<br>B、 mysql<br>C、 qt-devel<br>D、 libgl</p><p>正确答案正确答案：A<br>解析：</p><p><strong>12、在如下的 C 语言源程序中，识别的词法单元有（ ）个。</strong><br><strong>main()</strong><br><strong>{</strong><br><strong>int x;</strong><br><strong>x &#x3D; 1+2*3;</strong><br><strong>}</strong><br>**（5.0） **<br>A、 6<br>B、 16<br>C、 8<br>D、 18</p><p>正确答案正确答案：B<br>解析：</p><p><strong>13、在编译器设计模型中，符号表是贯穿词法分析、语法分析、语义处理、代码优化、目标代码生成等过程的公共模块，符号表中符号的唯一标识是（ ）。</strong><br>**（5.0） **<br>A、 符号名<br>B、 符号类型<br>C、 符号存储类别<br>D、 符号作用域</p><p>正确答案正确答案：A<br>解析：</p><p><strong>14、若有文法 G：S-&gt;aA|bB，aA-&gt;ab，bB-&gt;bA，则该文法是（ ）。</strong><br>**（5.0） **<br>A、 0 型文法<br>B、 1 型文法<br>C、 2 型文法<br>D、 3 型文法</p><p>正确答案正确答案：B<br>解析：</p><p><strong>15、若文法 G：S-&gt;cAd，A-&gt;ab，A-&gt;a，在证明输入串 w&#x3D;cabd 是否符合文法时：</strong><br><strong>先利用 A-&gt;ab，将 cabd 转换为 cAd；</strong><br><strong>再利用 S-&gt;cAd，将 cAd 转换为 S，从而证明输入串符合文法。</strong><br><strong>则该证明过程为（ ）。</strong></p><p>**（5.0） **<br>A、 自上而下的推导证明<br>B、 自下而上的规约证明</p><p>正确答案正确答案：B<br>解析：</p><p><strong>16、形如 a(a|b)*b 的正则表达式，表达的是（ ）。</strong><br>**（5.0） **<br>A、 由字符’a’、’b’字符构成的任意字符串<br>B、 由字符’a’、’b’字符构成，以’a’开始，’b’结束的所有字符<br>C、 由字符’a’、’b’字符构成，以’a’开始的所有字符串<br>D、 由字符’a’、’b’字符构成，以’b’结束的所有字符串</p><p>正确答案正确答案：B<br>解析：</p><p><strong>17、在如下图的 NFA 中，状态’5’的 ɛ 闭包是（ ）</strong><br><img src="http://cdn.xiamu.icu//FrryVPk0M1Rj4lJ9myFDXqJuULk4.png"><br>**（5.0） **<br>A、 集合{1,5,6,2}<br>B、 集合{5,6,2}<br>C、 集合{5,6}<br>D、 集合{5,6,2,3}</p><p>正确答案正确答案：B<br>解析：</p><p><strong>18、在如图的 NFA 中，状态集{1,2}的 a 弧转换结果为（ ）</strong><br><img src="http://cdn.xiamu.icu//FrryVPk0M1Rj4lJ9myFDXqJuULk4.png"><br>**（5.0） **<br>A、 {5,3}<br>B、 {5,3,4}<br>C、 {3,4,5,6,7,8}<br>D、 {2,3,4,5,6,7,8}</p><p>正确答案正确答案：D<br>解析：</p><p><strong>19、在进行 LL(1)语法分析时，文法中如有 A-&gt;aB，A-&gt;aCd 的规则时，需要进行提取左公因子的文法改造，即将该文法改造为（ ）。</strong><br>**（5.0） **<br>A、<br>A-&gt;aA’，<br>A’-&gt;B|Cd<br>B、<br>A-&gt;bA’，<br>A’-&gt;aA’|ɛ</p><p>正确答案正确答案：A<br>解析：</p><p><strong>20、在判断一个文法是否为 LL(1)文法时，以下描述不正确的是（ ）。</strong><br>**（5.0） **<br>A、 若存在 A-&gt;α|β 的文法，即文法定义中，存在某非终结符可以推导出多个不同句型，则需要计算 First(α)和 First(β)集合，即 A 推导出的不同句型，各句型的 First 集应该没有交集；若 A 推导出的句型存在 ɛ，则还需要计算 A 的 Follow 集合，A 推导出的句型的 First 集和 A 的 Follow 集没有交集。<br>B、 First(A)集，其实质就是，非终结符 A 所推导出的句型中，所有可能出现在句型首部的文法终结符的集合（包含 ɛ）。<br>C、 Follow(B)集，定义为：对于文法的起始符号 S，Follow(S)&#x3D;</p>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
      <tag>计算机基础课</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot</title>
    <link href="/Java/SpringBoot/"/>
    <url>/Java/SpringBoot/</url>
    
    <content type="html"><![CDATA[<h2 id="创建-SpringBoot-项目"><a href="#创建-SpringBoot-项目" class="headerlink" title="创建 SpringBoot 项目"></a>创建 SpringBoot 项目</h2><p>在某些时候<a href="https://start.spring.io/">https://start.spring.io</a>这个网站访问不了, 同样 idea 也因为开 VPN 会莫名抽风, 而导致创建不了 SpringBoot 项目, 这就会显得非常蛋疼<br>以下是针对于开了 VPN 抽风的情况, 当然也可以通过更换仓库地址, 把 start.spring.io 换成 start.aliyun.io<br>ping 也 ping 不通<br><img src="http://cdn.xiamu.icu//FlkQ5E4rmobsjKslVmSgNPURG6sF.png"><br>先查看代理的地址和端口<br><img src="http://cdn.xiamu.icu//FkPsElf0PV4vbZydr7ac1Zr7cBIB.png"><br>然后打开 idea 的 setting-Appearance&amp;Behavior - System Settings - HTTP Proxy - Manual proxy configuration, 配置好当前代理的地址和端口号, 然后点击 Check connection 测试<a href="https://start.spring.io/">https://start.spring.io</a>是否能连通, 多按测试两次按理应该会成功的<br><img src="http://cdn.xiamu.icu//FlgTpMcUb119veIuB8Q3Bnw_-4cS.png"></p><p>创建 SpringBoot, 选择 Spring Initializr, 填好对应的 Group 和 Artifact, 注意 Java 和电脑中安装的 JDK 的版本保持一致<br><img src="http://cdn.xiamu.icu//FnA3DlavnwgX6JOU473NF7zHJiaY.png"><br>然后这里可以选择一些常见的依赖例如 thymeleaf, devtools, lombok, configuration processor,<br>spring web, mysql 等等, 然后点击 Finish<br><img src="http://cdn.xiamu.icu//Fmw4CFmRHkcKwnleYF17yHKajTaI.png"><br>这样就完整的创建好的 SpringBoot 项目<br><img src="http://cdn.xiamu.icu//Fg1B4gtRgeUzBYNBJMMuehPreWgc.png"></p><h2 id="Thymeleaf"><a href="#Thymeleaf" class="headerlink" title="Thymeleaf"></a>Thymeleaf</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml">加上在maven的配置文件pom.xml中加入一下依赖引入Thymeleaf<br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-comment">&lt;!--   &lt;version&gt;2.7.4&lt;/version&gt; --&gt;</span><br><span class="hljs-comment">&lt;!--   version并不一定是这一个版本, springboot中内置了thymeleaf的版本号 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>需要在html的文件中引入xmlns:th=&quot;http://www.thymeleaf.org&quot;<br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">xmlns:th</span>=<span class="hljs-string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span>哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>获取请求域中共享数据使用$符号<br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;$&#123;link&#125;&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;www.haha.com&quot;</span>&gt;</span>去百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">&quot;@&#123;/link&#125;&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;www.haha.com&quot;</span>&gt;</span>去百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>请求域中的连接地址, 也是使用$符号, @符号时给用来拼接地址用的 th:each=&quot;num :<br>$&#123;#numbers.sequence(from, to)&#125;&quot; th:each=&quot;num : $&#123;#numbers.sequence(1,<br>users.pages)&#125;&quot; 用来创建一个数组遍历用的 @&#123;/dynamic_table(pn=$&#123;num&#125;)&#125;<br>使用小括号用来拼接参数 th:href=&quot;@&#123;&#x27;/employee/page/&#x27; + $&#123;page.prePage&#125;&#125;<br>或者使用字符串的拼接方式来写 行内写法 [[$&#123;session.loginUser.userName&#125;]]<br>在application.yaml访问路径设置路径前缀, 这样设置之后, 访问都需要带上/world 例如,<br>原先是 http://localhost:8080/ 现在是 http://localhost:8080/world server:<br>servlet: context-path: /world<br></code></pre></td></tr></table></figure><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><p>HandlerInterceptor 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.boot.interceptor;<br><br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.ModelAndView;<br><br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpSession;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 登录检查</span><br><span class="hljs-comment"> * 1. 配置好拦截器要拦截哪些请求</span><br><span class="hljs-comment"> * 2. 把这些配置放在容器中</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">HandlerInterceptor</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 目标方法执行之前</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> response</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> handler</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">preHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">requestURI</span> <span class="hljs-operator">=</span> request.getRequestURI();<br>        log.info(<span class="hljs-string">&quot;拦截的请求路径是&#123;&#125;&quot;</span>, requestURI);<br><br>        log.info(<span class="hljs-string">&quot;preHandle&#123;&#125;&quot;</span>, requestURI);<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">        也是获取请求的路径用的一个方法, 和上面的一样</span><br><span class="hljs-comment">        String servletPath = request.getServletPath();</span><br><span class="hljs-comment">        log.info(&quot;&#123;&#125;&quot;, servletPath);*/</span><br><br>        <span class="hljs-comment">// 登录检查逻辑</span><br>        <span class="hljs-type">HttpSession</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> request.getSession();<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> session.getAttribute(<span class="hljs-string">&quot;loginUser&quot;</span>);<br>        <span class="hljs-keyword">if</span> (loginUser != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">// 放行</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-comment">// 拦截住, 未登录, 跳转到登录页</span><br><span class="hljs-comment">/*        session.setAttribute(&quot;msg&quot;, &quot;请先登录&quot;);</span><br><span class="hljs-comment">        response.sendRedirect(&quot;/&quot;);*/</span><br><br>        request.setAttribute(<span class="hljs-string">&quot;msg&quot;</span>, <span class="hljs-string">&quot;请先登录&quot;</span>);<br>        request.getRequestDispatcher(<span class="hljs-string">&quot;/&quot;</span>).forward(request, response);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 目标方法执行完成之后</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> response</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> handler</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> modelAndView</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        log.info(<span class="hljs-string">&quot;postHandle&#123;&#125;&quot;</span>, modelAndView);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 页面渲染之后</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> response</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> handler</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> ex</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterCompletion</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        log.info(<span class="hljs-string">&quot;afterCompletion&#123;&#125;&quot;</span>, ex);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>配置拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.atguigu.boot.config;<br><br><span class="hljs-keyword">import</span> com.atguigu.boot.interceptor.LoginInterceptor;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 1. 编写一个拦截器实现HandlerInterceptor接口</span><br><span class="hljs-comment"> * 2. 拦截器注册到容器中(实现WebMvcConfigurer的addInterceptors)</span><br><span class="hljs-comment"> * 3. 指定拦截规则(如果是拦截所有, 静态资源也会被拦截)</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AdminWebConfig</span>  <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> &#123;<br>        registry.addInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginInterceptor</span>())<br>                .addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>) <span class="hljs-comment">// 所有请求都被拦截包括静态资源</span><br>                .excludePathPatterns(<span class="hljs-string">&quot;/login&quot;</span>, <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-string">&quot;/css/**&quot;</span>, <span class="hljs-string">&quot;/js/**&quot;</span>, <span class="hljs-string">&quot;/images/**&quot;</span>, <span class="hljs-string">&quot;/fonts/**&quot;</span>); <span class="hljs-comment">// 方形的请求</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3、拦截器原理<br>1、根据当前请求，找到<strong>HandlerExecutionChain【</strong>可以处理请求的 handler 以及 handler 的所有 拦截器】<br>2、先来**顺序执行 **所有拦截器的 preHandle 方法</p><ul><li>1、如果当前拦截器 prehandler 返回为 true。则执行下一个拦截器的 preHandle</li><li>2、如果当前拦截器返回为 false。直接 倒序执行所有已经执行了的拦截器的 afterCompletion；</li></ul><p><strong>3、如果任何一个拦截器返回 false。直接跳出不执行目标方法</strong><br><strong>4、所有拦截器都返回 True。执行目标方法</strong><br><strong>5、倒序执行所有拦截器的 postHandle 方法。</strong><br>**6、前面的步骤有任何异常都会直接倒序触发 **afterCompletion<br>7、页面成功渲染完成以后，也会倒序触发 afterCompletion</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html">method要是post请求才能上传文件 enctype=&quot;multipart/form-data&quot;<br>实现文件上传的时候form表单需要指定enctype这个属性<br>多文件上传需要在input标签中加上multiple属性, 表示多个文件上传<br>单文件上传不需要指定multiple<br><span class="hljs-tag">&lt;<span class="hljs-name">form</span></span><br><span class="hljs-tag">  <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;form&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">th:action</span>=<span class="hljs-string">&quot;@&#123;/upload&#125;&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span></span><br><span class="hljs-tag">  <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span></span><br><span class="hljs-tag">&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;exampleInputFile&quot;</span>&gt;</span>头像<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;headerImg&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;exampleInputFile&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;exampleInputFile&quot;</span>&gt;</span>生活照<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;photos&quot;</span> <span class="hljs-attr">multiple</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/upload&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">upload</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam(&quot;email&quot;)</span> String email,</span><br><span class="hljs-params">                     <span class="hljs-meta">@RequestParam(&quot;username&quot;)</span> String username,</span><br><span class="hljs-params">                     <span class="hljs-meta">@RequestPart</span> MultipartFile headerImg,</span><br><span class="hljs-params">                     <span class="hljs-meta">@RequestPart</span> MultipartFile[] photos)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">// MultipartFile是用来接收文件的类型的, 使用@RequestPart这个注解</span><br>    log.info(<span class="hljs-string">&quot;email=&#123;&#125;, username=&#123;&#125;, headerImg=&#123;&#125;, photos=&#123;&#125;&quot;</span>,<br>            email, username, headerImg.getSize(), photos.length);<br><br>    <span class="hljs-keyword">if</span> (!headerImg.isEmpty()) &#123;<br>        <span class="hljs-comment">// 保存到文件服务器 , OSS服务器</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">originalFilename</span> <span class="hljs-operator">=</span> headerImg.getOriginalFilename();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> headerImg.getName();<br>        <span class="hljs-comment">// getName仅仅只是获取到name这个属性, 并不会获取到文件的原生名字</span><br>        <span class="hljs-comment">// 想要获取到文件原生的名字可以使用getOriginalFilename这个方法</span><br>        log.info(<span class="hljs-string">&quot;originalFilename = &#123;&#125;, name = &#123;&#125;&quot;</span>, originalFilename, name);<br>        headerImg.transferTo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:\\upload\\&quot;</span> + originalFilename));<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (MultipartFile photo : photos) &#123;<br>        <span class="hljs-keyword">if</span> (!photo.isEmpty()) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">originalFilename</span> <span class="hljs-operator">=</span> photo.getOriginalFilename();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> photo.getName();<br>            log.info(<span class="hljs-string">&quot;originalFilename = &#123;&#125;, name = &#123;&#125;&quot;</span>, originalFilename, name);<br>            photo.transferTo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:\\upload\\&quot;</span> + originalFilename));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;main&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">配置文件上传大小的,</span> <span class="hljs-string">单个文件最大上限设置10MB</span><br><span class="hljs-attr">单次请求最大100MB</span><br><span class="hljs-attr">spring.servlet.multipart.max-file-size</span>=<span class="hljs-string">10MB</span><br><span class="hljs-attr">spring.servlet.multipart.max-request-size</span>=<span class="hljs-string">100MB</span><br></code></pre></td></tr></table></figure><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><h2 id="Web-原生组件注入"><a href="#Web-原生组件注入" class="headerlink" title="Web 原生组件注入"></a>Web 原生组件注入</h2><h3 id="1-使用-Servlet-API"><a href="#1-使用-Servlet-API" class="headerlink" title="1.使用 Servlet API"></a>1.使用 Servlet API</h3><p>@ServletComponentScan(basePackages &#x3D; “com.atguigu.boot”)<br>指定原生 Servlet 组件都放在哪里<br>@WebServlet(urlPatterns &#x3D; “&#x2F;my”)<br>效果: 直接响应, 没有 Spring 拦截器<br>@WebFilter(urlPatterns &#x3D; {“&#x2F;css&#x2F;<em>“, “&#x2F;images&#x2F;</em>“})<br>@WebListener<br>推荐可以使用这种方式:</p><p>&#x2F;*是 Servlet 的写法<br>&#x2F;**是 Spring 家族的写法</p><h3 id="2-使用-RegistrationBean"><a href="#2-使用-RegistrationBean" class="headerlink" title="2.使用 RegistrationBean"></a>2.使用 RegistrationBean</h3><p><code>ServletRegistrationBean</code>, <code>FilterRegistrationBean</code>, and <code>ServletListenerRegistrationBean</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyRegisterConfig</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ServletRegistrationBean <span class="hljs-title function_">myServlet</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MyServlet</span> <span class="hljs-variable">myServlet</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyServlet</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ServletRegistrationBean</span>(myServlet, <span class="hljs-string">&quot;/my&quot;</span>, <span class="hljs-string">&quot;/my02&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> FilterRegistrationBean <span class="hljs-title function_">myFilter</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MyFilter</span> <span class="hljs-variable">myFilter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyFilter</span>();<br>        <span class="hljs-comment">//return new FilterRegistrationBean(myFilter, myServlet());</span><br>        <span class="hljs-type">FilterRegistrationBean</span> <span class="hljs-variable">filterRegistrationBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FilterRegistrationBean</span>(myFilter);<br>        filterRegistrationBean.setUrlPatterns(Arrays.asList(<span class="hljs-string">&quot;/my&quot;</span>, <span class="hljs-string">&quot;/css/*&quot;</span>));<br>        <span class="hljs-keyword">return</span> filterRegistrationBean;<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ServletListenerRegistrationBean <span class="hljs-title function_">myListener</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MyServletContextListener</span> <span class="hljs-variable">myServletContextListener</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyServletContextListener</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ServletListenerRegistrationBean</span>(myServletContextListener);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="数据访问"><a href="#数据访问" class="headerlink" title="数据访问"></a>数据访问</h2><p>1.导入 jdbc 场景</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/ssm&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC%2B8</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-comment"># 配置数据库的url...</span><br><span class="hljs-comment"># serverTimezone可以就设置为UTC</span><br></code></pre></td></tr></table></figure><h2 id="使用-Druid-数据源"><a href="#使用-Druid-数据源" class="headerlink" title="使用 Druid 数据源"></a>使用 Druid 数据源</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.1.17<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置示例</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/db_account</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.jdbc.Driver</span><br><br>    <span class="hljs-attr">druid:</span><br>      <span class="hljs-attr">aop-patterns:</span> <span class="hljs-string">com.atguigu.admin.*</span> <span class="hljs-comment">#监控SpringBean</span><br>      <span class="hljs-attr">filters:</span> <span class="hljs-string">stat,wall</span> <span class="hljs-comment"># 底层开启功能，stat（sql监控），wall（防火墙）</span><br><br>      <span class="hljs-attr">stat-view-servlet:</span> <span class="hljs-comment"># 配置监控页功能</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">login-username:</span> <span class="hljs-string">admin</span><br>        <span class="hljs-attr">login-password:</span> <span class="hljs-string">admin</span><br>        <span class="hljs-attr">resetEnable:</span> <span class="hljs-literal">false</span><br><br>      <span class="hljs-attr">web-stat-filter:</span> <span class="hljs-comment"># 监控web</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">urlPattern:</span> <span class="hljs-string">/*</span><br>        <span class="hljs-attr">exclusions:</span> <span class="hljs-string">&quot;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&quot;</span><br><br>      <span class="hljs-attr">filter:</span><br>        <span class="hljs-attr">stat:</span> <span class="hljs-comment"># 对上面filters里面的stat的详细配置</span><br>          <span class="hljs-attr">slow-sql-millis:</span> <span class="hljs-number">1000</span><br>          <span class="hljs-attr">logSlowSql:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">wall:</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">config:</span><br>            <span class="hljs-attr">drop-table-allow:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="整合-MyBatis-操作"><a href="#整合-MyBatis-操作" class="headerlink" title="整合 MyBatis 操作"></a>整合 MyBatis 操作</h2><p><a href="https://github.com/mybatis">https://github.com/mybatis</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 配置mybatis规则</span><br><span class="hljs-attr">mybatis:</span><br>  <span class="hljs-attr">config-location:</span> <span class="hljs-string">classpath:mybatis/mybatis-config.xml</span> <span class="hljs-comment"># 全局配置文件位置</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:mybatis/mapper/*.xml</span> <span class="hljs-comment">#sql映射文件位置</span><br><br><span class="hljs-string">Mapper接口</span> <span class="hljs-string">--&gt;</span> <span class="hljs-string">绑定xml</span><br><span class="hljs-string">&lt;mapper</span> <span class="hljs-string">namespace=&quot;com.atguigu.boot.mapper.AccountMapper&quot;&gt;</span><br><br>    <span class="hljs-string">&lt;!--public</span> <span class="hljs-string">Account</span> <span class="hljs-string">getAccount(Long</span> <span class="hljs-string">id);--&gt;</span><br>    <span class="hljs-string">&lt;select</span> <span class="hljs-string">id=&quot;getAccount&quot;</span> <span class="hljs-string">resultType=&quot;com.atguigu.boot.bean.Account&quot;&gt;</span><br>        <span class="hljs-string">select</span> <span class="hljs-string">*</span> <span class="hljs-string">from</span> <span class="hljs-string">account_tbl</span> <span class="hljs-string">where</span> <span class="hljs-string">id</span> <span class="hljs-string">=</span> <span class="hljs-comment">#&#123;id&#125;;</span><br>    <span class="hljs-string">&lt;/select&gt;</span><br><span class="hljs-string">&lt;/mapper&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 配置mybatis规则</span><br><span class="hljs-attr">mybatis:</span><br>  <span class="hljs-comment">#  config-location: classpath:mybatis/mybatis-config.xml</span><br>  <span class="hljs-comment"># 可以不写全局配置文件, 所有全局配置文件的配置都放在configuration配置项中即可</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:mybatis/mapper/*.xml</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-attr">map-underscore-to-camel-case:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ul><li>导入 mybatis 官方 starter</li><li>编写 mapper 接口, 标注@Mapper 注解</li><li>编写 sql 映射文件并绑定 mapper 接口</li><li>在 application.yaml 中制定 Mapper 配置文件的位置, 以及制定全局配置文件的信息(建议: 配置在 mybatis.configuration)</li></ul><p>使用 MyBatisPlus 的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>最新版本<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>分页插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.pagehelper<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>pagehelper<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>最新版本<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="redis-配置"><a href="#redis-配置" class="headerlink" title="redis 配置"></a>redis 配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在 yaml 中配置 redis 的连接 url</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br><span class="hljs-attr">redis:</span><br>  <span class="hljs-attr">url:</span> <span class="hljs-string">redis://192.168.1.100:6379</span><br> <span class="hljs-comment">#url: redis://root:atguigu@192.168.1.100:6379</span><br><span class="hljs-comment"># redis://账户:密码@ip:端口</span><br><span class="hljs-comment"># 没有设置redis密码的时候可以省略&quot;账户:密码&quot;</span><br><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># 或者把url分开成host, port, password三个参数来连接也是可以的</span><br></code></pre></td></tr></table></figure><p>RedisTemplate 与 Lettuce</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br>StringRedisTemplate redisTemplate;<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testRedis</span><span class="hljs-params">()</span> &#123;<br>    ValueOperations&lt;String, String&gt; operations = redisTemplate.opsForValue();<br>    operations.set(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;world&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">hello</span> <span class="hljs-operator">=</span> operations.get(<span class="hljs-string">&quot;hello&quot;</span>);<br>    System.out.println(hello);<br>&#125;<br></code></pre></td></tr></table></figure><p>切换 jedis</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>redis.clients<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jedis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br><span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-attr">client-type:</span> <span class="hljs-string">jedis</span><br>    <span class="hljs-comment"># client-type: jedis</span><br>    <span class="hljs-comment"># jedis:</span><br>    <span class="hljs-comment">#   pool:</span><br>    <span class="hljs-comment">#     max-active:</span><br>    <span class="hljs-comment"># client-type: lettuce</span><br>    <span class="hljs-comment"># lettuce:</span><br>    <span class="hljs-comment">#   pool:</span><br>    <span class="hljs-comment">#     max-active:</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-meta">@Autowired</span><br>    RedisConnectionFactory redisConnectionFactory;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testRedis</span><span class="hljs-params">()</span> &#123;<br>        ValueOperations&lt;String, String&gt; operations = redisTemplate.opsForValue();<br>        operations.set(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;world&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">hello</span> <span class="hljs-operator">=</span> operations.get(<span class="hljs-string">&quot;hello&quot;</span>);<br>        System.out.println(hello);<br><br>        System.out.println(redisConnectionFactory.getClass());<br>    &#125;<br><br>输出结果<br>world<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">org</span>.springframework.data.redis.connection.jedis.JedisConnectionFactory<br></code></pre></td></tr></table></figure><p>一个小 demo, 用来记录用户访问了当前 uri 的次数</p><p>配置拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedisUrlCountInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">HandlerInterceptor</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    StringRedisTemplate redisTemplate;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">preHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">uri</span> <span class="hljs-operator">=</span> request.getRequestURI();<br>        <span class="hljs-comment">// 默认每次访问当前uri就会计数加1</span><br>        redisTemplate.opsForValue().increment(uri);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AdminWebConfig</span>  <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Filter, Interceptor 几乎拥有相同的功能?</span><br><span class="hljs-comment">     * 1. Filter是Servlet定义的原生组件, 好处, 脱离Spring应用也能使用</span><br><span class="hljs-comment">     * 2. Interceptor是Spring定义的接口, 可以使用Spring的自动装配等功能</span><br><span class="hljs-comment">     */</span><br><br>    <span class="hljs-meta">@Autowired</span><br>    RedisUrlCountInterceptor redisUrlCountInterceptor;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> &#123;<br>        registry.addInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginInterceptor</span>())<br>                .addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>) <span class="hljs-comment">// 所有请求都被拦截包括静态资源</span><br>                .excludePathPatterns(<span class="hljs-string">&quot;/login&quot;</span>, <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-string">&quot;/css/**&quot;</span>, <span class="hljs-string">&quot;/js/**&quot;</span>, <span class="hljs-string">&quot;/images/**&quot;</span>, <span class="hljs-string">&quot;/fonts/**&quot;</span>); <span class="hljs-comment">// 放行的请求</span><br><br>        registry.addInterceptor(redisUrlCountInterceptor)<br>                .addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>)<br>                .excludePathPatterns(<span class="hljs-string">&quot;/login&quot;</span>, <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-string">&quot;/css/**&quot;</span>, <span class="hljs-string">&quot;/js/**&quot;</span>, <span class="hljs-string">&quot;/images/**&quot;</span>, <span class="hljs-string">&quot;/fonts/**&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-meta">@Autowired</span><br>    StringRedisTemplate redisTemplate;<br><br><span class="hljs-meta">@GetMapping(&quot;/main.html&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">mainPage</span><span class="hljs-params">(HttpSession session, Model model)</span> &#123;<br><br>        log.info(<span class="hljs-string">&quot;当前方法&#123;&#125;&quot;</span>, <span class="hljs-string">&quot;mainPage&quot;</span>);<br>        <span class="hljs-comment">// 是否登录, 拦截器, 过滤器</span><br><span class="hljs-comment">/*        if (session.getAttribute(&quot;loginUser&quot;) == null) &#123;</span><br><span class="hljs-comment">            model.addAttribute(&quot;msg&quot;, &quot;请先登录账户&quot;);</span><br><span class="hljs-comment">            return &quot;login&quot;;</span><br><span class="hljs-comment">        &#125; else &#123;</span><br><span class="hljs-comment">            // 回到登录页面</span><br><span class="hljs-comment">            return &quot;main&quot;;</span><br><span class="hljs-comment">        &#125;*/</span><br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;/main.html&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">s1</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;/sql&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;/dynamic_table&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">s3</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue().get(<span class="hljs-string">&quot;/error&quot;</span>);<br>        model.addAttribute(<span class="hljs-string">&quot;mainCount&quot;</span>, s);<br>        model.addAttribute(<span class="hljs-string">&quot;sqlCount&quot;</span>, s1);<br>        model.addAttribute(<span class="hljs-string">&quot;dynamic_tableCount&quot;</span>, s2);<br>        model.addAttribute(<span class="hljs-string">&quot;errorCount&quot;</span>, s3);<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;main&quot;</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@DisplayName(&quot;junit5功能测试类&quot;)</span><br><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Junit5Test</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    JdbcTemplate jdbcTemplate;<br><br>    <span class="hljs-meta">@DisplayName(&quot;测试displayname注解&quot;)</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testDisplayName</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-number">1</span>);<br>        System.out.println(jdbcTemplate);<br>    &#125;<br><br>    <span class="hljs-meta">@Disabled</span><br>    <span class="hljs-meta">@DisplayName(&quot;测试方法2&quot;)</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">test2</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-number">1</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@RepeatedTest(5)</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">test3</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-number">3</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 规定方法超时时间, 超出时间测试出异常</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> InterruptedException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-meta">@Timeout(value = 500, unit = TimeUnit.MILLISECONDS)</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testTimeout</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> InterruptedException &#123;<br>        Thread.sleep(<span class="hljs-number">600</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@BeforeEach</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testBeforeEach</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;测试就要开始了...&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@AfterEach</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testAfterEach</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;测试结束了...&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@BeforeAll</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testBeforeAll</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;所有测试就要开始了...&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@AfterAll</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testAfterAll</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;所有测试已经结束了...&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>打开 Java 监控和管理控制台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cmd<br>C:\Users\肉豆蔻吖&gt;jconsole<br></code></pre></td></tr></table></figure><h2 id="application-profile-功能"><a href="#application-profile-功能" class="headerlink" title="application-profile 功能"></a>application-profile 功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">  ○ 命令行激活：java -jar xxx.jar --spring.profiles.active=prod  --person.name=haha<br>    ■ 修改配置文件的任意值，命令行优先<br>E:\Code\SpringBoot\boot-09-features-profiles\target&gt;java -jar boot-09-features-profiles-0.0.1-SNAPSHOT.jar --spring.profiles.active=<span class="hljs-built_in">test</span><br><br>E:\Code\SpringBoot\boot-09-features-profiles\target&gt;java -jar boot-09-features-profiles-0.0.1-SNAPSHOT.jar --spring.profiles.active=<span class="hljs-built_in">test</span> --person.name=hello<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>SpringBoot</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
